<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>进击的程序媛，Laker&#39;s blog</title>
  <subtitle>进击的程序媛，江小湖Laker</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://laker.me/blog/"/>
  <updated>2018-12-22T11:42:21.000Z</updated>
  <id>http://laker.me/blog/</id>
  
  <author>
    <name>Laker Huang</name>
    <email>younglaker8#gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Use ThinkPHP Develope API</title>
    <link href="http://laker.me/blog/2018/12/19/18_1219_wechat/"/>
    <id>http://laker.me/blog/2018/12/19/18_1219_wechat/</id>
    <published>2018-12-19T00:24:00.000Z</published>
    <updated>2018-12-22T11:42:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx3.sinaimg.cn/large/6d184cefly1fxnkwr63qej20oz046aay.jpg" alt="Use ThinkPHP Develope WeChat Official Account API"></p>
<a id="more"></a>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
<h2 id="Create-database-data"><a href="#Create-database-data" class="headerlink" title="Create database data"></a>Create database data</h2><p>Import this sql file into your database, you can commit execute sql or import by tools:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for news</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`news`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`news`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`content`</span> <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=MyISAM AUTO_INCREMENT=<span class="number">5</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'新闻表'</span>;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of news</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'新闻1'</span>, <span class="string">'新闻1内容'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'新闻2'</span>, <span class="string">'新闻2内容'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'新闻3'</span>, <span class="string">'新闻3内容'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'房价又涨了'</span>, <span class="string">'据新华社消息：上海均价环比上涨5%'</span>);</div></pre></td></tr></table></figure>
<h2 id="Write-API"><a href="#Write-API" class="headerlink" title="Write API"></a>Write API</h2><p>Wechat Official Account documents:<br><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140840" target="_blank" rel="external">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140840</a></p>
<p><img src="https://ws4.sinaimg.cn/large/6d184cefly1fyfor5rxodj20io0bw0tk.jpg" alt="image"></p>
<p>New files: <code>application/api/controller/News.php</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">News</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        $id = input(<span class="string">'id'</span>);</div><div class="line">        $model = model(<span class="string">'News'</span>);</div><div class="line">        $data = $model-&gt;getNews($id);</div><div class="line">        <span class="keyword">if</span> ($data) &#123;</div><div class="line">            $code = <span class="number">200</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            $code = <span class="number">404</span>;</div><div class="line">        &#125;</div><div class="line">        $data = [</div><div class="line">            <span class="string">'code'</span> =&gt; $code,</div><div class="line">            <span class="string">'data'</span> =&gt; $data</div><div class="line">        ];</div><div class="line">        <span class="keyword">return</span> json($data);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>New files: <code>application/api/model/News.php</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">model</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">News</span> <span class="keyword">extends</span> <span class="title">Model</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNews</span><span class="params">($id = <span class="number">1</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        $res = Db::name(<span class="string">'news'</span>)-&gt;where(<span class="string">'id'</span>, $id)-&gt;select();</div><div class="line">        <span class="keyword">return</span> $res;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewsList</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        $res = Db::name(<span class="string">'news'</span>)-&gt;select();</div><div class="line">        <span class="keyword">return</span> $res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Visit API:</p>
<p><img src="https://ws2.sinaimg.cn/large/6d184cefly1fyfqyhq1sij213q050gmr.jpg" alt="image"></p>
<h2 id="Shorten-API-address"><a href="#Shorten-API-address" class="headerlink" title="Shorten API address"></a>Shorten API address</h2><p>According to the ThinkPHP router rules, we can edit it in <code>application/route.php</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Route</span>;</div><div class="line"></div><div class="line">Route::rule(<span class="string">'news/:id'</span>,<span class="string">'api/news/read'</span>);</div></pre></td></tr></table></figure>
<p>Visit new route:</p>
<p><img src="https://ws4.sinaimg.cn/large/6d184cefly1fyfqyznk0vj2136044my6.jpg" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/6d184cefly1fxnkwr63qej20oz046aay.jpg&quot; alt=&quot;Use ThinkPHP Develope WeChat Official Account API&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Server" scheme="http://laker.me/blog/categories/Server/"/>
    
    
      <category term="Server" scheme="http://laker.me/blog/tags/Server/"/>
    
      <category term="PHP" scheme="http://laker.me/blog/tags/PHP/"/>
    
      <category term="Tencent Cloud" scheme="http://laker.me/blog/tags/Tencent-Cloud/"/>
    
      <category term="ThinkPHP" scheme="http://laker.me/blog/tags/ThinkPHP/"/>
    
      <category term="MySql" scheme="http://laker.me/blog/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>WeChat Official Accounts with Access_token and Menu</title>
    <link href="http://laker.me/blog/2018/12/05/18_1205_wechat/"/>
    <id>http://laker.me/blog/2018/12/05/18_1205_wechat/</id>
    <published>2018-12-05T00:24:00.000Z</published>
    <updated>2018-12-05T07:16:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx2.sinaimg.cn/large/6d184cefly1fxnkwi98vuj20p0046dg6.jpg" alt="WeChat Official Accounts: Access_token and Menu"></p>
<a id="more"></a>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">laker.me</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
<h2 id="Get-Access-token"><a href="#Get-Access-token" class="headerlink" title="Get Access_token"></a>Get Access_token</h2><p>Add your Official Accounts appID and appsecret to get access_token, and remember it.</p>
<p><a href="https://mp.weixin.qq.com/debug/cgi-bin/apiinfo?t=index&amp;type=%E5%9F%BA%E7%A1%80%E6%94%AF%E6%8C%81&amp;form=%E8%8E%B7%E5%8F%96access_token%E6%8E%A5%E5%8F%A3%20/token" target="_blank" rel="external">https://mp.weixin.qq.com/debug/cgi-bin/apiinfo?t=index&amp;type=%E5%9F%BA%E7%A1%80%E6%94%AF%E6%8C%81&amp;form=%E8%8E%B7%E5%8F%96access_token%E6%8E%A5%E5%8F%A3%20/token</a></p>
<p>In your database, new a table using this sql code,  and modify your Official Accounts appID, appsecret and access_token in <code>&#39;your_appid&#39;, &#39;your_appsecret&#39;, &#39;your_access_token&#39;</code></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`wxtoken`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`appid`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`appsecret`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`access_token`</span> <span class="built_in">varchar</span>(<span class="number">1024</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`AccessExpires`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`TIMESTAMP`</span> <span class="keyword">timestamp</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span></div><div class="line">    ) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`wxtoken`</span> (<span class="string">`id`</span>, <span class="string">`appid`</span>, <span class="string">`appsecret`</span>, <span class="string">`access_token`</span>, <span class="string">`AccessExpires`</span>, <span class="string">`TIMESTAMP`</span>) <span class="keyword">VALUES</span></div><div class="line">(<span class="number">1</span>, <span class="string">'your_appid'</span>, <span class="string">'your_appsecret'</span>, <span class="string">'your_access_token'</span>, <span class="number">1543244037</span>, <span class="string">'2018-11-26 12:53:57'</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`wxtoken`</span></div><div class="line">  <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`wxtoken`</span></div><div class="line">  <span class="keyword">MODIFY</span> <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,AUTO_INCREMENT=<span class="number">2</span>;</div></pre></td></tr></table></figure>
<p>And a <code>wx</code> directory in ThinkPHP project: </p>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fxnhyj36c1j20j20hodh5.jpg" alt="wx directory"></p>
<p>New a <code>controller</code> directory and <code>index.php</code>:</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxnhypexuij20je0d2jsg.jpg" alt="controller"></p>
<p>Add this code to <code>Index.php</code>, and modify your Official Accounts appID and appsecret in <code>&quot;你的公众号appid&quot;,&quot;你的公众号appsecret&quot;</code> :</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    $access_token = <span class="keyword">$this</span>-&gt;getToken();</div><div class="line">    <span class="keyword">echo</span> $access_token;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getToken</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;checkAccessToken(<span class="string">"你的公众号appid"</span>,<span class="string">"你的公众号appsecret"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkAccessToken</span><span class="params">($appid,$appsecret)</span></span>&#123;</div><div class="line">    $condition = <span class="keyword">array</span>(<span class="string">'appid'</span>=&gt;$appid,<span class="string">'appsecret'</span>=&gt;$appsecret);</div><div class="line">    $access_token_set=DB(<span class="string">'wxtoken'</span>)-&gt;where($condition)-&gt;find();<span class="comment">//获取数据</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span>($access_token_set)&#123;</div><div class="line">        <span class="comment">//检查是否超时，超时了重新获取</span></div><div class="line">        <span class="keyword">if</span>($access_token_set[<span class="string">'AccessExpires'</span>]&gt;time())&#123;</div><div class="line">            <span class="comment">//未超时，直接返回access_token</span></div><div class="line">            <span class="keyword">return</span> $access_token_set[<span class="string">'access_token'</span>];</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="comment">//已超时，重新获取</span></div><div class="line">            $url_get=<span class="string">'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid='</span>.$appid.<span class="string">'&amp;secret='</span>.$appsecret;</div><div class="line">            $json= <span class="keyword">$this</span>-&gt;https_request($url_get);</div><div class="line">            var_dump($json);</div><div class="line">            $access_token=$json[<span class="string">'access_token'</span>];</div><div class="line">            $AccessExpires=time()+intval($json[<span class="string">'expires_in'</span>]);</div><div class="line">            $data[<span class="string">'access_token'</span>]=$access_token;</div><div class="line">            $data[<span class="string">'AccessExpires'</span>]=$AccessExpires;</div><div class="line">            $result = DB(<span class="string">'wxtoken'</span>)-&gt;where($condition)-&gt;update($data);<span class="comment">//更新数据</span></div><div class="line">            <span class="keyword">if</span>($result)&#123;</div><div class="line">                <span class="keyword">return</span> $access_token;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">return</span> $access_token;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"appid或appsecret不正确"</span>;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">https_request</span> <span class="params">($url)</span></span>&#123;</div><div class="line">    $ch = curl_init();</div><div class="line">    curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">    curl_setopt($ch,CURLOPT_RETURNTRANSFER,<span class="number">1</span>);</div><div class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</div><div class="line">    $out = curl_exec($ch);</div><div class="line">    curl_close($ch);</div><div class="line">    <span class="keyword">return</span>  json_decode($out,<span class="keyword">true</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fxnhz2j3s1j20j40cugn4.jpg" alt="Code"></p>
<p>Visit your api: </p>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fxnhyvioa8j217206sgov.jpg" alt="Visit"></p>
<h2 id="Create-a-menu-in-Official-Accounts"><a href="#Create-a-menu-in-Official-Accounts" class="headerlink" title="Create a menu in Official Accounts"></a>Create a menu in Official Accounts</h2><p>Modify <code>index()</code>:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    $menu = <span class="keyword">$this</span>-&gt;createmenu();</div><div class="line">    <span class="keyword">echo</span> $menu;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Add this code into <code>index.php</code></p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">public function createmenu()&#123;</div><div class="line">  <span class="variable">$data</span>='&#123;</div><div class="line">   <span class="string">"button"</span>:[</div><div class="line">   &#123;</div><div class="line">        <span class="string">"type"</span>:<span class="string">"click"</span>,</div><div class="line">        <span class="string">"name"</span>:<span class="string">"今日歌曲1"</span>,</div><div class="line">        <span class="string">"key"</span>:<span class="string">"V1001_TODAY_MUSIC"</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">         <span class="string">"name"</span>:<span class="string">"菜单"</span>,</div><div class="line">         <span class="string">"sub_button"</span>:[</div><div class="line">         &#123;</div><div class="line">             <span class="string">"type"</span>:<span class="string">"view"</span>,</div><div class="line">             <span class="string">"name"</span>:<span class="string">"搜索"</span>,</div><div class="line">             <span class="string">"url"</span>:<span class="string">"http://www.soso.com/"</span></div><div class="line">          &#125;,</div><div class="line">          &#123;</div><div class="line">             <span class="string">"type"</span>:<span class="string">"click"</span>,</div><div class="line">             <span class="string">"name"</span>:<span class="string">"赞一下我们"</span>,</div><div class="line">             <span class="string">"key"</span>:<span class="string">"V1001_GOOD"</span></div><div class="line">          &#125;]</div><div class="line">     &#125;]</div><div class="line">  &#125;';</div><div class="line">  <span class="variable">$access_token</span>=<span class="variable">$this</span>-&gt;<span class="keyword">getToken</span>();</div><div class="line">  <span class="variable">$url</span>='https:<span class="comment">//api.weixin.qq.com/cgi-bin/menu/create?access_token='.$access_token;</span></div><div class="line">  var_dump(<span class="variable">$url</span>);</div><div class="line">  var_dump(<span class="variable">$data</span>);</div><div class="line">  <span class="variable">$result</span>= <span class="variable">$this</span>-&gt;postcurl(<span class="variable">$url</span>,<span class="variable">$data</span>);</div><div class="line">  var_dump(<span class="variable">$result</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">function postcurl(<span class="variable">$url</span>,<span class="variable">$data</span> = null)&#123;</div><div class="line">    <span class="variable">$ch</span> = curl_init();</div><div class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</div><div class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, FALSE);</div><div class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, FALSE);</div><div class="line">    <span class="keyword">if</span> (!empty(<span class="variable">$data</span>))&#123;</div><div class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST, TRUE);</div><div class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$data</span>);</div><div class="line">    &#125;</div><div class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, 1);</div><div class="line">    <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);</div><div class="line">    curl_close(<span class="variable">$ch</span>);</div><div class="line">    <span class="keyword">return</span>  <span class="variable">$output</span>=json_decode(<span class="variable">$output</span>,true);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Visit the api <code>/index.php/wx/index/index</code>:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxnhzb9vddj210007ugoe.jpg" alt="Visit"></p>
<p>Visit the Official Account:</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxni2kkiicj20u01femyj.jpg" alt="Visit"></p>
<h2 id="Get-user-data"><a href="#Get-user-data" class="headerlink" title="Get user data"></a>Get user data</h2><p>Modify <code>index()</code>:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    $data = <span class="keyword">$this</span>-&gt;getuser();</div><div class="line">    <span class="keyword">echo</span> $data;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Add this code into <code>index.php</code>:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getuser</span><span class="params">()</span></span>&#123;</div><div class="line">     $access_token=<span class="keyword">$this</span>-&gt;getToken();</div><div class="line">     $url_get=<span class="string">'https://api.weixin.qq.com/cgi-bin/user/get?access_token='</span>.$access_token;</div><div class="line">     $user_json= <span class="keyword">$this</span>-&gt;https_request($url_get);</div><div class="line">     <span class="comment">//var_dump($json);</span></div><div class="line">     $url_get=<span class="string">'https://api.weixin.qq.com/cgi-bin/user/info?access_token='</span>.$access_token.<span class="string">'&amp;openid='</span>.$user_json[<span class="string">'data'</span>][<span class="string">'openid'</span>][<span class="number">0</span>].<span class="string">'&amp;lang=zh_CN'</span>;</div><div class="line">     $user_info= <span class="keyword">$this</span>-&gt;https_request($url_get);</div><div class="line">     var_dump($user_info);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Visit the api <code>/index.php/wx/index/index</code>:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxnhzb9vddj210007ugoe.jpg" alt="Visit"></p>
<p>在此输入正文</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/large/6d184cefly1fxnkwi98vuj20p0046dg6.jpg&quot; alt=&quot;WeChat Official Accounts: Access_token and Menu&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Server" scheme="http://laker.me/blog/categories/Server/"/>
    
    
      <category term="Server" scheme="http://laker.me/blog/tags/Server/"/>
    
      <category term="PHP" scheme="http://laker.me/blog/tags/PHP/"/>
    
      <category term="Tencent Cloud" scheme="http://laker.me/blog/tags/Tencent-Cloud/"/>
    
      <category term="ThinkPHP" scheme="http://laker.me/blog/tags/ThinkPHP/"/>
    
      <category term="MySql" scheme="http://laker.me/blog/tags/MySql/"/>
    
      <category term="Wechat" scheme="http://laker.me/blog/tags/Wechat/"/>
    
  </entry>
  
  <entry>
    <title>MySql and Navicat in MacOS</title>
    <link href="http://laker.me/blog/2018/11/28/18_1128_mysql_navicat/"/>
    <id>http://laker.me/blog/2018/11/28/18_1128_mysql_navicat/</id>
    <published>2018-11-28T00:24:00.000Z</published>
    <updated>2018-11-28T03:06:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx3.sinaimg.cn/large/6d184cefly1fxnkwna76bj20oz0460tc.jpg" alt="MySql and Navicat in MacOS"></p>
<a id="more"></a>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">laker.me</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
<h2 id="Install-MySql"><a href="#Install-MySql" class="headerlink" title="Install MySql"></a>Install MySql</h2><h3 id="Method-one"><a href="#Method-one" class="headerlink" title="Method one"></a>Method one</h3><p>Download the installation file, choose the dmg file: </p>
<p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">https://dev.mysql.com/downloads/mysql/</a></p>
<p>Then install the package step by step.</p>
<h3 id="Method-two"><a href="#Method-two" class="headerlink" title="Method two"></a>Method two</h3><p>Install by command line:</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>mysql</div></pre></td></tr></table></figure>
<h2 id="Start-MySql"><a href="#Start-MySql" class="headerlink" title="Start MySql"></a>Start MySql</h2><h3 id="Add-system-enviroment"><a href="#Add-system-enviroment" class="headerlink" title="Add system enviroment"></a>Add system enviroment</h3><p>Open terminal, I use zsh, so I edit zsh_profile, if you use bash, edit your bash_profile:</p>
<pre><code>$ vim ~/.zsh_profile
</code></pre><p>Add zsh_profile </p>
<pre><code>$ source ~/.zsh_profile
</code></pre><h3 id="Login-database"><a href="#Login-database" class="headerlink" title="Login database"></a>Login database</h3><p>Your can use GUI to start or stop sever in system preference :</p>
<p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fxfofwpamfj20l40iyacu.jpg" alt="manage"></p>
<p>Or use command line.</p>
<h2 id="Connect-to-Navicat"><a href="#Connect-to-Navicat" class="headerlink" title="Connect to Navicat"></a>Connect to Navicat</h2><p>New MySQL connection:</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxfohrr6lfj20ri06ujtq.jpg" alt="connection"></p>
<p>Set a name and add password:</p>
<p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fxfohwj7nhj20qs0fy0uu.jpg" alt="config"></p>
<p>Done:</p>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fxfoi4e542j20bg07yjs8.jpg" alt="success"></p>
<h2 id="Import-sql-file"><a href="#Import-sql-file" class="headerlink" title="Import sql file:"></a>Import sql file:</h2><p>Import sql file:</p>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fxfog0c1x5j20fo0hegnq.jpg" alt="Import"></p>
<p>Done, I uesd about 30 minutes to import 2kw items, much faster than my classmates, most of them cost several hours :</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxnkomn3fmj20go0bj3zq.jpg" alt="Done"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx3.sinaimg.cn/large/6d184cefly1fxnkwna76bj20oz0460tc.jpg&quot; alt=&quot;MySql and Navicat in MacOS&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SQL" scheme="http://laker.me/blog/categories/SQL/"/>
    
    
      <category term="Server" scheme="http://laker.me/blog/tags/Server/"/>
    
      <category term="MySql" scheme="http://laker.me/blog/tags/MySql/"/>
    
      <category term="Navicat" scheme="http://laker.me/blog/tags/Navicat/"/>
    
  </entry>
  
  <entry>
    <title>Develope WeChat Official Account&#39;s Hello Message</title>
    <link href="http://laker.me/blog/2018/11/25/18_1125_wechat_hello/"/>
    <id>http://laker.me/blog/2018/11/25/18_1125_wechat_hello/</id>
    <published>2018-11-25T00:24:00.000Z</published>
    <updated>2018-11-28T02:58:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx2.sinaimg.cn/large/6d184cefly1fxnkwi98vuj20p0046dg6.jpg" alt="Develope WeChat Official Account&#39;s Hello Message"></p>
<a id="more"></a>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">laker.me</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
<h2 id="Apply-test-account"><a href="#Apply-test-account" class="headerlink" title="Apply test account"></a>Apply test account</h2><p>Apply for Wechat testing account:</p>
<p><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421137524" target="_blank" rel="external">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421137524</a></p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxetxsngt1j20x40hqdif.jpg" alt="Application"></p>
<h2 id="Connect-WeChat-server-with"><a href="#Connect-WeChat-server-with" class="headerlink" title="Connect WeChat server with"></a>Connect WeChat server with</h2><p>Enter your testing account, and set your server address and the director <code>wx</code> for WeChat server. Set a token name what ever you like: </p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxev12r26ej20jq0boq3p.jpg" alt="token name"></p>
<p>Enter your Baota Panel, new a file <code>wx</code> in <code>application/public/</code></p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxeycapacwj20q00faabs.jpg" alt="Baota Panel"></p>
<p>Add a new file  <code>index.php</code> in <code>wx</code></p>
<p>Function:</p>
<ul>
<li>Connect to WeChat server</li>
<li>When someone subscribes, reply a hello message</li>
<li>When get user text messge, reply what he sent</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line">    <span class="comment">/*</span></div><div class="line">    * Connect to WeChat server</div><div class="line">    */</div><div class="line">    <span class="comment">// Get signature nonce token timestamp echostr</span></div><div class="line">    $nonce     = $_GET[<span class="string">'nonce'</span>];</div><div class="line">    $token     = <span class="string">'YOUR_TOKEN'</span>;</div><div class="line">    $timestamp = $_GET[<span class="string">'timestamp'</span>];</div><div class="line">    $echostr   = $_GET[<span class="string">'echostr'</span>];</div><div class="line">    $signature = $_GET[<span class="string">'signature'</span>];</div><div class="line">    <span class="comment">// Set it as array, and sort</span></div><div class="line">    $array = <span class="keyword">array</span>();</div><div class="line">    $array = <span class="keyword">array</span>($nonce, $timestamp, $token);</div><div class="line">    sort($array);</div><div class="line">    <span class="comment">// Join them as a string, use sha1 to encrypt, and check with signature</span></div><div class="line">    $str = sha1( implode( $array ) );</div><div class="line">    </div><div class="line">    <span class="comment">//The first time weixin api</span></div><div class="line">    <span class="keyword">if</span>( $str == $signature &amp;&amp; $echostr )&#123;</div><div class="line">        <span class="keyword">echo</span>  $echostr;</div><div class="line">        <span class="keyword">exit</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">/*</span></div><div class="line">        * When someone subscribes, reply a hello message</div><div class="line">        */</div><div class="line">        <span class="comment">// 1. Get the posted xml data from Weixin</span></div><div class="line">        $postArr = $GLOBALS[<span class="string">'HTTP_RAW_POST_DATA'</span>];</div><div class="line">        <span class="comment">// 2. Deal with message type and set reply type and content</span></div><div class="line">        $postObj = simplexml_load_string( $postArr );</div><div class="line">        <span class="comment">// Check if the data is subscription event</span></div><div class="line">        <span class="keyword">if</span>( strtolower( $postObj-&gt;MsgType) == <span class="string">'event'</span>)&#123;</div><div class="line">            <span class="comment">// If it'is subscribe event</span></div><div class="line">            <span class="keyword">if</span>( strtolower($postObj-&gt;Event == <span class="string">'subscribe'</span>) )&#123;</div><div class="line">                <span class="comment">// Reply text message </span></div><div class="line">                $toUser   = $postObj-&gt;FromUserName;</div><div class="line">                $fromUser = $postObj-&gt;ToUserName;</div><div class="line">                $time     = time();</div><div class="line">                $msgType  =  <span class="string">'text'</span>;</div><div class="line">                $content  = <span class="string">'Hello, welcome~ '</span>.$postObj-&gt;FromUserName.<span class="string">'-'</span>.$postObj-&gt;ToUserName;;</div><div class="line">                $template = <span class="string">"&lt;xml&gt;</span></div><div class="line">                                &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</div><div class="line">                                &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</div><div class="line">                                &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</div><div class="line">                                &lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;</div><div class="line">                                &lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;</div><div class="line">                                &lt;/xml&gt;";</div><div class="line">                $info     = sprintf($template, $toUser, $fromUser, $time, $msgType, $content);</div><div class="line">                <span class="keyword">echo</span> $info;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/*</span></div><div class="line">        * When get user text messge, reply what he sent</div><div class="line">        */</div><div class="line">        <span class="comment">// Check if the data is text</span></div><div class="line">        <span class="keyword">if</span>( strtolower( $postObj-&gt;MsgType) == <span class="string">'text'</span>)&#123;</div><div class="line">             <span class="comment">// Get text message</span></div><div class="line">        $content = $postObj-&gt;Content;</div><div class="line">                <span class="comment">// Reply text message </span></div><div class="line">                $toUser   = $postObj-&gt;FromUserName;</div><div class="line">                $fromUser = $postObj-&gt;ToUserName;</div><div class="line">                $time     = time();</div><div class="line">                $msgType  =  <span class="string">'text'</span>;</div><div class="line">                $content  = <span class="string">'The content you sent is '</span>.$content;</div><div class="line">                $template = <span class="string">"&lt;xml&gt;</span></div><div class="line">                                &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</div><div class="line">                                &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</div><div class="line">                                &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</div><div class="line">                                &lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;</div><div class="line">                                &lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;</div><div class="line">                                &lt;/xml&gt;";</div><div class="line">                $info     = sprintf($template, $toUser, $fromUser, $time, $msgType, $content);</div><div class="line">                <span class="keyword">echo</span> $info;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>In  Official Accounts，when you subscibe, it will say hello to you . When you send a text, it will send what you sent:</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxnj4rdnwbj20u00w1jvy.jpg" alt="Done"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/large/6d184cefly1fxnkwi98vuj20p0046dg6.jpg&quot; alt=&quot;Develope WeChat Official Account&amp;#39;s Hello Message&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Server" scheme="http://laker.me/blog/categories/Server/"/>
    
    
      <category term="Server" scheme="http://laker.me/blog/tags/Server/"/>
    
      <category term="PHP" scheme="http://laker.me/blog/tags/PHP/"/>
    
      <category term="Tencent Cloud" scheme="http://laker.me/blog/tags/Tencent-Cloud/"/>
    
      <category term="ThinkPHP" scheme="http://laker.me/blog/tags/ThinkPHP/"/>
    
      <category term="MySql" scheme="http://laker.me/blog/tags/MySql/"/>
    
      <category term="Wechat" scheme="http://laker.me/blog/tags/Wechat/"/>
    
  </entry>
  
  <entry>
    <title>Install ThinkPHP in Tencent Cloud</title>
    <link href="http://laker.me/blog/2018/11/20/18_1120_thinkphp_mysql/"/>
    <id>http://laker.me/blog/2018/11/20/18_1120_thinkphp_mysql/</id>
    <published>2018-11-20T00:24:00.000Z</published>
    <updated>2018-11-20T15:26:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx4.sinaimg.cn/large/6d184cefly1fx7m4l3l8sj20p0046wf0.jpg" alt="Tencent Cloud and Baota Panel"></p>
<a id="more"></a>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">laker.me</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Install ThinkPHP 5 in Baota Panel:</p>
<p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fxev3h4cgsj20vp0nu78l.jpg" alt="ThinkPHP"></p>
<p>Choose ThinkPHP</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxetszitejj21k40muag8.jpg" alt="ThinkPHP"></p>
<p>Add your server infomation:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxettd9s42j20tw0pc76n.jpg" alt="server infomation"></p>
<p>Finish installation</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxettjiz72j20oo0bgmyu.jpg" alt="Finish"></p>
<p>You can visit your website now:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxettow4m5j20xk0m241h.jpg" alt="visit"></p>
<p>You can edit the welcome message:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxetubwd72j216o0hs40u.jpg" alt="edit"></p>
<h2 id="Create-a-database-table"><a href="#Create-a-database-table" class="headerlink" title="Create a database table"></a>Create a database table</h2><p>Manage your database:</p>
<p><img src="http://wx2.sinaimg.cn/large/6d184cefly1fxetup3k4pj21sa0daad4.jpg" alt="database"></p>
<p>Enter phpMyadmin:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxetuyfimpj21560gun16.jpg" alt="phpMyadmin"></p>
<p>Create a user table:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxetv7rxffj20pl0el41v.jpg" alt="user table"></p>
<p>Insert  a data for admin user:</p>
<ul>
<li>name: admin</li>
<li>pwd: 21232f297a57a5a743894a0e4a801c3 (admin)</li>
</ul>
<h2 id="Create-a-login-page"><a href="#Create-a-login-page" class="headerlink" title="Create a login page"></a>Create a login page</h2><p>Connect ThinkPHP to database:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxetvu2j4ej20te0lk78l.jpg" alt="Connect"></p>
<p>Edit config file for debug pattern:</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fxetwn4el5j20v40jkwhw.jpg" alt="config"></p>
<p>Add a view file:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fxetwdrbq2j20le0ewq4d.jpg" alt="view"></p>
<p><code>application/index/view/login/index.html</code></p>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login system<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/static/bootstrap/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"gray-bg"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-7"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ibox float-e-margins"</span>&gt;</span>            </div><div class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ibox-content"</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">                      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-6 b-r"</span>&gt;</span></div><div class="line">                          <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"m-t-none m-b"</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">                          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Welcome (⊙o⊙)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                          <span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">action</span>=<span class="string">"</span></span><span class="template-variable">&#123;:url('login/dologin')&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></div><div class="line">                              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">                                  <span class="tag">&lt;<span class="name">label</span>&gt;</span>Useranme<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">                                  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Input your name"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"user_name"</span>&gt;</span></div><div class="line">                              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">                                  <span class="tag">&lt;<span class="name">label</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">                                  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"Input your password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"user_pwd"</span>&gt;</span></div><div class="line">                              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                              <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">                                  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-primary pull-right m-t-n-xs"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line">                                  <span class="tag">&lt;/<span class="name">button</span>&gt;</span>                                </div><div class="line">                              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                          <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">                      <span class="tag">&lt;/<span class="name">div</span>&gt;</span>                     </div><div class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/jquery.min.js?v=2.1.4"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Add controller Login:<br><code>application/index/controller/Login.php</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</div><div class="line"> </div><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">    <span class="comment">// Deal with login</span></div><div class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch();</div><div class="line">      </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doLogin</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">      $param = input(<span class="string">'post.'</span>);</div><div class="line">      <span class="keyword">if</span>(<span class="keyword">empty</span>($param[<span class="string">'user_name'</span>]))&#123;</div><div class="line">        </div><div class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Username can'</span>t be <span class="keyword">null</span><span class="string">');</span></div><div class="line">      &#125;</div><div class="line">      </div><div class="line">      if(empty($param['user_pwd<span class="string">']))&#123;</span></div><div class="line">        </div><div class="line">        $this-&gt;error('Password can<span class="string">'t be null'</span>);</div><div class="line">      &#125;</div><div class="line">      </div><div class="line">      <span class="comment">// Check username</span></div><div class="line">      $has = db(<span class="string">'users'</span>)-&gt;where(<span class="string">'user_name'</span>, $param[<span class="string">'user_name'</span>])-&gt;find();</div><div class="line">      <span class="keyword">if</span>(<span class="keyword">empty</span>($has))&#123;</div><div class="line">        </div><div class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Usename or password is wrong'</span>);</div><div class="line">      &#125;</div><div class="line">      </div><div class="line">      <span class="comment">// Check password</span></div><div class="line">      <span class="keyword">if</span>($has[<span class="string">'user_pwd'</span>] != md5($param[<span class="string">'user_pwd'</span>]))&#123;</div><div class="line">        </div><div class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Usename or password is wrong'</span>);</div><div class="line">      &#125;</div><div class="line">      </div><div class="line">      <span class="comment">// Remember the user infomation</span></div><div class="line">      cookie(<span class="string">'user_id'</span>, $has[<span class="string">'id'</span>], <span class="number">3600</span>);  <span class="comment">// One month's validity period</span></div><div class="line">      cookie(<span class="string">'user_name'</span>, $has[<span class="string">'user_name'</span>], <span class="number">3600</span>);</div><div class="line">      </div><div class="line">      <span class="keyword">$this</span>-&gt;redirect(url(<span class="string">'index/index'</span>));</div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Visit：</p>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fxetxc6oiyj20w00ek40g.jpg" alt="Success"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx4.sinaimg.cn/large/6d184cefly1fx7m4l3l8sj20p0046wf0.jpg&quot; alt=&quot;Tencent Cloud and Baota Panel&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Server" scheme="http://laker.me/blog/categories/Server/"/>
    
    
      <category term="Server" scheme="http://laker.me/blog/tags/Server/"/>
    
      <category term="PHP" scheme="http://laker.me/blog/tags/PHP/"/>
    
      <category term="Tencent Cloud" scheme="http://laker.me/blog/tags/Tencent-Cloud/"/>
    
      <category term="ThinkPHP" scheme="http://laker.me/blog/tags/ThinkPHP/"/>
    
      <category term="MySql" scheme="http://laker.me/blog/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>First step in Tencent Cloud and Baota Panel</title>
    <link href="http://laker.me/blog/2018/11/13/18_1113_tencent_cloud/"/>
    <id>http://laker.me/blog/2018/11/13/18_1113_tencent_cloud/</id>
    <published>2018-11-13T00:24:00.000Z</published>
    <updated>2018-11-13T08:27:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx4.sinaimg.cn/large/6d184cefly1fx7m4l3l8sj20p0046wf0.jpg" alt="Tencent Cloud and Baota Panel"></p>
<a id="more"></a>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">laker.me</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
<h2 id="Install-Baota-Panel-in-Tencent-Cloud"><a href="#Install-Baota-Panel-in-Tencent-Cloud" class="headerlink" title="Install Baota Panel in Tencent Cloud"></a>Install Baota Panel in Tencent Cloud</h2><p>Visit <a href="https://www.bt.cn/" target="_blank" rel="external">https://www.bt.cn/</a>:</p>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fx6o8b5ehnj21ac0ngagg.jpg" alt="bt website"></p>
<p>Find the installation command, now we use V5.9 for CentOS. Also you can use other systems you want.</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fx6o8jm2wlj21ds0bqn0t.jpg" alt="installation command"><br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> -y wget &amp;&amp; wget -O <span class="keyword">install</span>.sh http://download.bt.cn/<span class="keyword">install</span>/<span class="keyword">install</span>.sh &amp;&amp; sh <span class="keyword">install</span>.sh</div></pre></td></tr></table></figure></p>
<p>Open your sever in Tencent Cloud:</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fx7k4mtsmvj21k40ncdp9.jpg" alt="Tencent Cloud"></p>
<p>Install Baota Panel:</p>
<p><img src="http://wx4.sinaimg.cn/large/6d184cefly1fx6o938vr1j21go086wgg.jpg" alt="Install Baota Panel"></p>
<p>Then we get your Baota Panel accout for the server, and login your panel. Here is my serve address, yours is different.</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fx6o9h3n7vj20n608sq46.jpg" alt="Baota Panel accout"></p>
<h2 id="New-a-website-in-Tencent-Cloud"><a href="#New-a-website-in-Tencent-Cloud" class="headerlink" title="New a website in Tencent Cloud"></a>New a website in Tencent Cloud</h2><p>After login your server panel, setup a new website in the server:</p>
<p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fx6o9z91xpj212g0gmgok.jpg" alt="New a website"></p>
<p>Add your domain name:</p>
<p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fx6oai0mvzj21100i2n01.jpg" alt="Add domain name"></p>
<p>All done, you can visit it now:</p>
<p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fx6oape3hej215g0uq78v.jpg" alt="visit"></p>
<p>You can edit files in Tencent Cloud, use cd into the file:</p>
<p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fx6oayqr3fj20ru01ugly.jpg" alt="edit files"></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">vi</span> <span class="built_in">index</span>.html</div></pre></td></tr></table></figure>
<p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fx6ob3u08qj20z00l843a.jpg" alt="vi index.html"></p>
<p>Save and visit:</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fx6ocgwlzij20ue0ky419.jpg" alt="visit"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx4.sinaimg.cn/large/6d184cefly1fx7m4l3l8sj20p0046wf0.jpg&quot; alt=&quot;Tencent Cloud and Baota Panel&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Server" scheme="http://laker.me/blog/categories/Server/"/>
    
    
      <category term="Server" scheme="http://laker.me/blog/tags/Server/"/>
    
      <category term="PHP" scheme="http://laker.me/blog/tags/PHP/"/>
    
      <category term="Tencent Cloud" scheme="http://laker.me/blog/tags/Tencent-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>AI learning 2：SVM Algorithm</title>
    <link href="http://laker.me/blog/2018/11/01/18_1101_ai_svm/"/>
    <id>http://laker.me/blog/2018/11/01/18_1101_ai_svm/</id>
    <published>2018-11-01T00:24:00.000Z</published>
    <updated>2018-11-07T00:55:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx4.sinaimg.cn/large/6d184cefly1fwylhut942j20p00463yw.jpg" alt="AI learning 2：SVM Algorithm"></p>
<a id="more"></a>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">laker.me</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
<h2 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h2><p>Environment: </p>
<ul>
<li>Anacoda Navigator</li>
<li>python 3.6</li>
</ul>
<p>Python packages(all in Anacoda, don’t have to install extractly):</p>
<ul>
<li><a href="http://www.numpy.org/" target="_blank" rel="external">numpy</a>: for scientific computing</li>
<li><a href="https://pandas.pydata.org/" target="_blank" rel="external">pandas</a>: for data analysis</li>
<li><a href="http://scikit-learn.org/stable/" target="_blank" rel="external">sklearn</a>: Simple and efficient tools for data mining and data analysis</li>
</ul>
<p>Code and datas <a href="https://pan.baidu.com/s/1wX3rXqWvjlnCFRk6yyXznQ" target="_blank" rel="external">https://pan.baidu.com/s/1wX3rXqWvjlnCFRk6yyXznQ</a></p>
<h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><p>Import packages and set alias.</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"># <span class="keyword">import</span> SVC <span class="keyword">in</span> svm <span class="keyword">module</span></div><div class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC </div><div class="line">#<span class="keyword">import</span> train_test_split <span class="keyword">in</span> model_selection <span class="keyword">module</span></div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div></pre></td></tr></table></figure>
<p>Import training file <code>16.MNIST.train.csv</code>, it’s a matrix of a picture. The first column is type of then row.<br>The number means grayscale value of the picture pixel.<br>And we only use the last 5000 rows to train.</p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># inputData <span class="keyword">is</span> <span class="keyword">object</span> <span class="keyword">of</span> pandas, <span class="keyword">and</span> use pandas <span class="function"><span class="keyword">function</span>  <span class="title">iloc</span> <span class="title">to</span> <span class="title">select</span> <span class="title">the</span> <span class="title">last</span> 5000 <span class="title">rows</span>.</span></div><div class="line"></div><div class="line"><span class="title">inputData</span> = <span class="title">pd</span>.<span class="title">read_csv</span><span class="params">(<span class="string">'./16.MNIST.train.csv'</span>)</span></div><div class="line"><span class="title">inputData</span> = <span class="title">inputData</span>.<span class="title">iloc</span>[-5000:, :]</div></pre></td></tr></table></figure>
<p>============== Usage of pandas function iloc ==============<br><a href="https://www.shanelynn.ie/select-pandas-dataframe-rows-and-columns-using-iloc-loc-and-ix/" target="_blank" rel="external">https://www.shanelynn.ie/select-pandas-dataframe-rows-and-columns-using-iloc-loc-and-ix/</a><br>There are two “arguments” to iloc – a row selector, and a column selector. </p>
<p><code>data.iloc[rows, columns]</code></p>
<p><code>data.iloc[a:b, c:d]</code> means from row a to row b, column c to column d.</p>
<p><code>data.iloc[a:, :d]</code> means from row a to column end, column one to column d.</p>
<p>Single selections using iloc and DataFrame</p>
<figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># Rows:</span></div><div class="line"><span class="class"><span class="keyword">data</span>.iloc[0] # first row of <span class="keyword">data</span> frame - <span class="type">Note</span> a <span class="type">Series</span> <span class="keyword">data</span> <span class="keyword">type</span> output.</span></div><div class="line"><span class="class"><span class="keyword">data</span>.iloc[1] # second row of <span class="keyword">data</span> frame </span></div><div class="line"><span class="class"><span class="keyword">data</span>.iloc[-1] # last row of <span class="keyword">data</span> frame </span></div><div class="line"></div><div class="line"><span class="meta"># Columns:</span></div><div class="line"><span class="class"><span class="keyword">data</span>.iloc[:,0] # first column of <span class="keyword">data</span> frame </span></div><div class="line"><span class="class"><span class="keyword">data</span>.iloc[:,1] # second column of <span class="keyword">data</span> frame </span></div><div class="line"><span class="class"><span class="keyword">data</span>.iloc[:,-1] # last column of <span class="keyword">data</span> frame</span></div></pre></td></tr></table></figure>
<p>Multiple columns and rows can be selected together using the .iloc indexer.</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data.iloc[<span class="number">0</span>:<span class="number">5</span>] # <span class="keyword">first</span> five rows of dataframe</div><div class="line">data.iloc[:, <span class="number">0</span>:<span class="number">2</span>] # <span class="keyword">first</span> two columns of data frame with <span class="keyword">all</span> rows</div><div class="line">data.iloc[[<span class="number">0</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">24</span>], [<span class="number">0</span>,<span class="number">5</span>,<span class="number">6</span>]] # <span class="number">1</span><span class="keyword">st</span>, <span class="number">4</span><span class="keyword">th</span>, <span class="number">7</span><span class="keyword">th</span>, <span class="number">25</span><span class="keyword">th</span> row + <span class="number">1</span><span class="keyword">st</span> <span class="number">6</span><span class="keyword">th</span> <span class="number">7</span><span class="keyword">th</span> columns.</div><div class="line">data.iloc[<span class="number">0</span>:<span class="number">5</span>, <span class="number">5</span>:<span class="number">8</span>] # <span class="keyword">first</span> <span class="number">5</span> rows <span class="built_in">and</span> <span class="number">5</span><span class="keyword">th</span>, <span class="number">6</span><span class="keyword">th</span>, <span class="number">7</span><span class="keyword">th</span> columns of data frame</div></pre></td></tr></table></figure>
<blockquote>
<p>Python list <a href="https://www.w3schools.com/python/python_lists.asp" target="_blank" rel="external">https://www.w3schools.com/python/python_lists.asp</a></p>
</blockquote>
<p>============== / End Usage of pandas function iloc ==============</p>
<p>In the taining data, the first colums is lable, so we drop label column using <code>drop([&#39;label&#39;], 1)</code>, extract it to parameter ‘label’ using <code>inputData[&#39;label&#39;]</code>, and convert it to array using <code>np.array()</code>.<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data = <span class="built_in">np</span>.<span class="built_in">array</span>(inputData.drop(['<span class="built_in">label</span>'], <span class="number">1</span>))</div><div class="line"><span class="built_in">label</span> = <span class="built_in">np</span>.<span class="built_in">array</span>(inputData['<span class="built_in">label</span>'])</div></pre></td></tr></table></figure></p>
<p>============== Usage of pandas function drop ==============<br><a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop.html" target="_blank" rel="external">https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.drop.html</a><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; df = pd.DataFrame(np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>),</div><div class="line">...                   columns=['A', 'B', 'C', 'D'])</div><div class="line">&gt;&gt;&gt; df</div><div class="line">   A  B   C   D</div><div class="line"><span class="number">0</span>  <span class="number">0</span>  <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span></div><div class="line"><span class="number">1</span>  <span class="number">4</span>  <span class="number">5</span>   <span class="number">6</span>   <span class="number">7</span></div><div class="line"><span class="number">2</span>  <span class="number">8</span>  <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></div></pre></td></tr></table></figure></p>
<p>Drop columns</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> axis : &#123;0 or ‘index’, 1 or ‘columns’&#125;, default 0</span></div><div class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; df.drop([<span class="string">'B'</span>, <span class="string">'C'</span>], axis=1)</span></div><div class="line">   A   D</div><div class="line">0  0   3</div><div class="line">1  4   7</div><div class="line">2  8  11</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; df.drop(columns=['B', 'C'])</div><div class="line">   A   D</div><div class="line"><span class="number">0</span>  <span class="number">0</span>   <span class="number">3</span></div><div class="line"><span class="number">1</span>  <span class="number">4</span>   <span class="number">7</span></div><div class="line"><span class="number">2</span>  <span class="number">8</span>  <span class="number">11</span></div></pre></td></tr></table></figure>
<p>Drop a row by index<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; df.drop([<span class="number">0</span>, <span class="number">1</span>])</div><div class="line">   A  B   C   D</div><div class="line"><span class="number">2</span>  <span class="number">8</span>  <span class="number">9</span>  <span class="number">10</span>  <span class="number">11</span></div></pre></td></tr></table></figure></p>
<p>============== / End Usage of pandas function drop ==============</p>
<p>============== Usage of numpy function array ==============<br><a href="https://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.array.html" target="_blank" rel="external">https://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.array.html</a></p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; np.array(<span class="string">[[1, 2], [3, 4]]</span>)</div><div class="line">array(<span class="string">[[1, 2],</span></div><div class="line">       [3, 4]])</div></pre></td></tr></table></figure>
<p>============== / End Usage of numpy function array ==============</p>
<p>Then deal with the data, it’s a little tricky. Set data which is smaller than 100 to 0, and which is bigger than 100 to 1.</p>
<figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># Improve accuracy from 0.1 to 0.9</span></div><div class="line"><span class="class"><span class="keyword">data</span>[<span class="keyword">data</span>&lt;=100] = 0</span></div><div class="line"><span class="class"><span class="keyword">data</span>[<span class="keyword">data</span>&gt;100] = 1</span></div></pre></td></tr></table></figure>
<p>Extract the first 5 rows.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">inputData</span><span class="selector-class">.head</span>()</div></pre></td></tr></table></figure>
<p>============== Usage of pandas function iloc ==============<br><a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.head.html" target="_blank" rel="external">https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.head.html</a></p>
<blockquote>
<p>DataFrame.head(n)</p>
</blockquote>
<p>Return the first n rows, default n=5.</p>
<p>This function returns the first n rows for the object based on position. It is useful for quickly testing if your object has the right type of data in it.</p>
<p>See also</p>
<blockquote>
<p>DataFrame.tail(n)</p>
</blockquote>
<p>Returns the last n rows.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;</span>&gt; df = pd.DataFrame(&#123;<span class="string">'animal'</span><span class="symbol">:</span>[<span class="string">'alligator'</span>, <span class="string">'bee'</span>, <span class="string">'falcon'</span>, <span class="string">'lion'</span>,</div><div class="line">...                    <span class="string">'monkey'</span>, <span class="string">'parrot'</span>, <span class="string">'shark'</span>, <span class="string">'whale'</span>, <span class="string">'zebra'</span>]&#125;)</div><div class="line"><span class="meta">&gt;&gt;</span>&gt; df</div><div class="line">      animal</div><div class="line"><span class="number">0</span>  alligator</div><div class="line"><span class="number">1</span>        bee</div><div class="line"><span class="number">2</span>     falcon</div><div class="line"><span class="number">3</span>       lion</div><div class="line"><span class="number">4</span>     monkey</div><div class="line"><span class="number">5</span>     parrot</div><div class="line"><span class="number">6</span>      shark</div><div class="line"><span class="number">7</span>      whale</div><div class="line"><span class="number">8</span>      zebra</div></pre></td></tr></table></figure>
<p>Viewing the first n lines (three in this case)<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; df.head(<span class="number">3</span>)</div><div class="line">      animal</div><div class="line"><span class="number">0</span>  alligator</div><div class="line"><span class="number">1</span>        bee</div><div class="line"><span class="number">2</span>     falcon</div></pre></td></tr></table></figure></p>
<p>============== /End Usage of pandas function iloc ==============</p>
<p>Use 70% data to train and 30% to test the taining result using <code>test_size=0.3</code>. Here we don’t specify the train_size, and it will automatically set to the complement of the test size, which is 1-0.3=0.7.</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data_train, data_test, label_train, <span class="attr">label_test</span> = train_test_split(data, label, <span class="attr">test_size=0.3,</span> <span class="attr">random_state=87)</span></div></pre></td></tr></table></figure>
<p>======= Usage of sklearn.model_selection.train_test_split =======<br><a href="http://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html" target="_blank" rel="external">http://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html</a></p>
<p><code>train_test_split(*arrays, **options)</code> </p>
<p>Split arrays or matrices into random train and test subsets</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div></pre></td></tr></table></figure>
<p><strong>Parameters:</strong></p>
<ul>
<li><p>*arrays : sequence of indexables with same length / shape[0]<br>Allowed inputs are lists, numpy arrays, scipy-sparse matrices or pandas dataframes.</p>
</li>
<li><p>test_size : float, int or None, optional (default=0.25)<br>If float, should be between 0.0 and 1.0 and represent the proportion of the dataset to include in the test split. If int, represents the absolute number of test samples. If None, the value is set to the complement of the train size. By default, the value is set to 0.25. </p>
</li>
<li><p>train_size : float, int, or None, (default=None)<br>If float, should be between 0.0 and 1.0 and represent the proportion of the dataset to include in the train split. If int, represents the absolute number of train samples. If None, the value is automatically set to the complement of the test size.</p>
</li>
<li><p>random_state : int, RandomState instance or None, optional (default=None)<br>If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by np.random.</p>
</li>
<li><p>shuffle : boolean, optional (default=True)<br>Whether or not to shuffle the data before splitting. If shuffle=False then stratify must be None.</p>
</li>
<li><p>stratify : array-like or None (default=None)<br>If not None, data is split in a stratified fashion, using this as the class labels.</p>
</li>
</ul>
<p><strong>Returns:</strong>  </p>
<ul>
<li>splitting : list, length=2 * len(arrays)<br>List containing train-test split of inputs.</li>
</ul>
<p>======= /End Usage of sklearn.model_selection.train_test_split =======</p>
<p>Use SVC model and <code>fit()</code> to train, set more parameters in SVC() improve accuracy:</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SVM_model = SVC()</div><div class="line">SVM_model.fit(data_train, label_train)</div></pre></td></tr></table></figure>
<p>======= Usage of sklearn.model_selection.train_test_split =======</p>
<p><a href="http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html" target="_blank" rel="external">http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html</a></p>
<blockquote>
<p>SVC(C=1.0, kernel=’rbf’, degree=3, gamma=’auto_deprecated’, coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=-1, decision_function_shape=’ovr’, random_state=None)</p>
</blockquote>
<p><a href="http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC.fit" target="_blank" rel="external">http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC.fit</a></p>
<blockquote>
<p>fit(X, y, sample_weight=None)</p>
</blockquote>
<p>Fit the SVM model according to the given training data.</p>
<p>======= /End Usage of sklearn.model_selection.train_test_split =======</p>
<p>Use the first 10 rows to test and get the predict result. Then compare the predict result and label to score a point.</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">SVM_model</span><span class="selector-class">.predict</span>(<span class="selector-tag">data_test</span><span class="selector-attr">[:10]</span>)</div><div class="line"></div><div class="line"><span class="selector-tag">label_test</span><span class="selector-attr">[:10]</span></div><div class="line"></div><div class="line"><span class="selector-tag">SVM_model</span><span class="selector-class">.score</span>(<span class="selector-tag">data_test</span>, <span class="selector-tag">label_test</span>)</div></pre></td></tr></table></figure>
<p>We can write a <code>score()</code> fuction like this instead of using <code>score()</code>.</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">correct = 0</div><div class="line">prediction = SVM_model.<span class="keyword">predict</span>(data_test)</div><div class="line"><span class="keyword">for</span> i, <span class="keyword">lab</span> <span class="keyword">in</span> enumerate(label_test):</div><div class="line">    # <span class="keyword">if</span> prediction == <span class="keyword">label</span>, correct+1</div><div class="line">    <span class="keyword">if</span> prediction[i] == <span class="keyword">lab</span>:  </div><div class="line">        correct += 1</div><div class="line"></div><div class="line"># accuracy = correct numbers / all <span class="keyword">test</span> numbers</div><div class="line">accuracy = correct / len(label_test)</div><div class="line"><span class="keyword">print</span>(<span class="string">"Accuracy is:"</span>, accuracy)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx4.sinaimg.cn/large/6d184cefly1fwylhut942j20p00463yw.jpg&quot; alt=&quot;AI learning 2：SVM Algorithm&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://laker.me/blog/categories/AI/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="人工智能" scheme="http://laker.me/blog/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="AI" scheme="http://laker.me/blog/tags/AI/"/>
    
      <category term="ML" scheme="http://laker.me/blog/tags/ML/"/>
    
      <category term="DL" scheme="http://laker.me/blog/tags/DL/"/>
    
  </entry>
  
  <entry>
    <title>AI 学习1	：Anaconda 配置</title>
    <link href="http://laker.me/blog/2018/10/04/18_1004_anaconda/"/>
    <id>http://laker.me/blog/2018/10/04/18_1004_anaconda/</id>
    <published>2018-10-04T00:24:00.000Z</published>
    <updated>2018-10-31T11:52:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx4.sinaimg.cn/large/6d184cefly1fvzxnkjnwij20p0046t97.jpg" alt="AI 学习：Anaconda 配置"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本文环境是 Mac OS。</p>
<p>目前Anaconda 出了 Python3.7 版本，但 TensorFlow 只支持3.5、3.6、2.7。有两种解决方案。</p>
<ul>
<li>方案一：</li>
</ul>
<p>安装3.7版，再根据官方推荐的方法安装3.5、3.6。</p>
<p><a href="http://docs.anaconda.com/anaconda/faq/#how-do-i-get-anaconda-with-python-3-5-or-3-6" target="_blank" rel="external">http://docs.anaconda.com/anaconda/faq/#how-do-i-get-anaconda-with-python-3-5-or-3-6</a></p>
<blockquote>
<p>We recommend that you download the latest version of Anaconda and then <a href="https://conda.io/docs/py2or3.html" target="_blank" rel="external">make a Python 3.5 (or 3.6) environment</a>.<br>Or download the latest version of Anaconda and run the following command to install Python 3.5 (or 3.6) in the root environment: conda install python=3.5<br>or</p>
<p><code>conda install python=3.6</code></p>
<p>Or download the most recent Anaconda installer that included Python 3.5 (Anaconda 4.2.0) or Python 3.6 (Anaconda 5.2.0). You can download either of these from our <a href="https://repo.anaconda.com/archive/" target="_blank" rel="external">archive</a>. Scroll down the page until you find the version you need for your platform.</p>
</blockquote>
<p>命令行执行：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> conda install python=3.6</span></div></pre></td></tr></table></figure>
<p>命令：</p>
<blockquote>
<p>开启环境<br>$ source activate py36</p>
<p>关闭环境<br>$ source deactivate</p>
</blockquote>
<p>开启环境</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> activate py36</span></div><div class="line">(py36)</div><div class="line"><span class="meta"></span></div><div class="line">$<span class="bash"> conda info --envs</span></div><div class="line"><span class="meta">#</span><span class="bash"> conda environments:</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line">base                     /Users/laker/anaconda3</div><div class="line">Laker                    /Users/laker/anaconda3/envs/Laker</div><div class="line">py36                  *  /Users/laker/anaconda3/envs/py36</div><div class="line"></div><div class="line">(py36)</div></pre></td></tr></table></figure>
<p>我尝试了这个方法，最后3.6是安装成功了，但是客户端打不开了，尝试了网上解决闪退的办法未果，貌似这是个通病。折腾了一上午也没搞好，折腾到崩溃，之后卸载采取第二种方案</p>
<ul>
<li>方案二：</li>
</ul>
<p>到清华镜像下载以往版本，官网也有，但是慢。</p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="external">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></p>
<p>安装好后，Anaconda 自带 Python 环境，与 Mac 自身的不相干。</p>
<h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p>安装后尝试如下命令</p>
<pre><code>conda --version
</code></pre><p>如果出现</p>
<pre><code>$ conda --version
conda 4.3.30
</code></pre><p>表示安装成功，如果没有，则需配置环境变量<br>修改<code>.bash_profile</code> 或 <code>zsh_profile</code>，我用的 zsh</p>
<pre><code>vi ~/.zsh_profile
</code></pre><p>添加以下命令</p>
<pre><code>export PATH=&quot;/Users/nick(你自己的安装路径)/anaconda3/bin:$PATH&quot;
</code></pre><p>vim使用<code>:wq</code>命令保存退出<br>保存文件后如要立即生效，输入以下命令，</p>
<pre><code>source $HOME/.zsh_profile
</code></pre><blockquote>
<p>注意：重启机子后也可能要执行这个</p>
</blockquote>
<p>再次测试<code>conda --version</code>命令是否安装成功.</p>
<p>如果成功，我们继续用以下命令修改conda的镜像源，这里用清华的源。输入以下两条命令来添加源：</p>
<pre><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes
</code></pre><p>此时~/下会生成.condarc文件。</p>
<p>用<code>vi ~/.condarc</code>命令进入vim编辑器，删除其中的第三、第四行，即删除了默认的源，然后<code>:wq</code>保存：</p>
<pre><code>channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
  - defaults #删除
ssl_verify: true #删除
show_channel_urls: true
</code></pre><p><code>conda info</code> 查看当前配置信息，channel URLs只剩下清华的源</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">channel URLs : https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>pkgs<span class="regexp">/free/</span>osx-<span class="number">64</span></div><div class="line">    https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/anaconda/</span>pkgs<span class="regexp">/free/</span>noarch</div></pre></td></tr></table></figure>
<h2 id="安装-TensorFlow"><a href="#安装-TensorFlow" class="headerlink" title="安装 TensorFlow"></a>安装 TensorFlow</h2><p>注意，这里是用 Anaconda 的 pip，不是本机的 pip，所以 pip 前加上路径</p>
<p>更新 pip<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>~<span class="regexp">/anaconda3/bin</span><span class="regexp">/pip install --upgrade pip</span></div></pre></td></tr></table></figure></p>
<p>更新 TensorFlow</p>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ~<span class="string">/anaconda3/bin/pip</span> install <span class="params">--upgrade</span> <span class="params">--ignore-installed</span> tensorflow</div></pre></td></tr></table></figure>
<p>可能会有一段黄色警告，再多等会，或者开代理</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># laker @ Laker in ~ [13:11:43]</span></div><div class="line">$ ~/anaconda3/bin/pip install <span class="comment">--upgrade --ignore-installed tensorflow</span></div><div class="line">Collecting tensorflow</div><div class="line">  Retrying (Retry(total=<span class="number">4</span>, connect=None, <span class="built_in">read</span>=None, redirect=None, status=None)) <span class="keyword">after</span> connection broken <span class="keyword">by</span> <span class="string">'NewConnectionError('</span>&lt;pip.<span class="title">_vendor</span>.urllib3.connection.VerifiedHTTPSConnection object <span class="keyword">at</span> <span class="number">0x11021c828</span>&gt;: Failed <span class="built_in">to</span> establish <span class="keyword">a</span> <span class="built_in">new</span> connection: [Errno <span class="number">8</span>] nodename nor servname provided, <span class="keyword">or</span> <span class="keyword">not</span> known<span class="string">',)'</span>: /simple/tensorflow/</div><div class="line">  Retrying (Retry(total=<span class="number">3</span>, connect=None, <span class="built_in">read</span>=None, redirect=None, status=None)) <span class="keyword">after</span> connection broken <span class="keyword">by</span> <span class="string">'NewConnectionError('</span>&lt;pip.<span class="title">_vendor</span>.urllib3.connection.VerifiedHTTPSConnection object <span class="keyword">at</span> <span class="number">0x110067a58</span>&gt;: Failed <span class="built_in">to</span> establish <span class="keyword">a</span> <span class="built_in">new</span> connection: [Errno <span class="number">8</span>] nodename nor servname provided, <span class="keyword">or</span> <span class="keyword">not</span> known<span class="string">',)'</span>: /simple/tensorflow/</div><div class="line">  Retrying (Retry(total=<span class="number">2</span>, connect=None, <span class="built_in">read</span>=None, redirect=None, status=None)) <span class="keyword">after</span> connection broken <span class="keyword">by</span> <span class="string">'NewConnectionError('</span>&lt;pip.<span class="title">_vendor</span>.urllib3.connection.VerifiedHTTPSConnection object <span class="keyword">at</span> <span class="number">0x110067ac8</span>&gt;: Failed <span class="built_in">to</span> establish <span class="keyword">a</span> <span class="built_in">new</span> connection: [Errno <span class="number">65</span>] No route <span class="built_in">to</span> host<span class="string">',)'</span>: /simple/tensorflow/</div><div class="line">  Downloading <span class="keyword">https</span>://<span class="built_in">files</span>.pythonhosted.org/packages/<span class="number">70</span>/<span class="number">78</span>/cd74769027b6249e45807637c1aa3ef212b9492349cca4b87e5de1a10548/tensorflow<span class="number">-1.11</span><span class="number">.0</span>-cp36-cp36m-macosx_10_11_x86_64.whl (<span class="number">59.3</span>MB)</div><div class="line">    <span class="number">9</span>% |███                             | <span class="number">5.4</span>MB <span class="number">96</span>kB/s eta <span class="number">0</span>:<span class="number">09</span>:<span class="number">20</span></div></pre></td></tr></table></figure>
<h2 id="安装Jupyter-Spyder"><a href="#安装Jupyter-Spyder" class="headerlink" title="安装Jupyter, Spyder"></a>安装Jupyter, Spyder</h2><p><img src="http://wx1.sinaimg.cn/mw690/6d184cefly1fvzuazc915j21jc0okgq7.jpg" alt="Jupyter,spyder"></p>
<h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p>下载测试文件<br>链接:<a href="https://pan.baidu.com/s/1U_P1VsJyJ3Zn8SAprz9Sxw" target="_blank" rel="external">https://pan.baidu.com/s/1U_P1VsJyJ3Zn8SAprz9Sxw</a> 提取码: vtaf</p>
<p>安装测试文件的依赖库 pygame</p>
<pre><code>$ ~/anaconda3/bin/pip install pygame
</code></pre><p>运行Jupyter，点击面板的 Launch，</p>
<p><img src="http://wx2.sinaimg.cn/mw690/6d184cefly1fvzub9u6vrj20ck0ew754.jpg" alt="Jupyter"></p>
<p>或者输入命令</p>
<pre><code>ipython notebook
</code></pre><p>找到文件所在位置</p>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fvzublo0fuj20hy0fgdgu.jpg" alt="Jupyter界面"></p>
<p>进入<code>homework0.ipynb</code>，运行</p>
<p><img src="http://wx3.sinaimg.cn/mw690/6d184cefly1fvzuc8mo3lj214a0q8q6t.jpg" alt="homework0.ipynb"></p>
<p>效果是两个特效的窗口</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fvzudre5z8j21bs0fmhdt.jpg" alt="效果"></p>
<p>参考：<br><a href="https://www.jianshu.com/p/b9eac8419c8d" target="_blank" rel="external">Anaconda之Python环境配置</a><br><a href="http://docs.anaconda.com/anaconda/faq/#should-i-add-anaconda-to-the-macos-or-linux-path" target="_blank" rel="external">Add PATH</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx4.sinaimg.cn/large/6d184cefly1fvzxnkjnwij20p0046t97.jpg&quot; alt=&quot;AI 学习：Anaconda 配置&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://laker.me/blog/categories/AI/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="人工智能" scheme="http://laker.me/blog/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="AI" scheme="http://laker.me/blog/tags/AI/"/>
    
      <category term="ML" scheme="http://laker.me/blog/tags/ML/"/>
    
      <category term="DL" scheme="http://laker.me/blog/tags/DL/"/>
    
  </entry>
  
  <entry>
    <title>算法学习1：重新排序链表</title>
    <link href="http://laker.me/blog/2018/09/29/18_0929_%20algorithm/"/>
    <id>http://laker.me/blog/2018/09/29/18_0929_ algorithm/</id>
    <published>2018-09-29T00:24:00.000Z</published>
    <updated>2018-10-07T14:56:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx2.sinaimg.cn/large/6d184cefly1fvwi0uvwsmj20p0046gm8.jpg" alt="算法学习：重新排序链表"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个单链表，将链表按头节点、尾节点、第二个节点、 倒数第二个节点…的规律重建。要求：原地操作，不改变节点的值。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>暴力法：先找头节点，再找尾节点，然后顺次第二个节点，倒数第二个节点，由于是单链表，不停的从表头遍历到表尾，时间复杂度O(n^2)</p>
<p>看下有没有其他便捷方法。</p>
<p>假设给一组数字<code>1,2,3,4,5,6</code>，重新排序后是<code>1,6,2,5,3,4</code>，会发现一个规律，<code>1, 2, 3</code>是顺序的，<code>6, 5, 4</code>是倒序插入的。</p>
<p>所以可这样考虑：<br>先把链表一分为二，把后半部分数据倒序插入前半部分。<br>头插法制作倒序链表，时间复杂度 O(n)，将左右两链表合并，时间复杂度 O(n)。总时间复杂度为O(n)。</p>
<h2 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h2><figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">void Revert (Link L1) &#123;</div><div class="line">	new Link L2; <span class="comment">//用于存放倒序的后半部链表</span></div><div class="line">	int half_len = L1.lenght() / <span class="number">2</span>; <span class="comment">//记录链表的一半</span></div><div class="line">	<span class="function"><span class="title">int</span> *p = L1-&gt;</span>head; <span class="comment">//p 指向 L1 头节点</span></div><div class="line">	<span class="function"><span class="title">int</span> *q = L2-&gt;</span>head; <span class="comment">//q 指向 L2 头指针</span></div><div class="line">	int *s, *t;</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; half_len; i++) &#123;</div><div class="line">		<span class="function"><span class="title">s</span> = s-&gt;</span>next; <span class="comment">// 找到链表中部</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="title">q</span> = s-&gt;</span>next; <span class="comment">//把后半段链表赋值给 L2</span></div><div class="line">	<span class="function"><span class="title">s</span>-&gt;</span>next = null; <span class="comment">// 此时 s 为 L1尾指针</span></div><div class="line"></div><div class="line">	<span class="function"><span class="title">t</span> = q-&gt;</span>next;</div><div class="line">	<span class="comment">// 这里我直接在表内操作，看起来有点乱，新建个 L3来存放会看得舒服点</span></div><div class="line">	<span class="function"><span class="title">while</span> ( t-&gt;</span>next != null ) &#123; <span class="comment">//倒置 L2</span></div><div class="line">		<span class="function"><span class="title">q</span>-&gt;</span><span class="function"><span class="title">next</span> = t-&gt;</span>next;</div><div class="line">		<span class="function"><span class="title">t</span>-&gt;</span>next = q;</div><div class="line">		L2-&gt;<span class="function"><span class="title">head</span>-&gt;</span>next = t;</div><div class="line">		<span class="function"><span class="title">t</span> = q-&gt;</span>next;</div><div class="line">		<span class="function"><span class="title">q</span> = L2-&gt;</span><span class="function"><span class="title">head</span>-&gt;</span>next;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">while</span> ( p != s ) &#123; <span class="comment">// p 没有走到表尾时插入L2节点</span></div><div class="line">		<span class="function"><span class="title">t</span> = L2-&gt;</span><span class="function"><span class="title">head</span>-&gt;</span>next; <span class="comment">//一开始，t 指向 L2第一个节点</span></div><div class="line">		L2-&gt;<span class="function"><span class="title">head</span>-&gt;</span><span class="function"><span class="title">next</span> = L2-&gt;</span><span class="function"><span class="title">head</span>-&gt;</span><span class="function"><span class="title">next</span>-&gt;</span>next; <span class="comment">//取出第一个节点，第二个节点变成第一个节点</span></div><div class="line">		<span class="function"><span class="title">t</span>-&gt;</span><span class="function"><span class="title">next</span> = p-&gt;</span>next; <span class="comment">//t 插入 p</span></div><div class="line">		<span class="function"><span class="title">p</span>-&gt;</span><span class="function"><span class="title">next</span> = t-&gt;</span>next;</div><div class="line">		<span class="function"><span class="title">p</span> = p-&gt;</span><span class="function"><span class="title">next</span>-&gt;</span>next; <span class="comment">//移动 p 到下一个待插入的节点</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>简单的图示：</p>
<p><img src="http://wx4.sinaimg.cn/mw690/6d184cefly1fvwju0nqrvj20u0141ta3.jpg" alt="图示"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/large/6d184cefly1fvwi0uvwsmj20p0046gm8.jpg&quot; alt=&quot;算法学习：重新排序链表&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://laker.me/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://laker.me/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>关于博客图片失效的公告</title>
    <link href="http://laker.me/blog/2018/09/20/18_0920_notice/"/>
    <id>http://laker.me/blog/2018/09/20/18_0920_notice/</id>
    <published>2018-09-20T00:24:00.000Z</published>
    <updated>2018-09-20T13:42:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wx4.sinaimg.cn/large/6d184cefly1fvzxnqr4qpj20p00463z2.jpg" alt="关于博客图片失效的公告"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<p><img src="http://wx4.sinaimg.cn/large/6d184cefly1fvzxnqr4qpj20p00463z2.jpg" alt="公告"><br>本站图片原本存于七牛云存储。近期七牛收回了免费的域名，导致所有图片链接失效。</p>
<p>自定义域名需要备案，本站域名是在狗爹买的，感觉会很麻烦。图片迁移的话工作量很大。我再想办法。</p>
<p>虽然博文质量一般，但对我而言是很好的学习记录，还是希望能重新弄好。</p>
<p>感谢这些年，通过博客认识的朋友们，大家一起努力鸭~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wx4.sinaimg.cn/large/6d184cefly1fvzxnqr4qpj20p00463z2.jpg&quot; alt=&quot;关于博客图片失效的公告&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记一次移动硬盘无法读取的处理过程</title>
    <link href="http://laker.me/blog/2018/06/02/18_0602_disk/"/>
    <id>http://laker.me/blog/2018/06/02/18_0602_disk/</id>
    <published>2018-06-02T00:24:00.000Z</published>
    <updated>2018-08-03T05:15:46.000Z</updated>
    
    <content type="html"><![CDATA[<p> <img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20180602.jpg?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="移动硬盘无法读取"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<h2 id="状况"><a href="#状况" class="headerlink" title="状况"></a>状况</h2><p>新电脑硬盘插到硬盘盒上，Windows笔记本电脑不识别，没有任何反应，也不报错，换了接口也不行。</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>考虑到硬盘盒硬盘盒都比较新，坏的可能性不大，就尝试换设备试下。</p>
<h3 id="1-查看磁盘管理是否有读取而无盘符"><a href="#1-查看磁盘管理是否有读取而无盘符" class="headerlink" title="1.查看磁盘管理是否有读取而无盘符"></a>1.查看磁盘管理是否有读取而无盘符</h3><p>右键<code>计算机</code> —— <code>磁盘管理</code>，如果有读取出新磁盘，加个盘符即可。但此时无新磁盘。</p>
<h3 id="2-换了一台-Windows电脑尝试"><a href="#2-换了一台-Windows电脑尝试" class="headerlink" title="2.换了一台 Windows电脑尝试"></a>2.换了一台 Windows电脑尝试</h3><p>换了台式电脑，仍无反应。</p>
<h3 id="3-换-Mac-电脑尝试"><a href="#3-换-Mac-电脑尝试" class="headerlink" title="3.换 Mac 电脑尝试"></a>3.换 Mac 电脑尝试</h3><p>有弹框反应，表明不是硬盘和硬盘盒的问题。<br>报错显示无法读写硬盘。此时考虑可以格式化。</p>
<p><code>Launchpad</code> —— <code>Other 其他</code> —— <code>Disk Utility 磁盘管理</code> —— <code>选中硬盘，Erase 抹除</code></p>
<p>考虑到 Mac 和 Windows 都能用的格式，选择exFAT，其他默认。<br>格式化好，Mac 可以正常读写，再插到Windows笔记本，也能正常读写了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20180602.jpg?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;移动硬盘无法读取&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="http://laker.me/blog/categories/Others/"/>
    
    
  </entry>
  
  <entry>
    <title>自开发的EasyCanvas绘图库实践、Pixeler项目开发小结</title>
    <link href="http://laker.me/blog/2018/05/04/18_0504_easycanvas_pixeler/"/>
    <id>http://laker.me/blog/2018/05/04/18_0504_easycanvas_pixeler/</id>
    <published>2018-05-04T00:24:00.000Z</published>
    <updated>2018-05-22T14:48:53.000Z</updated>
    
    <content type="html"><![CDATA[<p> <img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20180503.jpg?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="EasyCanvas绘图库实践"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<h2 id="涉及的两个项目"><a href="#涉及的两个项目" class="headerlink" title="涉及的两个项目"></a>涉及的两个项目</h2><p><a href="https://github.com/younglaker/pixeler" target="_blank" rel="external">Pixler</a>：一个用于设计像素图片（拼豆）的应用。</p>
<p><a href="https://github.com/younglaker/EasyCanvas" target="_blank" rel="external">Easycanvas.js</a>： Canvas 绘图库</p>
<p><img src="https://camo.githubusercontent.com/1d13f30b16d7e66731cab36a3433bf27d4f10e9e/687474703a2f2f3737673534662e636f6d312e7a302e676c622e636c6f7564646e2e636f6d2f626c6f6732303135313232393131333032322e706e67" alt="Pixler"></p>
<h2 id="开发背景"><a href="#开发背景" class="headerlink" title="开发背景"></a>开发背景</h2><p>我对拼豆感兴趣，在做拼豆前要设计图纸，类似画像素图。我试用了网上能搜到的几个拼豆图纸设计的应用，但是没有适合我的，我就想着自己开发一个。</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ2018050301.jpg" alt="拼豆"></p>
<h2 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h2><p>拼豆图纸就类似于像素图，我刚开始构思如何开发的时候，想着它有点像下棋。所以我参考了五子棋的下棋原理。我在五子棋的算法上优化了鼠标点击时落脚的位置的计算方法，即鼠标点击时，获取点击位置，计算出它处于哪个方格中，在那个方格中画上一个像素点，用一个二维数组记录方格中已绘制的位置。这就完成了初步的拼豆像素图的算法设计。</p>
<p>在以往的开发中，我都要求每一步都精益求精，导致整体进度缓慢，常常停留在初步阶段，就把自己绕晕。所以在此次开发中，尝试了小步快跑、快速迭代的方法。</p>
<h2 id="第一版：快速开发"><a href="#第一版：快速开发" class="headerlink" title="第一版：快速开发"></a>第一版：快速开发</h2><p>第一版本开发的时候，我尽量减少对性能、代码优化的思考，在最快的速度完成基本功能，也就是如何绘制像素点和删除像素图。</p>
<p>这样没有束缚的情况下，只需要集中精力完成功能的算法，很快就实现基本功能。</p>
<p>当然，代码也是很简单粗暴的，就需要第二版的完善。</p>
<h2 id="第二版：性能和代码优化"><a href="#第二版：性能和代码优化" class="headerlink" title="第二版：性能和代码优化"></a>第二版：性能和代码优化</h2><p>首先，把画布分为两层，一层是参考线画布，一层是绘图画布。参考线画布在初始化后就不需要修改，所有操作只需要在绘图画布上进行，减少了绘图时候的工作量。</p>
<p>然后，把通用功能的代码封装成公共函数，减少冗余。</p>
<h2 id="第三版：封装绘图库，并在应用中不断完善"><a href="#第三版：封装绘图库，并在应用中不断完善" class="headerlink" title="第三版：封装绘图库，并在应用中不断完善"></a>第三版：封装绘图库，并在应用中不断完善</h2><p>Pixler 主要代码是 Canvas 绘图，所以可以把 Canvas 主要绘图功能封装一下，单独成一个绘图库，减少主代码冗余，也方便在其他项目中引用。</p>
<p>在大学期间，我研究 jQuery 的时候就仿着写了一个链式结构的 JavaScript 框架 <a href="https://github.com/younglaker/octjs" target="_blank" rel="external">Oct.js</a>，加上第一、第二版本对 Canvas 接口的熟悉，所以开发起来并不困难。但在接口设计上重复弄了几次，这部分的经验我也写了一篇文章 <a href="http://laker.me/blog/2017/06/15/17_0615_easy_canvas/">《EasyCanvas：连续画图的一些总结》</a> 记录了一下。</p>
<p>开发 Easycanvas.js，不仅是在 JavaScript 开发、Canvas 运用上的提升，还是一个开源项目的完整实践。期间有一个小伙伴加入参与了合作，可惜没参与太多功能就退出了，但还是一次很好的开源项目的体验。</p>
<p>在开发代码的过程中，还编写了相关的文档。接口不断优化修改，文档也不断的调整，就连文档格式也做了多次调整，工作量是不小，但也不厌其烦。</p>
<p>由于时间原因，在开发完 Easycanvas.js 基础版本后就去做别的项目。间隔一段时间回来再看，基本没有有最初开发时候的熟悉感，这就得靠我之前写的文档了。所以，好的文档是项目的开门钥匙。</p>
<p>就这样，我像一个刚接触这个绘图库的用户一样，参照文档，把 Easycanvas.js 重构了 Pixler 的绘图代码。同时，在应用的过程中发现了 Easycanvas.js 的不足，又反过来进行完善。两个项目相辅相成。</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/blog20151229112337.png" alt="Easycanvas"></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>相比之前开发的 <a href="https://github.com/younglaker/octjs" target="_blank" rel="external">Oct.js</a>，只有开发和单元测试，并没有大规模地应用到实际项目中（我也尝试过，但一旦项目做大，就涉及到 jQuery 插件 ，就不得不引入 jQuery，就和 Oct.js 重复了，就只好把 Oct.js 删掉）。</p>
<p>所以，这次 Pixler 和 Easycanvas.js 的开发，从0到1再到100，是一个很好的经历。不仅是编程技能上的提升，还是项目管理上积累了经验。</p>
<p>至此 Pixler 和 Easycanvas.js 完成了一个较为稳定的版本，但还有很大的提升空间，我都一一记录在 Todolist 上了，等我一一突破。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20180503.jpg?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;EasyCanvas绘图库实践&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://laker.me/blog/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="http://laker.me/blog/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="http://laker.me/blog/tags/JavaScript/"/>
    
      <category term="Canvas" scheme="http://laker.me/blog/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>HTML5 Canvas 清除圆形、不规则区域</title>
    <link href="http://laker.me/blog/2018/04/18/18_0418_canvas_cleararc/"/>
    <id>http://laker.me/blog/2018/04/18/18_0418_canvas_cleararc/</id>
    <published>2018-04-18T00:24:00.000Z</published>
    <updated>2018-05-22T14:29:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20180411.jpg?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="Canvas 清除不规则区域"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<p> 默认 Canvas Api 只提供了清除矩形区域的接口 <code>clearRect()</code>，但有时候需要清除圆形或其他特殊形状的区域。比如我在开发 <a href="https://github.com/younglaker/pixeler" target="_blank" rel="external">pixeler</a> 擦除绘制的圆形，刚开始是用 <code>clearRect()</code>， 设置大于圆形直径的正方形来擦除，后来想，能不能直接擦除圆形区域。</p>
<p> 根据 <a href="https://stackoverflow.com/questions/3564717/how-can-i-clear-an-arc-or-circle-in-html5-canvas" target="_blank" rel="external">Stack Overflow</a> 的回答和 <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation" target="_blank" rel="external">Mozilla 的文档</a>，<code>ctx.globalCompositeOperation</code> 提供了多种色彩合成模式，其中 <code>destination-out</code> 能够完成清除效果：</p>
<p> <img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20180522-180816@2x.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="destination-out"></p>
<p> 可以拓展 Canvas 接口：</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CanvasRenderingContext2D.prototype.clearArc = function(x, y, radius, startAngle, endAngle, anticlockwise) &#123;</div><div class="line">    <span class="keyword">this</span>.beginPath();</div><div class="line">    <span class="keyword">this</span>.globalCompositeOperation = <span class="string">'destination-out'</span>;</div><div class="line">    <span class="keyword">this</span>.fillStyle = <span class="string">'black'</span>;</div><div class="line">    <span class="keyword">this</span>.arc(x, y, radius, startAngle, endAngle, anticlockwise);</div><div class="line">    <span class="comment">// 参数分别是：圆心横坐标、纵坐标、半径、开始的角度、结束的角度、是否逆时针</span></div><div class="line">    <span class="keyword">this</span>.fill();</div><div class="line">    <span class="keyword">this</span>.closePath();</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p> 进一步，可以自定义各种路径：</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">CanvasRenderingContext2D.prototype.clear = function() &#123;</div><div class="line">    <span class="keyword">this</span>.save();</div><div class="line">    <span class="keyword">this</span>.globalCompositeOperation = <span class="string">'destination-out'</span>;</div><div class="line">    <span class="keyword">this</span>.fillStyle = <span class="string">'black'</span>;</div><div class="line">    <span class="keyword">this</span>.fill();</div><div class="line">    <span class="keyword">this</span>.restore();</div><div class="line">&#125;;</div><div class="line"></div><div class="line">CanvasRenderingContext2D.prototype.clearArc = function(x, y, radius, startAngle, endAngle, anticlockwise) &#123;</div><div class="line">    <span class="keyword">this</span>.beginPath();</div><div class="line">    <span class="keyword">this</span>.arc(x, y, radius, startAngle, endAngle, anticlockwise);</div><div class="line">    <span class="keyword">this</span>.clear();</div><div class="line">&#125;;</div><div class="line"></div><div class="line">CanvasRenderingContext2D.prototype.clearShape = function(x, y, radius, startAngle, endAngle, anticlockwise) &#123;</div><div class="line">    <span class="keyword">this</span>.beginPath();</div><div class="line">    <span class="comment">// 定义各种不规则图形，如三角形、五角星...</span></div><div class="line">    <span class="keyword">this</span>.clear();</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>调用：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var canvas = document.getElementById('canvas');</div><div class="line">var context = canvas.getContext('<span class="number">2</span>d');</div><div class="line"></div><div class="line">context.clearArc(<span class="number">50</span>, <span class="number">100</span>, <span class="number">10</span>, <span class="number">0</span>, Math.<span class="literal">PI</span> * <span class="number">2</span>, false);</div><div class="line">context.clearArc(<span class="number">80</span>, <span class="number">100</span>, <span class="number">20</span>, <span class="number">0</span>, Math.<span class="literal">PI</span>, false);</div></pre></td></tr></table></figure></p>
<p><a href="http://jsdo.it/akm2/e8CK" target="_blank" rel="external">效果参考</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20180411.jpg?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;Canvas 清除不规则区域&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://laker.me/blog/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="http://laker.me/blog/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="http://laker.me/blog/tags/JavaScript/"/>
    
      <category term="Canvas" scheme="http://laker.me/blog/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>利用 Github 分支管理一写无关痛痒的项目</title>
    <link href="http://laker.me/blog/2018/02/11/18_0211_use_github/"/>
    <id>http://laker.me/blog/2018/02/11/18_0211_use_github/</id>
    <published>2018-02-11T00:24:00.000Z</published>
    <updated>2018-02-17T16:04:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20180211.jpg?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="利用 Github 分支管理小项目"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>因为经常会写一些小程序，需要备份到 Github 方便管理和分享。随项目增多，Repo 的数目越来越多，但是很多是无关痛痒的，不必要这么多仓库存放。处女座情结表示这样特别乱，而且一眼看上去都是很辣鸡的代码，得想办法整理一下。</p>
<h2 id="整理方法"><a href="#整理方法" class="headerlink" title="整理方法"></a>整理方法</h2><p>1.建立一个仓库 （例如我的 <a href="https://github.com/younglaker/CometLab" target="_blank" rel="external">CometLab</a>），master分支用来做展示入口，只存放一个 README.md 来作为介绍。起名 Lab，就是意味着这里就是一个实验室。里面都是些实验性的项目。<br>2.每个小项目用其他分支存放，各分支之间没什么关系。例如现在有的<code>vue-todo</code> <code>vue-eleme</code> <code>ng-ionic</code>。</p>
<p>问题来了，在分支上的提交不计入 contribution，但是我会在这个仓库的分支进行很多开发，导致calendar是空的，不是所有的发布信息都展示出来，管理代码不太方便。</p>
<h2 id="Contributions未被Github计入的几个常见原因"><a href="#Contributions未被Github计入的几个常见原因" class="headerlink" title="Contributions未被Github计入的几个常见原因"></a>Contributions未被Github计入的几个常见原因</h2><ul>
<li>进行Commits的用户没有关联到Github帐号</li>
<li>未合并到默认分支或gh-pages的Commit</li>
<li>Fork的仓库</li>
</ul>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>既然要求合并到 master 才能计入 contribution，那么就 merge 一下就可以解决。</p>
<p>分支的小项目在日常进行正常的开发、提交，待基本完成后一次性merge 到 master，以前的 commit 会一次性计入 contribution，展示在 calendar上。</p>
<h2 id="merge-操作"><a href="#merge-操作" class="headerlink" title="merge 操作"></a>merge 操作</h2><p>先切换到默认分支</p>
<pre><code>git checkout master 
</code></pre><p>合并到 master </p>
<pre><code>git merge origin/分支名
</code></pre><p>删除除了mater readme.md 以外的所以文件，并修改readme的冲突，保持 master 为空。提交更改到本地：</p>
<pre><code>git add -A
git commit -m&apos;merge&apos;
</code></pre><p>再提交到 master</p>
<pre><code>git push origin master
</code></pre><p>在分支里曾经提交过的 commit 就会一次性计入 contribution，展示在 calendar上。</p>
<h2 id="升级用法"><a href="#升级用法" class="headerlink" title="升级用法"></a>升级用法</h2><p>为了方便开发，每个分支在本地用一个文件夹。</p>
<p>下载指定分支的代码：</p>
<pre><code>git clone -b 分支 git@github.com:younglaker/CometLab.git
</code></pre><p>修改本地文件夹名字成分支名字，方便管理。</p>
<p>再 clone 一个完整的仓库，需要 merge 的时候再 pull、merge、push。</p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>提交代码找不到远端分支。很可能是本地所在分支不是AAA，很可能目前是在master，误以为在AAA分支。</p>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git push origin AAA</div><div class="line"><span class="keyword">error: </span>src refspec AAA does not match any.</div><div class="line"><span class="keyword">error: </span>failed to push some refs to 'git@github.com:younglaker/BBB.git'</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20180211.jpg?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;利用 Github 分支管理小项目&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="GitHub" scheme="http://laker.me/blog/categories/GitHub/"/>
    
    
      <category term="GitHub" scheme="http://laker.me/blog/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js 2 高仿饿了么开发及解注六：goods 商品件组</title>
    <link href="http://laker.me/blog/2017/11/20/17_1120_vuejs_eleme_6/"/>
    <id>http://laker.me/blog/2017/11/20/17_1120_vuejs_eleme_6/</id>
    <published>2017-11-20T00:24:00.000Z</published>
    <updated>2018-02-11T15:05:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20170620.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="Vue.js 2 高仿饿了么开发及解注六"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<p>慕课网早期出了《Vue.js 1 高仿饿了么APP》的课程，本系列文章根据课程，使用 Vue.js 2 版本进行开发，并进行了一步步开发流程记录和详细的代码注解。</p>
<p><a href="https://github.com/ustbhuangyi/vue-sell" target="_blank" rel="external">原作者的代码</a></p>
<p><a href="https://github.com/younglaker/CometLab/tree/vue-eleme" target="_blank" rel="external">我做的含有详细代码注解的版本</a></p>
<hr>
<h1 id="购物车组件"><a href="#购物车组件" class="headerlink" title="购物车组件"></a>购物车组件</h1><p>功能： 点击购物车组件（不只是购物车logo，是整个底部的购物车栏），弹出购物车详情列表，可以删减数量、清空购物车。付款功能</p>
<p><code>shopcart.vue</code> 引入并注册 cartcontrol 组件</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// “添减食品” 组件</span></div><div class="line"><span class="keyword">import</span> cartcontrol <span class="keyword">from</span> <span class="string">'components/cartcontrol/cartcontrol'</span></div><div class="line"></div><div class="line">  ...</div><div class="line">  components: &#123;</div><div class="line">    cartcontrol</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>购物车清单HTML：</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="comment">&lt;!-- 点击购物车logo出来的购物列表 --&gt;</span></span></div><div class="line"><span class="comment">&lt;!-- 折叠动画 fold --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"fold"</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- 根据 listShow 的值来显示列表 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shopcart-list"</span> <span class="attr">v-show</span>=<span class="string">"listShow"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-header"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"empty"</span> @<span class="attr">click</span>=<span class="string">"empty"</span>&gt;</span>清空<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- 购物清单 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 定义了 ref="listContent"，可以传入BS插件，滑动购物清单 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-content"</span> <span class="attr">ref</span>=<span class="string">"listContent"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">      </div><div class="line">        <span class="comment">&lt;!-- 展示加进购物车的食品、数量、价钱 --&gt;</span></div><div class="line">        <span class="comment">&lt;!-- goods组件传进来的selectFoods --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"food"</span> <span class="attr">v-for</span>=<span class="string">"food in selectFoods"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span><span class="template-variable">&#123;&#123;food.name&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div><div class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>￥<span class="template-variable">&#123;&#123;food.price*food.count&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div><div class="line">          <span class="tag">&lt;/<span class="name">div</span></span></div><div class="line">          </div><div class="line">          &lt;<span class="attr">div</span> <span class="attr">class</span>=<span class="string">"cartcontrol-wrapper"</span>&gt;</div><div class="line">            <span class="comment">&lt;!-- “添减食品” 组件 --&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 传入当前 food --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">cartcontrol</span> @<span class="attr">add</span>=<span class="string">"addFood"</span> <span class="attr">:food</span>=<span class="string">"food"</span>&gt;</span><span class="tag">&lt;/<span class="name">cartcontrol</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></div></pre></td></tr></table></figure>
<p>购物车清单JavaScript部分<br>先定义一个购物车清单的折叠的标记</p>
<figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">data</span> () &#123;</span></div><div class="line">  <span class="title">return</span> &#123;</div><div class="line">    ...</div><div class="line">    <span class="title">fold</span>: <span class="title">true</span> </div><div class="line">  &#125;</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<p>通过fold来触发计算listShow()，HTML根据listShow()的返回值来展开、折叠</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 根据 listShow 的值来显示列表 --&gt;</div><div class="line">&lt;div <span class="class"><span class="keyword">class</span>="<span class="title">shopcart</span>-<span class="title">list</span>" <span class="title">v</span>-<span class="title">show</span>="<span class="title">listShow</span>"&gt;</span></div><div class="line"></div><div class="line">computed: &#123;</div><div class="line">  <span class="comment">/* 判断购物车详情列表折叠、打开状态 */</span></div><div class="line">  listShow () &#123;</div><div class="line">    <span class="comment">// 若购物车里没有东西，则折叠标记fold = true，跳出整个函数</span></div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.totalCount) &#123;</div><div class="line">      <span class="keyword">this</span>.fold = <span class="literal">true</span></div><div class="line">      <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 能运行到这里，说明购物车里有东西，fold=false，所以show=true</span></div><div class="line">    let show = !<span class="keyword">this</span>.fold</div><div class="line">    <span class="keyword">if</span> (show) &#123;</div><div class="line">      <span class="comment">// 购物清单超过高度，添加 BScroll 插件，可以滑动清单</span></div><div class="line">      <span class="keyword">this</span>.$nextTick(() =&gt; &#123;</div><div class="line">        <span class="comment">// 如果this.scroll不存在，则创建</span></div><div class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.scroll) &#123;</div><div class="line">          <span class="comment">// 传入DOM &lt;div class="list-content" ref="listContent"&gt;，定义了 ref="listContent"</span></div><div class="line">          <span class="keyword">this</span>.scroll = new BScroll(<span class="keyword">this</span>.$refs.listContent, &#123;</div><div class="line">            click: <span class="literal">true</span></div><div class="line">          &#125;)</div><div class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果this.scroll存在，则更新（插件重新计算内容是否超出固定高度来使用滑动）</span></div><div class="line">          <span class="keyword">this</span>.scroll.refresh()</div><div class="line">        &#125;</div><div class="line">      &#125;)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> show</div><div class="line">  &#125;</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<p>点击触发的展开、折叠：</p>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="comment">&lt;!-- 底部购物车 --&gt;</span></span></div><div class="line"><span class="comment">&lt;!-- 点击触发折叠/展开购物车清单 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span> @<span class="attr">click</span>=<span class="string">"toggleList"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- @click="hideList"：点击阴影遮罩，收起购物车清单 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-mask"</span> @<span class="attr">click</span>=<span class="string">"hideList"</span> <span class="attr">v-show</span>=<span class="string">"listShow"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">methods: <span class="template-variable">&#123;</span></div><div class="line">  /* 折叠/展开购物车清单 */</div><div class="line">  toggleList () &#123;</div><div class="line">    // 如果购物车为空，则退出</div><div class="line">    <span class="keyword">if</span> (!this.totalCount) &#123;</div><div class="line">      return</div><div class="line">    &#125;<span class="xml"></span></div><div class="line"></div><div class="line">    // 此时购物车不为空，点击购物车组件，设置fold为之前的相反值</div><div class="line">    this.fold = !this.fold</div><div class="line">  &#125;,</div><div class="line">  /* 收起购物车清单 */</div><div class="line">  hideList () <span class="template-variable">&#123;</span></div><div class="line">    // fold值的变化，会触发listShow()重新计算</div><div class="line">    this.fold = true</div><div class="line">  &#125;<span class="xml">,</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>清空购物车：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">span</span> class=<span class="string">"empty"</span> @click=<span class="string">"empty"</span>&gt;清空&lt;/span&gt;</div><div class="line"></div><div class="line"><span class="comment">/* 清空购物车 */</span></div><div class="line">empty () &#123;</div><div class="line">  this<span class="selector-class">.selectFoods</span><span class="selector-class">.forEach</span>((food) =&gt; &#123;</div><div class="line">    food<span class="selector-class">.count</span> = <span class="number">0</span></div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>付款：</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 结算按钮 --&gt;</div><div class="line">&lt;!-- .stop.prevent 阻止事件冒泡，避免点击付款时，触发整个购物条的点击事件（显示购物清单） --&gt;</div><div class="line">&lt;div <span class="class"><span class="keyword">class</span>="<span class="title">content</span>-<span class="title">right</span>" <span class="meta">@click</span>.<span class="title">stop</span>.<span class="title">prevent</span>="<span class="title">pay</span>"&gt;</span></div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">pay</span>" :<span class="type">class="payClass"&gt;</span></span></div><div class="line">    &#123;&#123;payDesc&#125;&#125;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line"></div><div class="line">computed: &#123;</div><div class="line"></div><div class="line">  <span class="comment">/* 付款按钮的字样 */</span></div><div class="line">  payDesc () &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.totalPrice === <span class="number">0</span>) &#123;</div><div class="line">      <span class="comment">// ES6字符串拼接： `字符串$&#123;变量&#125;字符串` 等同于'字符串'+变量+'字符串'</span></div><div class="line">      <span class="comment">// 注意是反引号 ` ，而不是单引号 '</span></div><div class="line">      <span class="keyword">return</span> `￥$&#123;<span class="keyword">this</span>.minPrice&#125;元起送`</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.totalPrice &lt; <span class="keyword">this</span>.minPrice) &#123;</div><div class="line">      <span class="comment">// totalPrice是上面的totalPrice()，minPrice是从goods.vue传进来的</span></div><div class="line">      let diff = <span class="keyword">this</span>.minPrice - <span class="keyword">this</span>.totalPrice</div><div class="line">      <span class="keyword">return</span> `还差￥$&#123;diff&#125;元起送`</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      <span class="keyword">return</span> <span class="string">'去结算'</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  </div><div class="line">  <span class="comment">/* 付款按钮的CSS类 */</span></div><div class="line">  payClass () &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.totalPrice &lt; <span class="keyword">this</span>.minPrice) &#123;</div><div class="line">      <span class="keyword">return</span> <span class="string">'not-enough'</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      <span class="keyword">return</span> <span class="string">'enough'</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;,</div><div class="line"></div><div class="line">methods: &#123;</div><div class="line"></div><div class="line">  <span class="comment">/* 付款 */</span></div><div class="line">  pay () &#123;</div><div class="line">    <span class="comment">// 如果购买金额不足最低消费要求，则退出函数</span></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.totalPrice &lt; <span class="keyword">this</span>.minPrice) &#123;</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    window.alert(`支付$&#123;<span class="keyword">this</span>.totalPrice&#125;元`)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20170620.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;Vue.js 2 高仿饿了么开发及解注六&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue.js" scheme="http://laker.me/blog/categories/Vue-js/"/>
    
    
      <category term="HTML5" scheme="http://laker.me/blog/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="http://laker.me/blog/tags/JavaScript/"/>
    
      <category term="Vue.js" scheme="http://laker.me/blog/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js 2 高仿饿了么开发及解注五：购物车组件（上）</title>
    <link href="http://laker.me/blog/2017/11/05/17_1105_vuejs_eleme_5/"/>
    <id>http://laker.me/blog/2017/11/05/17_1105_vuejs_eleme_5/</id>
    <published>2017-11-05T00:24:00.000Z</published>
    <updated>2018-02-08T15:53:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20170620.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="Vue.js 2 高仿饿了么开发及解注五"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<p>慕课网早期出了《Vue.js 1 高仿饿了么APP》的课程，本系列文章根据课程，使用 Vue.js 2 版本进行开发，并进行了一步步开发流程记录和详细的代码注解。</p>
<p><a href="https://github.com/ustbhuangyi/vue-sell" target="_blank" rel="external">原作者的代码</a></p>
<p><a href="https://github.com/younglaker/CometLab/tree/vue-eleme" target="_blank" rel="external">我做的含有详细代码注解的版本</a></p>
<hr>
<h1 id="购物车组件"><a href="#购物车组件" class="headerlink" title="购物车组件"></a>购物车组件</h1><p>新建组件 shopcart/shopcart.vue</p>
<p><code>goods.vue</code> 里引用，并注册<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 购物车组件</span></div><div class="line"><span class="keyword">import</span> shopcart <span class="keyword">from</span> <span class="string">'components/shopcart/shopcart'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> default &#123;</div><div class="line">  ...</div><div class="line">  components: &#123;</div><div class="line">    shopcart</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="解注：-选择食物"><a href="#解注：-选择食物" class="headerlink" title="解注： 选择食物"></a>解注： 选择食物</h2><p><code>goods.vue</code> </p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">data.json里goods的结构</div><div class="line"><span class="string">"goods"</span>: [</div><div class="line">  &#123;</div><div class="line">    <span class="string">"name"</span>: <span class="string">"热销榜"</span>,</div><div class="line">    <span class="string">"type"</span>: -<span class="number">1</span>,</div><div class="line">    <span class="string">"foods"</span>: [&#123;&#125;, &#123;&#125;...]</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"name"</span>: <span class="string">"单人精彩套餐"</span>,</div><div class="line">    <span class="string">"type"</span>: <span class="number">2</span>,</div><div class="line">    <span class="string">"foods"</span>: [&#123;&#125;, &#123;&#125;...]</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>放在 computed 里，实时更新<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">computed: &#123;</div><div class="line">  selectFoods () &#123;</div><div class="line">    let foods = []</div><div class="line">    <span class="keyword">this</span>.goods.forEach(<span class="function"><span class="params">(good)</span> =&gt;</span> &#123;</div><div class="line">      good.foods.forEach(<span class="function"><span class="params">(food)</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">if</span> (food.count) &#123;</div><div class="line">          foods.push(food)</div><div class="line">        &#125;</div><div class="line">      &#125;)</div><div class="line">    &#125;)</div><div class="line">    <span class="keyword">return</span> foods</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="解注1，接收参数"><a href="#解注1，接收参数" class="headerlink" title="解注1，接收参数"></a>解注1，接收参数</h2><p><code>goods.vue</code> 给组件传值selectFoods（选择的食物，最终传的是selectFoods()的返回值foods）、deliveryPrice（配送费）、minPrice（起送价）<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;shopcart  <span class="symbol">:selectFoods=<span class="string">"selectFoods"</span></span> <span class="symbol">:deliveryPrice=<span class="string">"seller.deliveryPrice"</span></span> <span class="symbol">:minPrice=<span class="string">"seller.minPrice"</span>&gt;&lt;/shopcart&gt;</span></div><div class="line">&lt;<span class="regexp">/div&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>shopcart.vue</code>接收goods组件传进来的deliveryPrice、minPrice，default表示如果没有接收到时的默认值<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">export</span> <span class="selector-tag">default</span> &#123;</div><div class="line">  <span class="attribute">props</span>: &#123;</div><div class="line">    selectFoods: &#123;</div><div class="line">      type: Array,</div><div class="line">      <span class="built_in">default</span>() &#123;</div><div class="line">        return [</div><div class="line">          &#123;</div><div class="line">            price: <span class="number">10</span>,</div><div class="line">            count: <span class="number">1</span></div><div class="line">          &#125;</div><div class="line">        ]</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="selector-tag">deliveryPrice</span>: &#123;</div><div class="line">      <span class="attribute">type</span>: Number,</div><div class="line">      default: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">    <span class="selector-tag">minPrice</span>: &#123;</div><div class="line">      <span class="attribute">type</span>: Number,</div><div class="line">      default: <span class="number">0</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
<p>配送费直接显示：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"desc"</span>&gt;另需配送费￥&#123;&#123;deliveryPrice&#125;&#125;元&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure></p>
<h2 id="解注2：-显示商品总价和总数"><a href="#解注2：-显示商品总价和总数" class="headerlink" title="解注2： 显示商品总价和总数"></a>解注2： 显示商品总价和总数</h2><p>计算：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">computed: &#123;</div><div class="line">  <span class="comment">/* 计算商品总价 */</span></div><div class="line">  totalPrice() &#123;</div><div class="line">    let <span class="keyword">total</span> = 0</div><div class="line">    <span class="comment">// 循环累加总价</span></div><div class="line">    this.selectFoods.<span class="keyword">forEach</span>((food) =&gt; &#123;</div><div class="line">      <span class="keyword">total</span> += food.price * food.<span class="keyword">count</span></div><div class="line">    &#125;)</div><div class="line">    <span class="keyword">return</span> <span class="keyword">total</span></div><div class="line">  &#125;,</div><div class="line">  <span class="comment">/* 计算商品总数 */</span></div><div class="line">  totalCount() &#123;</div><div class="line">    let <span class="keyword">count</span> = 0</div><div class="line">    this.selectFoods.<span class="keyword">forEach</span>((food) =&gt; &#123;</div><div class="line">      <span class="keyword">count</span> += food.<span class="keyword">count</span></div><div class="line">    &#125;)</div><div class="line">    <span class="keyword">return</span> <span class="keyword">count</span></div><div class="line">  &#125;,</div></pre></td></tr></table></figure></p>
<p>显示：</p>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo-wrapper"</span>&gt;</span></span></div><div class="line">  <span class="comment">&lt;!-- 当 totalCount&gt;0 时，就添加 .highlight 高亮样式 --&gt;</span></div><div class="line">  <span class="comment">&lt;!-- totalCount 是一个方法，可以省略‘()’来用 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span> <span class="attr">:class</span>=<span class="string">"</span></span><span class="template-variable">&#123;'highlight':totalCount&gt;0&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon-shopping_cart"</span> <span class="attr">:class</span>=<span class="string">"</span></span><span class="template-variable">&#123;'highlight':totalCount&gt;0&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- 当 totalCount&gt;0 时，才显示这个标签 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"num"</span> <span class="attr">v-show</span>=<span class="string">"totalCount&gt;0"</span>&gt;</span><span class="template-variable">&#123;&#123;totalCount&#125;</span><span class="xml">&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- 当 totalPrice&gt;0 时，就添加 .highlight 高亮样式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price"</span> <span class="attr">:class</span>=<span class="string">"</span></span><span class="template-variable">&#123;'highlight':totalPrice&gt;0&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>￥</span><span class="template-variable">&#123;&#123;totalPrice&#125;</span><span class="xml">&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>另需配送费￥<span class="template-variable">&#123;&#123;deliveryPrice&#125;</span><span class="xml">&#125;元<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h2 id="解注3：付款按钮"><a href="#解注3：付款按钮" class="headerlink" title="解注3：付款按钮"></a>解注3：付款按钮</h2><p>付款按钮有三种状态</p>
<ul>
<li>未选择食品时，显示起送价</li>
<li>选择食品但未达到起送价，显示差价</li>
<li>选择食品但且达到起送价，显示’去结算’</li>
</ul>
<blockquote>
<p>  ES6字符串拼接： <code>字符串${变量}字符串</code> 等同于’字符串’+变量+’字符串’。 注意是反引号 ` ，而不是单引号 ‘</p>
</blockquote>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 付款按钮的字样 */</span></div><div class="line">payDesc() &#123;</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.totalPrice === <span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">return</span> `￥$&#123;<span class="keyword">this</span>.minPrice&#125;元起送`</div><div class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.totalPrice &lt; <span class="keyword">this</span>.minPrice) &#123;</div><div class="line">    let diff = <span class="keyword">this</span>.minPrice - <span class="keyword">this</span>.totalPrice</div><div class="line">    <span class="keyword">return</span> `还差￥$&#123;diff&#125;元起送`</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">'去结算'</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"pay"</span> :<span class="built_in">class</span>=<span class="string">"payClass"</span>&gt;</div><div class="line">  &#123;&#123;payDesc&#125;&#125;</div><div class="line">&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure>
<h1 id="“添加食物”组件"><a href="#“添加食物”组件" class="headerlink" title="“添加食物”组件"></a>“添加食物”组件</h1><p>新建 <code>components/cartcontrol/cartcontrol.vue</code><br>在<code>shopcart.vue</code>引入并注册</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cartcontrol <span class="keyword">from</span> <span class="string">'components/cartcontrol/cartcontrol'</span></div><div class="line"></div><div class="line">components: &#123;</div><div class="line">  cartcontrol</div><div class="line">&#125;</div><div class="line"></div><div class="line">&lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"food"</span> v-<span class="keyword">for</span>=<span class="string">"food in selectFoods"</span>&gt;</div><div class="line">  ...</div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cartcontrol-wrapper"</span>&gt;</div><div class="line">    <span class="xml"><span class="comment">&lt;!-- 传入 food --&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">cartcontrol</span> <span class="attr">:food</span>=<span class="string">"food"</span>&gt;</span><span class="tag">&lt;/<span class="name">cartcontrol</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">&lt;<span class="regexp">/li&gt;</span></div></pre></td></tr></table></figure>
<h2 id="解注1：减号滚动出现、数字渐变的动画"><a href="#解注1：减号滚动出现、数字渐变的动画" class="headerlink" title="解注1：减号滚动出现、数字渐变的动画"></a>解注1：减号滚动出现、数字渐变的动画</h2><p>vue.js 的 transition 的使用可以参考 header.vue 里的注释</p>
<p>添加 transition 标签，name 里写上动画名 move</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"move"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- 当food.count&gt;0时显示删除按钮 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cart-decrease"</span> <span class="attr">v-show</span>=<span class="string">"food.count&gt;0"</span> &gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"inner icon-remove_circle_outline"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></div></pre></td></tr></table></figure>
<p>name=”xx”,这里就是 xxe-enter-active，xxe-leave-active</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.cart-decrease</span></div><div class="line">  ...</div><div class="line">  <span class="attribute">opacity</span>: <span class="number">1</span></div><div class="line">  <span class="attribute">transform</span>: translate3d(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">  &amp;<span class="selector-class">.move-enter-active</span>, &amp;<span class="selector-class">.move-leave-active</span></div><div class="line">    <span class="attribute">transition</span>: all <span class="number">0.4s</span> linear</div><div class="line">  &amp;<span class="selector-class">.move-enter</span>, &amp;<span class="selector-class">.move-leave-active</span></div><div class="line">    <span class="attribute">opacity</span>: <span class="number">0</span></div><div class="line">    <span class="attribute">transform</span>: translate3d(<span class="number">24px</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">    <span class="selector-class">.inner</span></div><div class="line">      <span class="attribute">transform</span>: rotate(<span class="number">180deg</span>)</div></pre></td></tr></table></figure>
<h2 id="解注：添加食物，小球跳进购物车的动画"><a href="#解注：添加食物，小球跳进购物车的动画" class="headerlink" title="解注：添加食物，小球跳进购物车的动画"></a>解注：添加食物，小球跳进购物车的动画</h2><p><code>cartcontrll.vue</code> 里获取点击的食物加号的DOM</p>
<p><a href="https://cn.vuejs.org/v2/api/#vm-emit" target="_blank" rel="external">https://cn.vuejs.org/v2/api/#vm-emit</a></p>
<p><code>vm.$emit()</code>：触发当前实例上的事件。附加参数都会传给监听器回调。</p>
<p>侦听事件使用 <code>$on(eventName)</code><br>定义和触发事件使用 <code>$emit(eventName)</code></p>
<p>（vue.js 1.0 中的 <code>$dispatch</code> 和 <code>$broadcast</code> 已经被移除）</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">methods: &#123;</div><div class="line">  <span class="comment">/* 添加食物到购物车 */</span></div><div class="line">  addCart (<span class="keyword">event</span>) &#123;</div><div class="line">    ...</div><div class="line">    </div><div class="line">    <span class="comment">// 定义并触发 add 事件，event.target（点击的目标，即食品对应的加号） 作为参数</span></div><div class="line">    <span class="keyword">this</span>.$emit(<span class="string">'add'</span>, <span class="keyword">event</span>.target)</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p><code>goods.vue</code> 里添加食物的组件里使用<br>触发在cartcontroll.vue里定义的add事件，事件发生时触发addFood()<br>@add 等同于 v-on:add<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">cartcontrol</span> @<span class="attr">add</span>=<span class="string">"addFood"</span>&gt;</span><span class="tag">&lt;/<span class="name">cartcontrol</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>goods.vue</code>  addFood()调用_drop(), 调用_drop()再调用shopcart组件的drop方法</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;shopcart ref=<span class="string">"shopcart"</span> ...&gt;<span class="xml"><span class="tag">&lt;/<span class="name">shopcart</span>&gt;</span></span></div><div class="line"></div><div class="line">addFood (target) &#123;</div><div class="line">  <span class="keyword">this</span>._drop(target)</div><div class="line">&#125;,</div><div class="line">_drop (target) &#123;</div><div class="line">  <span class="comment">// 体验优化,异步执行下落动画</span></div><div class="line">  <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="comment">// 先在 &lt;shopcart&gt; 标签里添加 ref="shopcart" 属性，goods组件就能访问子组件shopcart里的方法</span></div><div class="line">    <span class="keyword">this</span>.$refs.shopcart.drop(target)</div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>shopcart.vue</code><br>这里的transition用 <a href="https://cn.vuejs.org/v2/guide/transitions.html#JavaScript-%E9%92%A9%E5%AD%90" target="_blank" rel="external">JavaScript 钩子</a>的用法。</p>
<ul>
<li>@before-enter=”方法”</li>
<li>@enter=”方法”</li>
<li>@after-enter=”方法”</li>
<li>@enter-cancelled=”方法”</li>
<li>@before-leave=”方法”</li>
<li>@leave=”方法”</li>
<li>@after-leave=”方法”</li>
<li>@leave-cancelled=”方法”</li>
</ul>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;transition name=<span class="string">"drop"</span> @before-enter=<span class="string">"beforeDrop"</span> @enter=<span class="string">"dropping"</span> @after-enter=<span class="string">"afterDrop"</span>&gt;</div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span>="<span class="title">ball</span>" <span class="title">v</span>-<span class="title">show</span>="<span class="title">ball</span>.<span class="title">show</span>"&gt;</span></div><div class="line">  &lt;/<span class="title">div</span>&gt;</div><div class="line">&lt;/<span class="title">transition</span>&gt;</div><div class="line"></div><div class="line"><span class="title">methods</span>: &#123;</div><div class="line">  <span class="comment">// --------</span></div><div class="line">  <span class="comment">// 进入中</span></div><div class="line">  <span class="comment">// --------</span></div><div class="line">  beforeDrop: <span class="function"><span class="keyword">function</span> <span class="params">(el)</span> </span>&#123;&#125;,</div><div class="line">  <span class="comment">// 此回调函数是可选项的设置</span></div><div class="line">  <span class="comment">// 与 CSS 结合时使用</span></div><div class="line">  dropping: <span class="function"><span class="keyword">function</span> <span class="params">(el, done)</span> </span>&#123;&#125;,</div><div class="line">  afterDrop: <span class="function"><span class="keyword">function</span> <span class="params">(el)</span> </span>&#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>shopcart.vue</code> 里的动画的具体实现。HTML部分：</p>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="comment">&lt;!-- 点击添加食物时，跳到购物车的动画小球 --&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ball-container"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- 循环显示小球 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"ball in balls"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 小球下落的动画 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- https://cn.vuejs.org/v2/guide/transitions.html#JavaScript-钩子 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 这里使用了Vue transition 的 avaScript-钩子。@before-enter、@enter、@after-enter、@enter-cancelled、@before-leave、@leave、@after-leave、@leave-cancelled --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- methods: </span><span class="template-variable">&#123;</span></div><div class="line">      beforeDrop: function (el) &#123;&#125;<span class="xml"><span class="comment">,</span></span></div><div class="line">      // 此回调函数是可选项的设置</div><div class="line">      // 与 CSS 结合时使用</div><div class="line">      dropping: function (el, done) <span class="template-variable">&#123;&#125;</span><span class="xml"><span class="comment">,</span></span></div><div class="line">      afterDrop: function (el) <span class="template-variable">&#123;&#125;</span><span class="xml"><span class="comment"></span></span></div><div class="line">    &#125; --&gt;</div><div class="line">    <span class="comment">&lt;!-- 推荐对于仅使用 JavaScript 过渡的元素添加 v-bind:css="false"，Vue 会跳过 CSS 的检测。这也可以避免过渡过程中 CSS 的影响 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"drop"</span> @<span class="attr">before-enter</span>=<span class="string">"beforeDrop"</span> @<span class="attr">enter</span>=<span class="string">"dropping"</span> @<span class="attr">after-enter</span>=<span class="string">"afterDrop"</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- 通过 ball.show 来判断是否显示 --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ball"</span> <span class="attr">v-show</span>=<span class="string">"ball.show"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner inner-hook"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>JavaScript 里写动画的方法</p>
<figure class="highlight qml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 找到可用的小球，将其push到dropBalls[] */</span></div><div class="line">drop (el) &#123;</div><div class="line">  <span class="comment">// 传入的 el 是点击的加号的DOM</span></div><div class="line">  <span class="comment">// balls，自定义的变量</span></div><div class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.balls.length; i++) &#123;</div><div class="line">    <span class="keyword">let</span> ball = <span class="keyword">this</span>.balls[i]</div><div class="line">    <span class="keyword">if</span> (!ball.show) &#123;</div><div class="line">      ball.show = <span class="literal">true</span></div><div class="line">      ball.el = el</div><div class="line">      <span class="comment">// dropBalls[]，自定义的变量，下落的小球</span></div><div class="line">      <span class="keyword">this</span>.dropBalls.push(ball)</div><div class="line">      <span class="comment">// 找到一个可用的ball，push到dropBalls[]后就可以退出了</span></div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;,</div><div class="line"><span class="comment">/* ‘下落动画’前 */</span></div><div class="line">beforeDrop (el) &#123;</div><div class="line">  <span class="keyword">let</span> count = <span class="keyword">this</span>.balls.length</div><div class="line">  <span class="keyword">while</span> (count--) &#123;</div><div class="line">    <span class="keyword">let</span> ball = <span class="keyword">this</span>.balls[count]</div><div class="line">    <span class="keyword">if</span> (ball.show) &#123;</div><div class="line">      <span class="comment">// drop() 里 给 ball添加的el属性（存放点击的加号的DOM）</span></div><div class="line">      <span class="comment">// getBoundingClientRect() 浏览器接口，获取【加号】相对于视窗的距离</span></div><div class="line">      <span class="keyword">let</span> <span class="built_in">rect</span> = ball.el.getBoundingClientRect()</div><div class="line">      <span class="comment">// 购物车与加号的水平距离 = 购物车横坐标 - 小球.ball的left大小</span></div><div class="line">      <span class="keyword">let</span> x = <span class="built_in">rect</span>.left - <span class="number">32</span></div><div class="line">      <span class="comment">// y 是负数</span></div><div class="line">      <span class="comment">// 购物车与加号的垂直距离 = -(窗口高度 - 购物纵坐标 - 小球.ball的bottom大小)</span></div><div class="line">      <span class="keyword">let</span> y = -(<span class="built_in">window</span>.innerHeight - <span class="built_in">rect</span>.top - <span class="number">22</span>)</div><div class="line">      <span class="comment">// 先不显示</span></div><div class="line">      el.style.display = <span class="string">''</span></div><div class="line">      <span class="comment">// 外面纵向偏移，内部横向偏移，最终达到整体抛物线的动画</span></div><div class="line">      <span class="comment">// 外面的DOM做纵向动画</span></div><div class="line">      <span class="comment">// 注意：字符串拼接，有变量的时候不用单引号，用`</span></div><div class="line">      el.style.webkitTransform = <span class="string">`translate3d(0,<span class="subst">$&#123;y&#125;</span>px,0)`</span></div><div class="line">      el.style.transform = <span class="string">`translate3d(0,<span class="subst">$&#123;y&#125;</span>px,0)`</span></div><div class="line">      <span class="comment">// 内部的DOM做横向动画</span></div><div class="line">      <span class="keyword">let</span> inner = el.getElementsByClassName(<span class="string">'inner-hook'</span>)[<span class="number">0</span>]</div><div class="line">      inner.style.webkitTransform = <span class="string">`translate3d(<span class="subst">$&#123;x&#125;</span>px,0,0)`</span></div><div class="line">      inner.style.transform = <span class="string">`translate3d(<span class="subst">$&#123;x&#125;</span>px,0,0)`</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;,</div><div class="line"><span class="comment">/* ‘下落动画’时 */</span></div><div class="line">dropping (el, done) &#123;</div><div class="line">  <span class="comment">// el.offsetHeight 触发浏览器重绘(当获取一些属性时，浏览器为取得 正确的值会触发重绘重排，如offsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、 clientTop、clientLeft、clientWidth、clientHeight、getComputedStyle() (currentStyle in IE))</span></div><div class="line">  <span class="comment">// 触发重绘，下面</span></div><div class="line">  <span class="comment">// 但是变量rf不用，所以加个eslint的注释不做变量是否使用的检查</span></div><div class="line">  <span class="comment">/* eslint-disable no-unused-vars */</span></div><div class="line">  <span class="keyword">let</span> rf = el.offsetHeight</div><div class="line">  <span class="comment">// 重置属性</span></div><div class="line">  <span class="keyword">this</span>.$nextTick(() =&gt; &#123;</div><div class="line">    el.style.webkitTransform = <span class="string">'translate3d(0,0,0)'</span></div><div class="line">    el.style.transform = <span class="string">'translate3d(0,0,0)'</span></div><div class="line">    <span class="keyword">let</span> inner = el.getElementsByClassName(<span class="string">'inner-hook'</span>)[<span class="number">0</span>]</div><div class="line">    inner.style.webkitTransform = <span class="string">'translate3d(0,0,0)'</span></div><div class="line">    inner.style.transform = <span class="string">'translate3d(0,0,0)'</span></div><div class="line">    el.addEventListener(<span class="string">'transitionend'</span>, done)</div><div class="line">  &#125;)</div><div class="line">&#125;,</div><div class="line"><span class="comment">/* ‘下落动画’后 */</span></div><div class="line">afterDrop (el) &#123;</div><div class="line">  <span class="comment">// 把dropBalls的这个元素删除</span></div><div class="line">  <span class="keyword">let</span> ball = <span class="keyword">this</span>.dropBalls.shift()</div><div class="line">  <span class="comment">// 重置小球属性</span></div><div class="line">  <span class="keyword">if</span> (ball) &#123;</div><div class="line">    ball.show = <span class="literal">false</span></div><div class="line">    el.style.display = <span class="string">'none'</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>还要在 CSS 里定义 transition 的属性</p>
<ul>
<li>transition: 过渡效果的属性 耗时 速度 延迟开始</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.ball-container</span></div><div class="line">  <span class="selector-class">.ball</span></div><div class="line">    <span class="comment">// 配合js写的小球下落的transition，这里定义了完成时间、弧度用贝塞尔曲线速度，来使效果出现抛物线效果</span></div><div class="line">    <span class="attribute">transition</span>: all <span class="number">0.4s</span> cubic-bezier(<span class="number">0.49</span>, -<span class="number">0.29</span>, <span class="number">0.75</span>, <span class="number">0.41</span>)</div><div class="line">    <span class="selector-class">.inner</span></div><div class="line">      <span class="comment">// 配合js写的小球下落的transition</span></div><div class="line">      <span class="attribute">transition</span>: all <span class="number">0.4s</span> linear</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20170620.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;Vue.js 2 高仿饿了么开发及解注五&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue.js" scheme="http://laker.me/blog/categories/Vue-js/"/>
    
    
      <category term="HTML5" scheme="http://laker.me/blog/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="http://laker.me/blog/tags/JavaScript/"/>
    
      <category term="Vue.js" scheme="http://laker.me/blog/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>用迅雷下载百度云，突破大文件和速度限制</title>
    <link href="http://laker.me/blog/2017/10/19/17_1019_baiduyun_download/"/>
    <id>http://laker.me/blog/2017/10/19/17_1019_baiduyun_download/</id>
    <published>2017-10-19T00:24:00.000Z</published>
    <updated>2018-02-08T15:34:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20171019.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="用迅雷下载百度云"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<p>百度云网页版有限制下载大文件，必须使用客户端，而客户端又有速度限制。要么使用破解版的客户端，安全性不敢保证。迅雷大家都有，可以考虑用迅雷下载百度云的资料。根据<a href="https://www.zhihu.com/question/22085759" target="_blank" rel="external">知乎上的讨论</a>，尝试了大家的方法，最后选择了其中一种，并在原答主的基础上有所改进。</p>
<h2 id="1、下载浏览器脚本管理器插件"><a href="#1、下载浏览器脚本管理器插件" class="headerlink" title="1、下载浏览器脚本管理器插件"></a>1、下载浏览器脚本管理器插件</h2><p>这里选用<a href="http://tampermonkey.net/index.php?version=4.0.69&amp;ext=dhdg&amp;show=gcal" target="_blank" rel="external">tampermonkey</a>，也可以选用其他的</p>
<p>官网下载：<a href="http://tampermonkey.net/index.php?version=4.0.69&amp;ext=dhdg&amp;show=gcal" target="_blank" rel="external">http://tampermonkey.net/index.php?version=4.0.69&amp;ext=dhdg&amp;show=gcal</a><br>备用下载：<a href="https://pan.baidu.com/s/1c2CdKFu" target="_blank" rel="external">https://pan.baidu.com/s/1c2CdKFu</a></p>
<h2 id="2、安装脚本"><a href="#2、安装脚本" class="headerlink" title="2、安装脚本"></a>2、安装脚本</h2><p>到 <a href="https://greasyfork.org/zh-CN/scripts/17800-%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6" target="_blank" rel="external">greasyfork</a> 下载解决百度云大文件下载限制的脚本</p>
<h2 id="３、到百度云网页版下载东西"><a href="#３、到百度云网页版下载东西" class="headerlink" title="３、到百度云网页版下载东西"></a>３、到百度云网页版下载东西</h2><p>打开百度云网页版，脚本就开始运行</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20170604164848.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="tampermonkey"></p>
<h3 id="chrome"><a href="#chrome" class="headerlink" title="chrome"></a>chrome</h3><p>选择文件下载</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20170604165104.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="step"></p>
<p>可以选择在chrome里下载，但是比较慢。<br>所以暂停下载，获取下载地址：</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20170604165126.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="step"></p>
<p>到迅雷新建下载任务，可以一次性下载多个任务</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20170604165231.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="step"></p>
<p>刚开始是0B，没事</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20170604165252.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="step"></p>
<p>解析、链接之后就正常了</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20170604165326.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="step"></p>
<h3 id="360-极速浏览器"><a href="#360-极速浏览器" class="headerlink" title="360 极速浏览器"></a>360 极速浏览器</h3><p>如果文件比较多，这样获取下载地址比较麻烦。国内的浏览器有些有直接点击迅雷下载。如果没有的可以重新安装迅雷以便重新安装迅雷插件。不想下载的也可以手动复制下载链接。</p>
<p>我刚下载的360极速可以直接显示下载地址，也比较方便。</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20170604165648.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="step"></p>
<p>批量下载，速度比较可观。不过不支持断点续传能力较弱，并且会出现下载到一半自动停掉，显示地址错误的提醒，大概是百度云的地址会有更换的机制。</p>
<p><img src="http://77g54f.com1.z0.glb.clouddn.com/QQ20170604181619.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="step"></p>
<p>如果长时间没下载完成，可能是百度云的某种机制使下载地址会失效，需要重新获取地址。我就是下了一晚上，没有限制下载个数，所有东西只下载了一半然后全部失效，以后都吸取教训限制下载个数，减少损失。建议文件不要太大，多分几个压缩包下载。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20171019.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;用迅雷下载百度云&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://laker.me/blog/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://laker.me/blog/tags/Tools/"/>
    
      <category term="效率" scheme="http://laker.me/blog/tags/%E6%95%88%E7%8E%87/"/>
    
      <category term="小工具" scheme="http://laker.me/blog/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js 2 高仿饿了么开发及解注四：goods 商品件组</title>
    <link href="http://laker.me/blog/2017/10/09/17_1009_vuejs_eleme_4/"/>
    <id>http://laker.me/blog/2017/10/09/17_1009_vuejs_eleme_4/</id>
    <published>2017-10-09T00:24:00.000Z</published>
    <updated>2017-10-27T07:53:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20170620.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="Vue.js 2 高仿饿了么开发及解注四"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">laker.me–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<p>慕课网早期出了《Vue.js 1 高仿饿了么APP》的课程，本系列文章根据课程，使用 Vue.js 2 版本进行开发，并进行了一步步开发流程记录和详细的代码注解。</p>
<p><a href="https://github.com/ustbhuangyi/vue-sell" target="_blank" rel="external">原作者的代码</a></p>
<p><a href="https://github.com/younglaker/CometLab/tree/vue-eleme" target="_blank" rel="external">我做的含有详细代码注解的版本</a></p>
<h2 id="评分组件"><a href="#评分组件" class="headerlink" title="评分组件"></a>评分组件</h2><p>新建 componet / star / star.vue， 评分星级的图片放入。</p>
<p>评分星级的星星的切图分为无星、半星、全星三种图案，各有2x、3x两种尺寸，通过三种图案组合拼凑成多种评分星数。一个星星用一个 <code>&lt;span&gt;</code> 装载，以背景的形式展现。</p>
<p><strong>star.vue</strong> CSS</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">@import <span class="string">"../../common/stylus/mixin.styl"</span></div><div class="line"></div><div class="line"><span class="selector-class">.star</span></div><div class="line">  <span class="attribute">font-size</span>: <span class="number">0</span></div><div class="line">  <span class="selector-class">.star-item</span></div><div class="line">    <span class="attribute">display</span>: inline-block</div><div class="line">    <span class="attribute">background-repeat</span>: no-repeat</div><div class="line">  <span class="comment">// star-xx 不同尺寸的星星</span></div><div class="line">  &amp;<span class="selector-class">.star-48</span></div><div class="line">    <span class="selector-class">.star-item</span></div><div class="line">      <span class="attribute">width</span>: <span class="number">20px</span></div><div class="line">      <span class="attribute">height</span>: <span class="number">20px</span></div><div class="line">      <span class="attribute">margin-right</span>: <span class="number">22px</span></div><div class="line">      <span class="attribute">background-size</span>: <span class="number">20px</span> <span class="number">20px</span></div><div class="line">      &amp;:last-child</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0</span> // 最后 一个星星没有margin-right</div><div class="line">      &amp;<span class="selector-class">.on</span></div><div class="line">        <span class="comment">// mixin.styl 里定义的 bg-image() </span></div><div class="line">        bg-image(<span class="string">'star48_on'</span>) <span class="comment">// 全星</span></div><div class="line">      &amp;<span class="selector-class">.half</span></div><div class="line">        bg-image(<span class="string">'star48_half'</span>)  <span class="comment">// 半星</span></div><div class="line">      &amp;<span class="selector-class">.off</span></div><div class="line">        bg-image(<span class="string">'star48_off'</span>)  <span class="comment">// 无星</span></div><div class="line">  &amp;<span class="selector-class">.star-36</span></div><div class="line">    <span class="selector-class">.star-item</span></div><div class="line">      <span class="attribute">width</span>: <span class="number">15px</span></div><div class="line">      <span class="attribute">height</span>: <span class="number">15px</span></div><div class="line">      <span class="attribute">margin-right</span>: <span class="number">6px</span></div><div class="line">      <span class="attribute">background-size</span>: <span class="number">15px</span> <span class="number">15px</span></div><div class="line">      &amp;:last-child</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0</span></div><div class="line">      &amp;<span class="selector-class">.on</span></div><div class="line">        bg-image(<span class="string">'star36_on'</span>)</div><div class="line">      &amp;<span class="selector-class">.half</span></div><div class="line">        bg-image(<span class="string">'star36_half'</span>)</div><div class="line">      &amp;<span class="selector-class">.off</span></div><div class="line">        bg-image(<span class="string">'star36_off'</span>)</div><div class="line">  &amp;<span class="selector-class">.star-24</span></div><div class="line">    <span class="selector-class">.star-item</span></div><div class="line">      <span class="attribute">width</span>: <span class="number">10px</span></div><div class="line">      <span class="attribute">height</span>: <span class="number">10px</span></div><div class="line">      <span class="attribute">margin-right</span>: <span class="number">3px</span></div><div class="line">      <span class="attribute">background-size</span>: <span class="number">10px</span> <span class="number">10px</span></div><div class="line">      &amp;:last-child</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0</span></div><div class="line">      &amp;<span class="selector-class">.on</span></div><div class="line">        bg-image(<span class="string">'star24_on'</span>)</div><div class="line">      &amp;<span class="selector-class">.half</span></div><div class="line">        bg-image(<span class="string">'star24_half'</span>)</div><div class="line">      &amp;<span class="selector-class">.off</span></div><div class="line">        bg-image(<span class="string">'star24_off'</span>)</div></pre></td></tr></table></figure>
<p><strong>star.vue</strong> HTML<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 循环填充星星状态的class --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"star"</span> <span class="attr">:class</span>=<span class="string">"starType"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- v-for：循环获取 itemClasses() 返回的数组 --&gt;</span></div><div class="line">  <span class="comment">&lt;!-- :class="itemClass" 把获取的class加给span --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"(itemClass,index) in itemClasses"</span> <span class="attr">:class</span>=<span class="string">"itemClass"</span> <span class="attr">class</span>=<span class="string">"star-item"</span> <span class="attr">key</span>=<span class="string">"index"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>star.vue</strong> JavaScript<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// const 定义常量</span></div><div class="line"><span class="keyword">const</span> LENGTH = <span class="number">5</span>   <span class="comment">// 星星个数</span></div><div class="line"><span class="keyword">const</span> CLS_ON = <span class="string">'on'</span>   <span class="comment">// 星星的三种状态</span></div><div class="line"><span class="keyword">const</span> CLS_HALF = <span class="string">'half'</span></div><div class="line"><span class="keyword">const</span> CLS_OFF = <span class="string">'off'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// 使用组件时传入的参数</span></div><div class="line">  props: &#123;</div><div class="line">    size: &#123;</div><div class="line">      <span class="keyword">type</span>: <span class="built_in">Number</span></div><div class="line">    &#125;,</div><div class="line">    score: &#123;</div><div class="line">      <span class="keyword">type</span>: <span class="built_in">Number</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 计算</span></div><div class="line">  computed: &#123;</div><div class="line">    starType () &#123;</div><div class="line">      <span class="keyword">return</span> <span class="string">'star-'</span> + <span class="keyword">this</span>.size</div><div class="line">    &#125;,</div><div class="line">    itemClasses () &#123;</div><div class="line">      <span class="keyword">let</span> result = []  <span class="comment">// 存放最终结果的数组</span></div><div class="line">      <span class="keyword">let</span> score = <span class="built_in">Math</span>.floor(<span class="keyword">this</span>.score * <span class="number">2</span>) / <span class="number">2</span> <span class="comment">// 通过分数算星星个数</span></div><div class="line">      <span class="comment">// 向下取0.5的公式。floor() 执行向下取整</span></div><div class="line">      <span class="comment">// floor(3.3 * 2) / 2 = 3 即 3颗全星+2颗无星</span></div><div class="line">      <span class="comment">// floor(3.6 * 2) / 2 = 3.5 即 3颗全星+1颗半星+1颗无星</span></div><div class="line">      <span class="keyword">let</span> hasDecimal = score % <span class="number">1</span> !== <span class="number">0</span> <span class="comment">// 取余不为0则有半星</span></div><div class="line">      <span class="keyword">let</span> integer = <span class="built_in">Math</span>.floor(score) <span class="comment">// 整数部分</span></div><div class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; integer; i++) &#123; <span class="comment">// 设置全星</span></div><div class="line">        result.push(CLS_ON)</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">if</span> (hasDecimal) &#123;</div><div class="line">        result.push(CLS_HALF)</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">while</span> (result.length &lt; LENGTH) &#123; <span class="comment">// 循环，补充无星</span></div><div class="line">        result.push(CLS_OFF)</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> result</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>header.vue</strong> 引用并注册 star 组件<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Star <span class="keyword">from</span> <span class="string">'components/star/star'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> default &#123;</div><div class="line">  ...</div><div class="line">  components: &#123;</div><div class="line">    Star   <span class="comment">// 注册评分组件</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>header.vue</strong> 使用评分组件</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"star-wrapper"</span>&gt;</div><div class="line">  <span class="xml"><span class="comment">&lt;!-- 使用 star 组件时，需传入 size、score --&gt;</span></span></div><div class="line">  <span class="comment">&lt;!-- :size 星星大小，组件定义了48、36、24 --&gt;</span></div><div class="line">  <span class="comment">&lt;!-- :score 评分，从data.json里来 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">star</span> <span class="attr">:size</span>=<span class="string">"48"</span> <span class="attr">:score</span>=<span class="string">"seller.score"</span>&gt;</span><span class="tag">&lt;/<span class="name">star</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20170620.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;Vue.js 2 高仿饿了么开发及解注四&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue.js" scheme="http://laker.me/blog/categories/Vue-js/"/>
    
    
      <category term="HTML5" scheme="http://laker.me/blog/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="http://laker.me/blog/tags/JavaScript/"/>
    
      <category term="Vue.js" scheme="http://laker.me/blog/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Semantic UI 及在 React.js 下开发的一些坑</title>
    <link href="http://laker.me/blog/2017/09/20/17_0920_sematic/"/>
    <id>http://laker.me/blog/2017/09/20/17_0920_sematic/</id>
    <published>2017-09-20T00:24:00.000Z</published>
    <updated>2017-09-28T04:02:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20170928.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="Semantic"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">进击的程序媛 http://laker.me/blog/</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<p>最近做了一个 React + Semantic 的电商网站，记录一些坑。之前都是用 Bootstrap，第一次用 Semantic，有些不习惯。</p>
<h2 id="React-版"><a href="#React-版" class="headerlink" title="React 版"></a>React 版</h2><p><a href="https://react.semantic-ui.com/" target="_blank" rel="external">https://react.semantic-ui.com/</a></p>
<h2 id="避免弹框表单自动聚焦"><a href="#避免弹框表单自动聚焦" class="headerlink" title="避免弹框表单自动聚焦"></a>避免弹框表单自动聚焦</h2><p>弹框表单自动聚焦第一个 input 本来是好事情，但是如果第一个 input 设置了 selection，自动聚焦就会弹出下拉框，会很奇怪，如果是带实时搜索功能就会触发一次无用的搜索造成资源浪费</p>
<p>dropdown 插件有禁止自动聚焦的属性，<a href="https://semantic-ui.com/modules/dropdown.html#/settings" target="_blank" rel="external">参考1</a>，<a href="https://github.com/Semantic-Org/Semantic-UI/issues/2041" target="_blank" rel="external">参考2</a>:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$(</span>selector).modal(&#123;</div><div class="line">    <span class="symbol">autofocus:</span> <span class="keyword">false</span>,</div><div class="line">&#125;).modal(<span class="string">'show'</span>);</div></pre></td></tr></table></figure></p>
<p>但是我设置了无效。</p>
<p>又根据 <a href="https://stackoverflow.com/questions/7827004/how-to-avoid-automatic-focus-on-first-input-field-when-popping-a-html-form-as-a" target="_blank" rel="external">Stack Overflow 的方法</a> 给 input 设置了 tabindex、autofocus，也未果<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">tabindex</span>=<span class="string">"-1"</span> autofocus=<span class="string">"false"</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>在 react 里 tabindex、autofocus 要写成 tabIndex、autoFocus</p>
</blockquote>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>实在没有办法，只能伪造一个 input，隐藏在界面最前面，但是不能用display:none</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.hidden-input</span> &#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">background</span>: none;</div><div class="line">  <span class="attribute">z-index</span>: -<span class="number">99</span>;</div><div class="line">  <span class="attribute">top</span>: -<span class="number">1000px</span>;  <span class="comment">// 让input离开窗口视觉范围，不然还是会有聚焦的高亮框</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>聚焦时不显示下拉列表：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$(</span><span class="string">'.ui.dropdown'</span>).dropdown(</div><div class="line">    <span class="symbol">showOnFocus:</span> <span class="keyword">false</span>, <span class="regexp">//</span> 聚焦时不展开下拉列表</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><p>新增全局 css class，给父级添加就好：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.align-item-c</span> &#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">  <span class="attribute">align-items</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CheckBox-让-label-在左边"><a href="#CheckBox-让-label-在左边" class="headerlink" title="CheckBox 让 label 在左边"></a>CheckBox 让 label 在左边</h2><h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h3><p>让 label 左浮动<br><a href="http://jsbin.com/tewowa/1/edit?css,output" target="_blank" rel="external">http://jsbin.com/tewowa/1/edit?css,output</a><br><a href="https://stackoverflow.com/questions/25355614/semantic-ui-positioning-labels" target="_blank" rel="external">https://stackoverflow.com/questions/25355614/semantic-ui-positioning-labels</a></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"ui toggle checkbox custom"</span>&gt;</div><div class="line">    &lt;<span class="selector-tag">input</span> id=<span class="string">"privacy"</span> type=<span class="string">"checkbox"</span> checked=<span class="string">"checked"</span>&gt;</div><div class="line">    &lt;<span class="selector-tag">label</span> <span class="keyword">for</span>=<span class="string">"privacy"</span>&gt;Public&lt;/label&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-class">.custom</span> <span class="selector-tag">label</span> &#123;</div><div class="line">  <span class="attribute">float</span>: left;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二：</p>
<p>让 checkbox 右浮动<br><a href="https://github.com/Semantic-Org/Semantic-UI/issues/1986" target="_blank" rel="external">https://github.com/Semantic-Org/Semantic-UI/issues/1986</a></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.ui</span><span class="selector-class">.toggle</span><span class="selector-class">.checkbox</span><span class="selector-attr">[class*="right floated"]</span> &#123;</div><div class="line">    <span class="attribute">float</span>: right <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">margin-right</span>: <span class="number">0em</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">margin-left</span>: <span class="number">1em</span> <span class="meta">!important</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>把 label 置空（不能删除，否则 CheckBox 也不见），在 div 前面加个 span 或 lable</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"privacy"</span>&gt;Public&lt;/<span class="keyword">label</span>&gt;</div><div class="line">&lt;div <span class="keyword">class</span>=<span class="string">"ui toggle checkbox custom"</span>&gt;</div><div class="line">    &lt;<span class="keyword">input</span> id=<span class="string">"privacy"</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span> checked=<span class="string">"checked"</span>&gt;</div><div class="line">    &lt;<span class="keyword">label</span>&gt;&lt;/<span class="keyword">label</span>&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<h2 id="允许多层弹框"><a href="#允许多层弹框" class="headerlink" title="允许多层弹框"></a>允许多层弹框</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">(<span class="string">".modal"</span>).modal(&#123;<span class="string">'allowMultiple'</span>: <span class="literal">true</span>&#125;)</span></div></pre></td></tr></table></figure>
<h2 id="dropdown-里含-checkbox、searchbox"><a href="#dropdown-里含-checkbox、searchbox" class="headerlink" title="dropdown 里含 checkbox、searchbox"></a>dropdown 里含 checkbox、searchbox</h2><p><a href="https://jsfiddle.net/jp8xj0wk/2/" target="_blank" rel="external">https://jsfiddle.net/jp8xj0wk/2/</a><br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">$('.ui.dropdown').dropdown(&#123;</div><div class="line">  action: 'nothing'</div><div class="line">&#125;);</div><div class="line">$('.ui.checkbox').checkbox();</div><div class="line"></div><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"ui basic right labeled dropdown icon button"</span>&gt;</div><div class="line">  &lt;i <span class="built_in">class</span>=<span class="string">"dropdown icon"</span>&gt;&lt;/i&gt;</div><div class="line">  &lt;span <span class="built_in">class</span>=<span class="string">"ui tiny header"</span>&gt;Filter&lt;/span&gt;</div><div class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"menu"</span>&gt;</div><div class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"ui icon search input"</span>&gt;</div><div class="line">      &lt;i <span class="built_in">class</span>=<span class="string">"search icon"</span>&gt;&lt;/i&gt;</div><div class="line">      &lt;input type=<span class="string">"text"</span> <span class="built_in">name</span>=<span class="string">"Search"</span> placeholder=<span class="string">"Search&amp;hellip;"</span>&gt;</div><div class="line">    &lt;/<span class="keyword">div</span>&gt;</div><div class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"scrolling menu"</span>&gt;</div><div class="line">      &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"ui item checkbox"</span> data-value=<span class="string">"item1"</span>&gt;</div><div class="line">        &lt;input type=<span class="string">"checkbox"</span> <span class="built_in">name</span>=<span class="string">"item1"</span>&gt;</div><div class="line">        &lt;label&gt;First <span class="built_in">item</span>&lt;/label&gt;</div><div class="line">      &lt;/<span class="keyword">div</span>&gt;</div><div class="line">      &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"ui item checkbox"</span> data-value=<span class="string">"item2"</span>&gt;</div><div class="line">        &lt;input type=<span class="string">"checkbox"</span> <span class="built_in">name</span>=<span class="string">"item2"</span>&gt;</div><div class="line">        &lt;label&gt;Second <span class="built_in">item</span>&lt;/label&gt;</div><div class="line">      &lt;/<span class="keyword">div</span>&gt;</div><div class="line">    &lt;/<span class="keyword">div</span>&gt;</div><div class="line">  &lt;/<span class="keyword">div</span>&gt;</div><div class="line">&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure></p>
<h2 id="设置下拉选择框已选内容，下拉框全选"><a href="#设置下拉选择框已选内容，下拉框全选" class="headerlink" title="设置下拉选择框已选内容，下拉框全选"></a>设置下拉选择框已选内容，下拉框全选</h2><p>在编辑内容页面，需要从后台获取数据，把数据展示在input 里</p>
<p><a href="https://jsfiddle.net/dbr26njq/48/" target="_blank" rel="external">https://jsfiddle.net/dbr26njq/48/</a><br><a href="https://codepen.io/monty5811/pen/xVgrzB" target="_blank" rel="external">https://codepen.io/monty5811/pen/xVgrzB</a></p>
<p>HTML<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;input type=<span class="string">"button"</span> <span class="built_in">id</span>=<span class="string">"setValues"</span> value=<span class="string">"Set Values"</span> /&gt;</div><div class="line">&lt;input type=<span class="string">"button"</span> <span class="built_in">id</span>=<span class="string">"clearValues"</span> value=<span class="string">"Clear Values"</span> /&gt;</div><div class="line"></div><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"ui fluid selection search dropdown multiple"</span>&gt;</div><div class="line">  &lt;input <span class="built_in">name</span>=<span class="string">"tags"</span> type=<span class="string">"hidden"</span>&gt;</div><div class="line">  </div><div class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"default text"</span>&gt;Select&lt;/<span class="keyword">div</span>&gt;</div><div class="line">  &lt;i <span class="built_in">class</span>=<span class="string">"dropdown icon"</span>&gt;&lt;/i&gt;</div><div class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"menu"</span>&gt;</div><div class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"item"</span> data-value=<span class="string">"1"</span>&gt;Angular&lt;/<span class="keyword">div</span>&gt;</div><div class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"item"</span> data-value=<span class="string">"2"</span>&gt;CSS&lt;/<span class="keyword">div</span>&gt;</div><div class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"item"</span> data-value=<span class="string">"3"</span>&gt;JS&lt;/<span class="keyword">div</span>&gt;</div><div class="line">  &lt;/<span class="keyword">div</span>&gt;</div><div class="line">&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure></p>
<p>JavaScript<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'.ui.dropdown'</span>).dropdown(&#123;</div><div class="line">    <span class="attr">onChange</span>: <span class="function"><span class="keyword">function</span> (<span class="params">value, text, $selectedItem</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(value);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">forceSelection</span>: <span class="literal">false</span>, </div><div class="line">    <span class="attr">selectOnKeydown</span>: <span class="literal">false</span>, </div><div class="line">    <span class="attr">showOnFocus</span>: <span class="literal">false</span>, <span class="comment">// 聚焦时不展开下拉列表</span></div><div class="line">    on: <span class="string">"hover"</span> </div><div class="line">&#125;);</div><div class="line"> </div><div class="line"></div><div class="line"><span class="comment">// 清空</span></div><div class="line">$(<span class="string">'#clearValues'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">'.ui.dropdown'</span>).dropdown(<span class="string">"clear"</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 全选</span></div><div class="line">$(<span class="string">'#setValues'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">'.ui.dropdown'</span>).dropdown(<span class="string">"set selected"</span>, [</div><div class="line">        <span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span></div><div class="line">    ]);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>单选下拉框的赋值方法一样：<br><a href="http://jsfiddle.net/0qobkc2x/" target="_blank" rel="external">http://jsfiddle.net/0qobkc2x/</a><br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;select id=<span class="string">"test"</span> class=<span class="string">"ui dropdown"</span>&gt;</div><div class="line">    &lt;<span class="keyword">option</span> <span class="keyword">value</span>=<span class="string">""</span>&gt;Select an <span class="keyword">option</span>...&lt;/<span class="keyword">option</span>&gt;</div><div class="line">    &lt;<span class="keyword">option</span> <span class="keyword">value</span>=<span class="string">"A"</span>&gt;AAA&lt;/<span class="keyword">option</span>&gt;</div><div class="line">    &lt;<span class="keyword">option</span> <span class="keyword">value</span>=<span class="string">"B"</span>&gt;BBB&lt;/<span class="keyword">option</span>&gt;</div><div class="line">&lt;/select&gt;</div><div class="line"></div><div class="line">$(<span class="string">'#test'</span>).dropdown(<span class="string">'set selected'</span>,<span class="string">'B'</span>);</div></pre></td></tr></table></figure></p>
<h2 id="侧边菜单栏铺满窗口"><a href="#侧边菜单栏铺满窗口" class="headerlink" title="侧边菜单栏铺满窗口"></a>侧边菜单栏铺满窗口</h2><p><a href="https://stackoverflow.com/questions/1575141/make-div-100-height-of-browser-window" target="_blank" rel="external">https://stackoverflow.com/questions/1575141/make-div-100-height-of-browser-window</a><br><code>height:100%</code>无效。除了一些老方法，这里采用用视图单位。</p>
<p>单位：</p>
<ul>
<li>vh：viewport height</li>
<li>vw: viewport width</li>
<li>vmin: viewport minimum length</li>
<li>vmax: viewport maximum length</li>
</ul>
<p>例如 1vh = 1% of the viewport的高度</p>
<p>所以可以这样写：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">height</span>:<span class="number">100vh</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>可以减去头部高度：</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">height</span>: calc(<span class="number">100vh</span> - <span class="number">50px</span>);</div></pre></td></tr></table></figure>
<h2 id="与父级同高，等高"><a href="#与父级同高，等高" class="headerlink" title="与父级同高，等高"></a>与父级同高，等高</h2><p>方法一:<br><a href="http://jsfiddle.net/emn13/7FFp3/" target="_blank" rel="external">http://jsfiddle.net/emn13/7FFp3/</a><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span> &#123; <span class="attribute">display</span>: table; &#125;</div><div class="line"><span class="selector-class">.parent</span> &gt; <span class="selector-tag">div</span> &#123;<span class="attribute">display</span>: table-cell; &#125;</div></pre></td></tr></table></figure></p>
<p>方法二<br><a href="http://jsbin.com/hetunujuma/1/edit?html,css,output" target="_blank" rel="external">http://jsbin.com/hetunujuma/1/edit?html,css,output</a><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span> &#123; <span class="attribute">display</span>: flex; &#125;</div><div class="line"><span class="selector-class">.parent</span>&gt;<span class="selector-tag">div</span> &#123; <span class="attribute">flex</span>:<span class="number">1</span>; &#125;</div></pre></td></tr></table></figure></p>
<h2 id="checkbox-监听"><a href="#checkbox-监听" class="headerlink" title="checkbox 监听"></a>checkbox 监听</h2><p><a href="https://stackoverflow.com/questions/27702613/semantic-ui-checkbox-onchange-event-not-triggered" target="_blank" rel="external">https://stackoverflow.com/questions/27702613/semantic-ui-checkbox-onchange-event-not-triggered</a><br><a href="http://jsfiddle.net/mktm/xwp1L695/" target="_blank" rel="external">http://jsfiddle.net/mktm/xwp1L695/</a><br><a href="https://github.com/Semantic-Org/Semantic-UI/issues/375" target="_blank" rel="external">https://github.com/Semantic-Org/Semantic-UI/issues/375</a></p>
<p>checkbox 是用 label 的 before 伪装的，，input 是隐藏的，只能根据父级 div 的 checked 属性来判断</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> MyCheckBox = React.createClass(&#123;</div><div class="line">    <span class="attr">getInitialState</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> &#123;</div><div class="line">            <span class="attr">checked</span>:<span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="attr">handleChange</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>.setState(&#123;<span class="attr">checked</span>: !<span class="keyword">this</span>.state.checked&#125;);</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">            <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"ui toggle checkbox"</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleChange&#125;</span> /&gt;</span></span></div><div class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">&#123;this.state.checked&#125;</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        )</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="时间、日期控件-date-range-picker"><a href="#时间、日期控件-date-range-picker" class="headerlink" title="时间、日期控件 date range picker"></a>时间、日期控件 date range picker</h2><p>日期范围选择器jQuery：<a href="https://github.com/longbill/jquery-date-range-picker" target="_blank" rel="external">https://github.com/longbill/jquery-date-range-picker</a><br>日期范围选择器jQuery：<a href="https://codecanyon.net/item/calentim-date-time-range-picker/20099228" target="_blank" rel="external">https://codecanyon.net/item/calentim-date-time-range-picker/20099228</a><br>很多功能的选择器React：<a href="https://github.com/react-component/calendar" target="_blank" rel="external">https://github.com/react-component/calendar</a><br>小时范围选择器 <a href="https://codepen.io/fikrimarhan/pen/Pmaooq" target="_blank" rel="external">https://codepen.io/fikrimarhan/pen/Pmaooq</a><br>日期、小时范围选择 <a href="http://jonthornton.github.io/jquery-timepicker/" target="_blank" rel="external">http://jonthornton.github.io/jquery-timepicker/</a><br>小时范围滑块：<a href="https://codepen.io/caseymhunt/pen/kertA" target="_blank" rel="external">https://codepen.io/caseymhunt/pen/kertA</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20170928.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;Semantic&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="React.js" scheme="http://laker.me/blog/categories/React-js/"/>
    
    
      <category term="HTML5" scheme="http://laker.me/blog/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="http://laker.me/blog/tags/JavaScript/"/>
    
      <category term="React.js" scheme="http://laker.me/blog/tags/React-js/"/>
    
      <category term="Semantic" scheme="http://laker.me/blog/tags/Semantic/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js 2 高仿饿了么开发及解注三：star 评分件组</title>
    <link href="http://laker.me/blog/2017/09/08/17_0908_vuejs_eleme_3/"/>
    <id>http://laker.me/blog/2017/09/08/17_0908_vuejs_eleme_3/</id>
    <published>2017-09-08T00:24:00.000Z</published>
    <updated>2017-09-08T03:34:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://77g54f.com1.z0.glb.clouddn.com/bgt-20170620.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10" alt="Vue.js 2 高仿饿了么开发及解注三"></p>
<a id="more"></a>
<blockquote>
<p>欢迎交换友链： <a href="http://laker.me/blog">Laker’s Blog–进击的程序媛</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a><br>V信: lakerHQ （请注明‘来自博客’）</p>
</blockquote>
<p>慕课网早期出了《Vue.js 1 高仿饿了么APP》的课程，本系列文章根据课程，使用 Vue.js 2 版本进行开发，并进行了一步步开发流程记录和详细的代码注解。</p>
<p><a href="https://github.com/ustbhuangyi/vue-sell" target="_blank" rel="external">原作者的代码</a></p>
<p><a href="https://github.com/younglaker/CometLab/tree/vue-eleme" target="_blank" rel="external">我做的含有详细代码注解的版本</a></p>
<h2 id="评分组件"><a href="#评分组件" class="headerlink" title="评分组件"></a>评分组件</h2><p>新建 componet / star / star.vue， 评分星级的图片放入。</p>
<p>评分星级的星星的切图分为无星、半星、全星三种图案，各有2x、3x两种尺寸，通过三种图案组合拼凑成多种评分星数。一个星星用一个 <code>&lt;span&gt;</code> 装载，以背景的形式展现。</p>
<p><strong>star.vue</strong> CSS</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">@import <span class="string">"../../common/stylus/mixin.styl"</span></div><div class="line"></div><div class="line"><span class="selector-class">.star</span></div><div class="line">  <span class="attribute">font-size</span>: <span class="number">0</span></div><div class="line">  <span class="selector-class">.star-item</span></div><div class="line">    <span class="attribute">display</span>: inline-block</div><div class="line">    <span class="attribute">background-repeat</span>: no-repeat</div><div class="line">  <span class="comment">// star-xx 不同尺寸的星星</span></div><div class="line">  &amp;<span class="selector-class">.star-48</span></div><div class="line">    <span class="selector-class">.star-item</span></div><div class="line">      <span class="attribute">width</span>: <span class="number">20px</span></div><div class="line">      <span class="attribute">height</span>: <span class="number">20px</span></div><div class="line">      <span class="attribute">margin-right</span>: <span class="number">22px</span></div><div class="line">      <span class="attribute">background-size</span>: <span class="number">20px</span> <span class="number">20px</span></div><div class="line">      &amp;:last-child</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0</span> // 最后 一个星星没有margin-right</div><div class="line">      &amp;<span class="selector-class">.on</span></div><div class="line">        <span class="comment">// mixin.styl 里定义的 bg-image() </span></div><div class="line">        bg-image(<span class="string">'star48_on'</span>) <span class="comment">// 全星</span></div><div class="line">      &amp;<span class="selector-class">.half</span></div><div class="line">        bg-image(<span class="string">'star48_half'</span>)  <span class="comment">// 半星</span></div><div class="line">      &amp;<span class="selector-class">.off</span></div><div class="line">        bg-image(<span class="string">'star48_off'</span>)  <span class="comment">// 无星</span></div><div class="line">  &amp;<span class="selector-class">.star-36</span></div><div class="line">    <span class="selector-class">.star-item</span></div><div class="line">      <span class="attribute">width</span>: <span class="number">15px</span></div><div class="line">      <span class="attribute">height</span>: <span class="number">15px</span></div><div class="line">      <span class="attribute">margin-right</span>: <span class="number">6px</span></div><div class="line">      <span class="attribute">background-size</span>: <span class="number">15px</span> <span class="number">15px</span></div><div class="line">      &amp;:last-child</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0</span></div><div class="line">      &amp;<span class="selector-class">.on</span></div><div class="line">        bg-image(<span class="string">'star36_on'</span>)</div><div class="line">      &amp;<span class="selector-class">.half</span></div><div class="line">        bg-image(<span class="string">'star36_half'</span>)</div><div class="line">      &amp;<span class="selector-class">.off</span></div><div class="line">        bg-image(<span class="string">'star36_off'</span>)</div><div class="line">  &amp;<span class="selector-class">.star-24</span></div><div class="line">    <span class="selector-class">.star-item</span></div><div class="line">      <span class="attribute">width</span>: <span class="number">10px</span></div><div class="line">      <span class="attribute">height</span>: <span class="number">10px</span></div><div class="line">      <span class="attribute">margin-right</span>: <span class="number">3px</span></div><div class="line">      <span class="attribute">background-size</span>: <span class="number">10px</span> <span class="number">10px</span></div><div class="line">      &amp;:last-child</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0</span></div><div class="line">      &amp;<span class="selector-class">.on</span></div><div class="line">        bg-image(<span class="string">'star24_on'</span>)</div><div class="line">      &amp;<span class="selector-class">.half</span></div><div class="line">        bg-image(<span class="string">'star24_half'</span>)</div><div class="line">      &amp;<span class="selector-class">.off</span></div><div class="line">        bg-image(<span class="string">'star24_off'</span>)</div></pre></td></tr></table></figure>
<p><strong>star.vue</strong> HTML<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 循环填充星星状态的class --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"star"</span> <span class="attr">:class</span>=<span class="string">"starType"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- v-for：循环获取 itemClasses() 返回的数组 --&gt;</span></div><div class="line">  <span class="comment">&lt;!-- :class="itemClass" 把获取的class加给span --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"(itemClass,index) in itemClasses"</span> <span class="attr">:class</span>=<span class="string">"itemClass"</span> <span class="attr">class</span>=<span class="string">"star-item"</span> <span class="attr">key</span>=<span class="string">"index"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>star.vue</strong> JavaScript<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// const 定义常量</span></div><div class="line"><span class="keyword">const</span> LENGTH = <span class="number">5</span>   <span class="comment">// 星星个数</span></div><div class="line"><span class="keyword">const</span> CLS_ON = <span class="string">'on'</span>   <span class="comment">// 星星的三种状态</span></div><div class="line"><span class="keyword">const</span> CLS_HALF = <span class="string">'half'</span></div><div class="line"><span class="keyword">const</span> CLS_OFF = <span class="string">'off'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="comment">// 使用组件时传入的参数</span></div><div class="line">  props: &#123;</div><div class="line">    size: &#123;</div><div class="line">      <span class="keyword">type</span>: <span class="built_in">Number</span></div><div class="line">    &#125;,</div><div class="line">    score: &#123;</div><div class="line">      <span class="keyword">type</span>: <span class="built_in">Number</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 计算</span></div><div class="line">  computed: &#123;</div><div class="line">    starType () &#123;</div><div class="line">      <span class="keyword">return</span> <span class="string">'star-'</span> + <span class="keyword">this</span>.size</div><div class="line">    &#125;,</div><div class="line">    itemClasses () &#123;</div><div class="line">      <span class="keyword">let</span> result = []  <span class="comment">// 存放最终结果的数组</span></div><div class="line">      <span class="keyword">let</span> score = <span class="built_in">Math</span>.floor(<span class="keyword">this</span>.score * <span class="number">2</span>) / <span class="number">2</span> <span class="comment">// 通过分数算星星个数</span></div><div class="line">      <span class="comment">// 向下取0.5的公式。floor() 执行向下取整</span></div><div class="line">      <span class="comment">// floor(3.3 * 2) / 2 = 3 即 3颗全星+2颗无星</span></div><div class="line">      <span class="comment">// floor(3.6 * 2) / 2 = 3.5 即 3颗全星+1颗半星+1颗无星</span></div><div class="line">      <span class="keyword">let</span> hasDecimal = score % <span class="number">1</span> !== <span class="number">0</span> <span class="comment">// 取余不为0则有半星</span></div><div class="line">      <span class="keyword">let</span> integer = <span class="built_in">Math</span>.floor(score) <span class="comment">// 整数部分</span></div><div class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; integer; i++) &#123; <span class="comment">// 设置全星</span></div><div class="line">        result.push(CLS_ON)</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">if</span> (hasDecimal) &#123;</div><div class="line">        result.push(CLS_HALF)</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">while</span> (result.length &lt; LENGTH) &#123; <span class="comment">// 循环，补充无星</span></div><div class="line">        result.push(CLS_OFF)</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> result</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>header.vue</strong> 引用并注册 star 组件<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Star <span class="keyword">from</span> <span class="string">'components/star/star'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> default &#123;</div><div class="line">  ...</div><div class="line">  components: &#123;</div><div class="line">    Star   <span class="comment">// 注册评分组件</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>header.vue</strong> 使用评分组件</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"star-wrapper"</span>&gt;</div><div class="line">  <span class="xml"><span class="comment">&lt;!-- 使用 star 组件时，需传入 size、score --&gt;</span></span></div><div class="line">  <span class="comment">&lt;!-- :size 星星大小，组件定义了48、36、24 --&gt;</span></div><div class="line">  <span class="comment">&lt;!-- :score 评分，从data.json里来 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">star</span> <span class="attr">:size</span>=<span class="string">"48"</span> <span class="attr">:score</span>=<span class="string">"seller.score"</span>&gt;</span><span class="tag">&lt;/<span class="name">star</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://77g54f.com1.z0.glb.clouddn.com/bgt-20170620.png?imageView2/1/q/100|watermark/1/image/aHR0cDovLzc3ZzU0Zi5jb20xLnowLmdsYi5jbG91ZGRuLmNvbS9sYWtlcjEucG5n/dissolve/100/gravity/South/dy/10&quot; alt=&quot;Vue.js 2 高仿饿了么开发及解注三&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Vue.js" scheme="http://laker.me/blog/categories/Vue-js/"/>
    
    
      <category term="HTML5" scheme="http://laker.me/blog/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="http://laker.me/blog/tags/JavaScript/"/>
    
      <category term="Vue.js" scheme="http://laker.me/blog/tags/Vue-js/"/>
    
  </entry>
  
</feed>
