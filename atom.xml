<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>进击的程序媛，Laker&#39;s blog</title>
  <subtitle>进击的程序媛，江小湖Laker</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://laker.me/blog/"/>
  <updated>2020-03-02T06:13:18.000Z</updated>
  <id>http://laker.me/blog/</id>
  
  <author>
    <name>Laker Huang</name>
    <email>younglaker8#gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Algorithm - Find the next perfect squarev</title>
    <link href="http://laker.me/blog/2020/01/15/20_0115_coderwars_Find_the_next_perfect_square/"/>
    <id>http://laker.me/blog/2020/01/15/20_0115_coderwars_Find_the_next_perfect_square/</id>
    <published>2020-01-15T00:24:00.000Z</published>
    <updated>2020-03-02T06:13:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><a href="https://www.codewars.com/kata/56269eb78ad2e4ced1000013/javascript" target="_blank" rel="external">https://www.codewars.com/kata/56269eb78ad2e4ced1000013/javascript</a></p>
<p>Complete the findNextSquare method that finds the next integral perfect square after the one passed as a parameter. Recall that an integral perfect square is an integer n such that sqrt(n) is also an integer.</p>
<p>If the parameter is itself not a perfect square, than -1 should be returned. You may assume the parameter is positive.</p>
<a id="more"></a>
<p>Example :</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">indNextSquare(<span class="number">121</span>) --&gt; sqrt(<span class="number">121</span>)=<span class="number">11</span> is <span class="type">integer</span>, (<span class="number">11</span>+<span class="number">1</span>)*(<span class="number">11</span>+<span class="number">1</span>)=<span class="number">144</span> returns <span class="number">144</span></div><div class="line">findNextSquare(<span class="number">625</span>) --&gt; returns <span class="number">676</span></div><div class="line">findNextSquare(<span class="number">114</span>) --&gt; returns <span class="number">-1</span> since <span class="number">114</span> is not a perfect</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><p><a href="https://github.com/younglaker/codewars" target="_blank" rel="external">https://github.com/younglaker/codewars</a></p>
<h3 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h3><p>The main part is to check whether the Math.sqrt(sq) is integer.</p>
<h3 id="Using-regular-expression"><a href="#Using-regular-expression" class="headerlink" title="Using regular expression:"></a>Using regular expression:</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">findNextSquare</span>(<span class="params">sq</span>) </span>&#123;</div><div class="line">  <span class="comment">// Return the next square if sq if a perfect square, -1 otherwise</span></div><div class="line">  <span class="keyword">let</span> <span class="built_in">number</span> = <span class="built_in">Math</span>.sqrt(sq)</div><div class="line"></div><div class="line">  <span class="keyword">return</span> <span class="regexp">/^[\d]+$/</span>.test(<span class="built_in">number</span>.toString()) ? (<span class="built_in">number</span> + <span class="number">1</span>) ** <span class="number">2</span> : <span class="number">-1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="remainder"><a href="#remainder" class="headerlink" title="remainder"></a>remainder</h3><p>Math.sqrt(121)%1 = 0 = false<br>Math.sqrt(122)%1 = 0.045361017187261155 = true</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">findNextSquare</span>(<span class="params">sq</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(sq)%<span class="number">1</span>? <span class="number">-1</span> : <span class="built_in">Math</span>.pow(<span class="built_in">Math</span>.sqrt(sq)+<span class="number">1</span>,<span class="number">2</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Math-round-Math-ceil-Math-floor"><a href="#Math-round-Math-ceil-Math-floor" class="headerlink" title="Math.round, Math.ceil, Math.floor"></a>Math.round, Math.ceil, Math.floor</h3><p>Math.round(1) === 1<br>Math.round(1.1) = 1 != 1.1</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Math.<span class="built_in">round</span>(<span class="built_in">number</span>) === <span class="built_in">number</span>)</div></pre></td></tr></table></figure>
<h3 id="Number-isInteger"><a href="#Number-isInteger" class="headerlink" title="Number.isInteger"></a>Number.isInteger</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Number</span>.isInteger(<span class="built_in">sqrt</span>)</div></pre></td></tr></table></figure>
<h3 id="parseInt"><a href="#parseInt" class="headerlink" title="parseInt"></a>parseInt</h3><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if(<span class="name">parseInt</span>(<span class="name">number</span>) === number)</div></pre></td></tr></table></figure>
<h3 id="Bit-operation"><a href="#Bit-operation" class="headerlink" title="Bit operation"></a>Bit operation</h3><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if(<span class="name">parseInt</span>(<span class="name">number</span> | <span class="number">0</span>) === number)</div></pre></td></tr></table></figure>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/kata/56269eb78ad2e4ced1000013/javascript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.codewars.com/kata/56269eb78ad2e4ced1000013/javascript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Complete the findNextSquare method that finds the next integral perfect square after the one passed as a parameter. Recall that an integral perfect square is an integer n such that sqrt(n) is also an integer.&lt;/p&gt;
&lt;p&gt;If the parameter is itself not a perfect square, than -1 should be returned. You may assume the parameter is positive.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="CodeWars" scheme="http://laker.me/blog/tags/CodeWars/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm - The Office VI Sabbatical</title>
    <link href="http://laker.me/blog/2020/01/10/20_0110_coderwars_The_Office_VI_Sabbatical/"/>
    <id>http://laker.me/blog/2020/01/10/20_0110_coderwars_The_Office_VI_Sabbatical/</id>
    <published>2020-01-10T00:24:00.000Z</published>
    <updated>2020-02-29T10:39:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><a href="https://www.codewars.com/kata/57fe50d000d05166720000b1/train/javascript" target="_blank" rel="external">https://www.codewars.com/kata/57fe50d000d05166720000b1/train/javascript</a></p>
<p>val=your value to the organisation<br>happ=her happiness level at the time of asking and finally<br>The numbers of letters from ‘sabbatical’ that are present in string ‘x’.</p>
<p>If the sum of the three parameters (as described above) is &gt; 22, return ‘Sabbatical! Boom!’, else return ‘Back to your desk, boy.’. memory?</p>
<a id="more"></a>
<p>Example :</p>
<figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Test.assertEquals<span class="comment">(sabb('Can I have a sabbatical?', 5, 5)</span>, <span class="string">'Sabbatical! Boom!'</span>);</div><div class="line">Test.assertEquals<span class="comment">(sabb('Why are you shouting?', 7, 2)</span>, <span class="string">'Back to your desk, boy.'</span>);</div><div class="line">Test.assertEquals<span class="comment">(sabb('What do you mean I cant learn to code??', 8, 9)</span>, <span class="string">'Sabbatical! Boom!'</span>);</div><div class="line">Test.assertEquals<span class="comment">(sabb('Please calm down', 9, 1)</span>, <span class="string">'Back to your desk, boy.'</span>);</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><p><a href="https://github.com/younglaker/codewars" target="_blank" rel="external">https://github.com/younglaker/codewars</a></p>
<h3 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h3><figure class="highlight scilab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sabb</span><span class="params">(x, val, happ)</span>&#123;</span></div><div class="line">  let <span class="built_in">sum</span> = (x.match(/[sabticl]/ig )|| []).<span class="built_in">length</span>;</div><div class="line"></div><div class="line">  <span class="keyword">if</span>(<span class="built_in">sum</span> + val + happ &gt; <span class="number">22</span>) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">'Sabbatical! Boom!'</span></div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">'Back to your desk, boy.'</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>x.match(/[sabticl]/ig</code> to select all matched letters into a array. <code>|| []</code> is order to avoid error when there is no matched letter for <code>.length</code>.</p>
<p>Shorten the code to below:</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> <span class="title">sabb</span>(x, val, happ)&#123;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> <span class="type">(x.match(/[sabticl]/ig</span> )|| []).length + val + happ &gt; <span class="number">22</span> ? <span class="symbol">'Sabbatical</span>! Boom!' : '<span class="type">Back</span> to your desk, boy.'</div></pre></td></tr></table></figure>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/kata/57fe50d000d05166720000b1/train/javascript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.codewars.com/kata/57fe50d000d05166720000b1/train/javascript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;val=your value to the organisation&lt;br&gt;happ=her happiness level at the time of asking and finally&lt;br&gt;The numbers of letters from ‘sabbatical’ that are present in string ‘x’.&lt;/p&gt;
&lt;p&gt;If the sum of the three parameters (as described above) is &amp;gt; 22, return ‘Sabbatical! Boom!’, else return ‘Back to your desk, boy.’. memory?&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="CodeWars" scheme="http://laker.me/blog/tags/CodeWars/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm - Vowel Count</title>
    <link href="http://laker.me/blog/2020/01/08/20_0108_coderwars_Vowel_Count/"/>
    <id>http://laker.me/blog/2020/01/08/20_0108_coderwars_Vowel_Count/</id>
    <published>2020-01-08T00:24:00.000Z</published>
    <updated>2020-02-29T10:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><a href="https://www.codewars.com/kata/54ff3102c1bad923760001f3/javascript" target="_blank" rel="external">https://www.codewars.com/kata/54ff3102c1bad923760001f3/javascript</a></p>
<p>Return the number (count) of vowels in the given string.</p>
<p>We will consider a, e, i, o, and u as vowels for this Kata.</p>
<p>The input string will only consist of lower case letters and/or spaces.</p>
<a id="more"></a>
<p>Example :</p>
<figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Test</span>.assertEquals(getCount(<span class="string">"abracadabra"</span>), <span class="number">5</span>)</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><p><a href="https://github.com/younglaker/codewars" target="_blank" rel="external">https://github.com/younglaker/codewars</a></p>
<h3 id="Approach-1"><a href="#Approach-1" class="headerlink" title="Approach 1"></a>Approach 1</h3><p>Split the sting into a array, the check each letter:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCount</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> vowelsCount = <span class="number">0</span>;</div><div class="line"></div><div class="line">  <span class="keyword">let</span> arr = str.split(<span class="string">''</span>);</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</div><div class="line">    <span class="keyword">if</span> (arr[i] === <span class="string">'a'</span> || arr[i] === <span class="string">'e'</span> || arr[i] === <span class="string">'i'</span> || arr[i] === <span class="string">'o'</span> || arr[i] === <span class="string">'u'</span>) &#123;</div><div class="line">      vowelsCount+=<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> vowelsCount;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Approach-2"><a href="#Approach-2" class="headerlink" title="Approach 2"></a>Approach 2</h3><p><code>x.match(/[sabticl]/ig</code> to select all matched letters into a array. <code>|| []</code> is order to avoid error when there is no matched letter for <code>.length</code>.</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> <span class="title">getCount</span>(str) &#123;</div><div class="line">  <span class="keyword">return</span> <span class="type">(str.match(/[aeiou]/ig)</span> || []).length</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Approach-3"><a href="#Approach-3" class="headerlink" title="Approach 3"></a>Approach 3</h3><p>Delete the letter dosen’t match, then count the length:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCount</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> str.replace(<span class="regexp">/[^aeiou]/gi</span>, <span class="string">''</span>).length;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/kata/54ff3102c1bad923760001f3/javascript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.codewars.com/kata/54ff3102c1bad923760001f3/javascript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Return the number (count) of vowels in the given string.&lt;/p&gt;
&lt;p&gt;We will consider a, e, i, o, and u as vowels for this Kata.&lt;/p&gt;
&lt;p&gt;The input string will only consist of lower case letters and/or spaces.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="CodeWars" scheme="http://laker.me/blog/tags/CodeWars/"/>
    
  </entry>
  
  <entry>
    <title>React Learning Record</title>
    <link href="http://laker.me/blog/2019/09/08/19_0908_react_learning/"/>
    <id>http://laker.me/blog/2019/09/08/19_0908_react_learning/</id>
    <published>2019-09-08T00:24:00.000Z</published>
    <updated>2020-02-29T09:47:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">npm </span>i -g <span class="built_in">create-react-app@1.5.2</span></div><div class="line"><span class="built_in">create-react-app</span> <span class="string">react-app</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>Inside that directory, you can run several commands:</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">yarn <span class="built_in">start</span></div><div class="line">  Starts <span class="keyword">the</span> development server.</div><div class="line"></div><div class="line">yarn build</div><div class="line">  Bundles <span class="keyword">the</span> app <span class="keyword">into</span> static <span class="built_in">files</span> <span class="keyword">for</span> production.</div><div class="line"></div><div class="line">yarn test</div><div class="line">  Starts <span class="keyword">the</span> test runner.</div><div class="line"></div><div class="line">yarn eject</div><div class="line">  Removes this tool <span class="keyword">and</span> copies build dependencies, configuration <span class="built_in">files</span></div><div class="line">  <span class="keyword">and</span> scripts <span class="keyword">into</span> <span class="keyword">the</span> app <span class="built_in">directory</span>. If you <span class="built_in">do</span> this, you can’t go back!</div></pre></td></tr></table></figure>
<h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">npm</span> <span class="selector-tag">i</span> <span class="selector-tag">-s</span> <span class="selector-tag">bootstrap</span>@<span class="keyword">4</span>.<span class="keyword">1</span>.<span class="keyword">1</span></div></pre></td></tr></table></figure>
<p><code>index.js</code></p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">import</span> 'bootstrap/dist/css/bootstrap.css';</span></div></pre></td></tr></table></figure>
<h2 id="export"><a href="#export" class="headerlink" title="export"></a>export</h2><p>Add <code>Component/counter.jsx</code> to <code>src</code></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Counter</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line"></div><div class="line">  render() &#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>equals:</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Counter</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line"></div><div class="line">  render() &#123; &#125;</div><div class="line">&#125;</div><div class="line">export <span class="keyword">default</span> <span class="type">Counter</span>;</div></pre></td></tr></table></figure>
<h2 id="ReactDOM-render"><a href="#ReactDOM-render" class="headerlink" title="ReactDOM.render"></a>ReactDOM.render</h2><p>In <code>index.js</code>, it render th <code>App.js</code></p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</div><div class="line"></div><div class="line">ReactDOM.render(&lt;App /&gt;, <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>));</div></pre></td></tr></table></figure>
<p>can be repalced by this to render Counter.js :</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Counter <span class="keyword">from</span> <span class="string">'./components/counter'</span>;</div><div class="line"></div><div class="line">ReactDOM.render(&lt;Counter /&gt;, <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>));</div></pre></td></tr></table></figure>
<h2 id="Use-component"><a href="#Use-component" class="headerlink" title="Use component"></a>Use component</h2><p>In <code>App.js</code>,add:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> (</div><div class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"App"</span>&gt;</span></span></div><div class="line">    ...</div><div class="line">    <span class="tag">&lt;<span class="name">Counter</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">);</div></pre></td></tr></table></figure>
<h2 id="React-Fragment"><a href="#React-Fragment" class="headerlink" title="React.Fragment"></a>React.Fragment</h2><p>If use <div>, there is a useless element</div></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090801.png" alt=""></p>
<p>If delete <div><br><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090802.png" alt=""></div></p>
<p>Use <code>&lt;React.Fragment&gt;</code> instead:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090803.png" alt=""></p>
<h2 id="State"><a href="#State" class="headerlink" title="State"></a>State</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">export <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Counter</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">  state = &#123;</div><div class="line">    count: <span class="number">0</span></div><div class="line">  &#125;;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;<span class="type">React</span>.<span class="type">Fragment</span>&gt;</div><div class="line">        &lt;span&gt;&#123;<span class="keyword">this</span>.state.count&#125;&lt;/span&gt;</div><div class="line">      &lt;/<span class="type">React</span>.<span class="type">Fragment</span>&gt;</div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Function-return-and-expression"><a href="#Function-return-and-expression" class="headerlink" title="Function return and expression"></a>Function return and expression</h2><figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">state</span> = &#123;</div><div class="line">  count: <span class="number">0</span></div><div class="line">&#125;;</div><div class="line">render() &#123;</div><div class="line">  return (</div><div class="line">    <span class="variable">&lt;React.Fragment&gt;</span></div><div class="line">      <span class="variable">&lt;div&gt;</span>&#123;this.formatCount()&#125;&lt;/div&gt;</div><div class="line">    &lt;/React.Fragment&gt;</div><div class="line">  );</div><div class="line">&#125;</div><div class="line"></div><div class="line">formatCount() &#123;</div><div class="line">  return this.<span class="keyword">state</span>.count === <span class="number">0</span> ? 'Zero' : this.<span class="keyword">state</span>.count;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Eauqls to :</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">formatCount() &#123;</div><div class="line">  const &#123; <span class="keyword">count</span> &#125; = <span class="keyword">this</span>.state;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">count</span> === <span class="number">0</span> ? <span class="string">'Zero'</span> : <span class="keyword">count</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090804.png" alt=""></p>
<p>We can also insert elements and variable:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">formatCount() &#123;</div><div class="line">  <span class="keyword">const</span> &#123; count &#125; = <span class="keyword">this</span>.state;</div><div class="line">   <span class="keyword">const</span> x = <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Zero<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">  <span class="keyword">return</span> count === <span class="number">0</span> ? x : count;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Image-src"><a href="#Image-src" class="headerlink" title="Image src"></a>Image src</h2><figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">state</span> = &#123;</div><div class="line">  imageUrl: 'https://picsum.photos/<span class="number">200</span>'</div><div class="line">&#125;;</div><div class="line">render() &#123;</div><div class="line">  return (</div><div class="line">    <span class="variable">&lt;React.Fragment&gt;</span></div><div class="line">      <span class="variable">&lt;img src=&#123;this.state.imageUrl&#125; alt="" /&gt;</span></div><div class="line">    &lt;/React.Fragment&gt;</div><div class="line">  );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090805.png" alt=""></p>
<h2 id="Use-Bootstrap-CSS"><a href="#Use-Bootstrap-CSS" class="headerlink" title="Use Bootstrap CSS"></a>Use Bootstrap CSS</h2><p>Be sure to use <code>className</code>, not <code>class</code></p>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"badge badge-primary m-2"</span>&gt;</span></span><span class="template-variable">&#123;this.formatCount()&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">"btn btn-secondary btn-sm"</span>&gt;</span>Increcement<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090806.png" alt=""></p>
<h2 id="Inline-CSS"><a href="#Inline-CSS" class="headerlink" title="Inline CSS"></a>Inline CSS</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> <span class="attr">30</span> &#125;&#125; <span class="attr">className</span>=<span class="string">"badge badge-primary m-2"</span>&gt;</span>Zero<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Or:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">aaa = &#123; <span class="attr">fontSize</span>: <span class="number">30</span> &#125;;</div><div class="line">render() &#123;</div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">React.Fragment</span>&gt;</span></span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;</span> <span class="attr">this.aaa</span> &#125; <span class="attr">className</span>=<span class="string">"badge badge-primary m-2"</span>&gt;</span>Zero<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">React.Fragment</span>&gt;</span></div><div class="line">  );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090807.png" alt=""></p>
<h2 id="Dynamic-class-name"><a href="#Dynamic-class-name" class="headerlink" title="Dynamic class name"></a>Dynamic class name</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">render() &#123;</div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    &lt;React.Fragment&gt;</div><div class="line">      &lt;div className=&#123;<span class="keyword">this</span>.getBadgeClasses()&#125;&gt;</div><div class="line">        Zero</div><div class="line">      &lt;/div&gt;</div><div class="line">  );</div><div class="line">&#125;</div><div class="line">getBadgeClasses() &#123;</div><div class="line">  let classes = <span class="string">'badge m-2 badge-'</span>;</div><div class="line">  classes += <span class="keyword">this</span>.state.count === <span class="number">0</span> ? <span class="string">'warning'</span> : <span class="string">'primary'</span>;</div><div class="line">  <span class="keyword">return</span> classes;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090808.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090809.png" alt=""></p>
<h2 id="For-loop"><a href="#For-loop" class="headerlink" title="For loop"></a>For loop</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">state</span> = &#123;</div><div class="line">  tags: [<span class="string">'tag1'</span>, <span class="string">'tag2'</span>, <span class="string">'tag3'</span>]</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">&lt;ul&gt;</span></div><div class="line">      &#123;this.<span class="keyword">state</span>.tags.map(<span class="keyword">tag</span> =&gt; (</div><div class="line">        <span class="variable">&lt;li&gt;</span>&#123;<span class="keyword">tag</span>&#125;&lt;/li&gt;</div><div class="line">      ))&#125;</div><div class="line"> &lt;/ul&gt;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090810.png" alt=""></p>
<p>Add key:</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">&lt;ul&gt;</span></div><div class="line">    &#123;this.<span class="keyword">state</span>.tags.map(<span class="keyword">tag</span> =&gt; (</div><div class="line">    <span class="variable">&lt;li key=&#123;tag&#125;&gt;</span>&#123;<span class="keyword">tag</span>&#125;&lt;/li&gt;</div><div class="line">    ))&#125;</div><div class="line">&lt;/ul&gt;</div></pre></td></tr></table></figure>
<p>or</p>
<blockquote>
<p>It there is more than one parameter, add <code>( )</code></p>
</blockquote>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">&lt;ul&gt;</span></div><div class="line">    &#123;this.<span class="keyword">state</span>.tags.map((<span class="keyword">tag</span>, index) =&gt; (</div><div class="line">    <span class="variable">&lt;li key=&#123;index&#125;&gt;</span>&#123;<span class="keyword">tag</span>&#125;&lt;/li&gt;</div><div class="line">    ))&#125;</div><div class="line">&lt;/ul&gt;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090811.png" alt=""></p>
<h2 id="Render-after-if"><a href="#Render-after-if" class="headerlink" title="Render after if"></a>Render after if</h2><blockquote>
<p>If return more one line, add <code>( )</code></p>
</blockquote>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">render() &#123;</div><div class="line">  return (</div><div class="line">    <span class="variable">&lt;React.Fragment&gt;</span></div><div class="line">      &#123;this.renderTags()&#125;</div><div class="line">    &lt;/React.Fragment&gt;</div><div class="line">  );</div><div class="line">&#125;</div><div class="line"></div><div class="line">renderTags() &#123;</div><div class="line">  if (this.<span class="keyword">state</span>.tags.length === <span class="number">0</span>)</div><div class="line">    return <span class="variable">&lt;p&gt;</span>No tasgs&lt;/p&gt;;</div><div class="line"></div><div class="line">  return (</div><div class="line">    <span class="variable">&lt;ul&gt;</span></div><div class="line">      &#123;this.<span class="keyword">state</span>.tags.map((<span class="keyword">tag</span>, index) =&gt; (</div><div class="line">        <span class="variable">&lt;li key=&#123;index&#125;&gt;</span>&#123;<span class="keyword">tag</span>&#125;&lt;/li&gt;</div><div class="line">      ))&#125;</div><div class="line">    &lt;/ul&gt;</div><div class="line">  );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Expression-amp-amp"><a href="#Expression-amp-amp" class="headerlink" title="Expression &amp;&amp;"></a>Expression <code>&amp;&amp;</code></h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">render() &#123;</div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    &lt;React.Fragment&gt;</div><div class="line">      &#123;<span class="keyword">this</span>.renderTags()&#125;</div><div class="line">      &#123;<span class="keyword">this</span>.state.tags.length !== <span class="number">0</span> &amp;&amp; <span class="string">'There are tags'</span>&#125;</div><div class="line">    &lt;/React.Fragment&gt;</div><div class="line">  );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090812.png" alt=""></p>
<h2 id="Event"><a href="#Event" class="headerlink" title="Event"></a>Event</h2><p><code>onClick</code>, not <code>onclick</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleIncrement&#125;</span>&gt;</span>Increcement<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line">handleIncrement(e) &#123;</div><div class="line">  console.log(e);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>Event need to be sent function without parameter</p>
</blockquote>
<p><strong>Right:</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleIncrement&#125;</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>Wrong:</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//this.handleIncrement ( 1 ) is not a functon</span></div><div class="line">&lt;<span class="selector-tag">button</span> onClick=&#123;this<span class="selector-class">.handleIncrement</span> ( <span class="number">1</span> ) &#125;&gt;</div></pre></td></tr></table></figure>
<p><strong>Right:</strong></p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;button onClick=&#123;<span class="keyword">this</span>.doHandleIncrecement &#125;&gt;</div><div class="line"><span class="function"></span></div><div class="line">  <span class="title">doHandleIncrecement</span>=<span class="params">()</span>=&gt;&#123;</div><div class="line">    <span class="keyword">this</span>.handleIncrement(&#123;id: <span class="number">1</span>&#125;)</div><div class="line"></div><div class="line">  &#125;</div><div class="line"><span class="function">  <span class="title">handleIncrement</span> = <span class="params">(item)</span> =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(item.id);</div><div class="line">  &#125;;</div></pre></td></tr></table></figure>
<p><strong>Right ( recommend ) :</strong></p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;button onClick=&#123;<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.handleIncrement(&#123; id: <span class="number">1</span> &#125;)&#125;&gt;</div><div class="line"></div><div class="line">handleIncrement = <span class="function"><span class="params">item</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(item.id);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="this-constructor"><a href="#this-constructor" class="headerlink" title="this, constructor()"></a>this, constructor()</h2><p>We can’t call <code>this</code> in function:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">handleIncrement() &#123;</div><div class="line">  console.<span class="built_in">log</span>(<span class="keyword">this</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090813.png" alt=""></p>
<p>Use <code>constructor()</code> to bind this,</p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">constructor</span><span class="params">()</span> <span class="comment">&#123;</span></span></div><div class="line">  super();</div><div class="line">  console.log(this);</div><div class="line">  this.handleIncrement = this.handleIncrement.bind(this);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="title">handleIncrement</span><span class="params">(e)</span> <span class="comment">&#123;</span></div><div class="line">  console.log(this);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Or use <code>Arrow Function</code></p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">handleIncrement</span> = <span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090814.png" alt=""></p>
<h2 id="Updating-state"><a href="#Updating-state" class="headerlink" title="Updating state"></a>Updating state</h2><p><strong>State</strong>: starts with a default value when a Component mounts and then suffers from mutations in time. It is not advisable to store anything in a state that can be derived from props at any point in time</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">handleIncrement = () =&gt; &#123;</div><div class="line">  this.<span class="built_in">set</span>State(&#123; count: this.<span class="keyword">state</span>.count + <span class="number">1</span> &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<blockquote>
<p><code>this.state.count++</code> dosen’t work</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090815.png" alt=""></p>
<h2 id="Passing-data-to-components"><a href="#Passing-data-to-components" class="headerlink" title="Passing data to components"></a>Passing data to components</h2><p><strong>Props</strong>: (short for properties) are a Component’s configuration. They are received from above and immutable.</p>
<p><code>src/components/counters.jsx</code></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> <span class="type">Counter</span> from './counter';</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Counters</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">  state = &#123;</div><div class="line">    counInfo: [&#123; id: <span class="number">1</span>, <span class="keyword">val</span>: <span class="number">0</span> &#125;, &#123; id: <span class="number">2</span>, <span class="keyword">val</span>: <span class="number">5</span> &#125;, &#123; id: <span class="number">3</span>, <span class="keyword">val</span>: <span class="number">2</span> &#125;]</div><div class="line">  &#125;;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;div&gt;</div><div class="line">        &#123;<span class="keyword">this</span>.state.counInfo.map((item, index) =&gt; (</div><div class="line">          &lt;<span class="type">Counter</span> key=&#123;index&#125; id=&#123;item.id&#125; value=&#123;item.<span class="keyword">val</span>&#125; /&gt;</div><div class="line">        ))&#125;</div><div class="line">      &lt;/div&gt;</div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">export <span class="keyword">default</span> <span class="type">Counters</span>;</div></pre></td></tr></table></figure>
<p><code>src/components/counter.jsx</code></p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">render() &#123;</div><div class="line">  console.log(<span class="string">'props'</span>, <span class="keyword">this</span>.props);</div><div class="line">  <span class="keyword">return</span> ();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090817.png" alt=""></p>
<p>Use props data in <code>src/components/counter.jsx</code>:<br>Put <code>state</code> in <code>constructor()</code>:</p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// passing in props</span></div><div class="line"><span class="function"><span class="keyword">constructor</span><span class="params">(props)</span> <span class="comment">&#123;</span></span></div><div class="line">  super();</div><div class="line"></div><div class="line">  // in constructor(), state need this，props dosen't need this</div><div class="line">  this.state = &#123;</div><div class="line">    count: props.value,</div><div class="line">    tags: ['tag1', 'tag2', 'tag3']</div><div class="line">  &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090817.png" alt=""></p>
<h2 id="Passing-children"><a href="#Passing-children" class="headerlink" title="Passing children"></a>Passing children</h2><p><code>src/components/counters.jsx</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="keyword">this</span>.state.counInfo.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span> (</div><div class="line">  <span class="xml"><span class="tag">&lt;<span class="name">Counter</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span> <span class="attr">id</span>=<span class="string">&#123;item.id&#125;</span> <span class="attr">value</span>=<span class="string">&#123;item.val&#125;</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>title<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Counter</span>&gt;</span></div><div class="line">))&#125;</div></pre></td></tr></table></figure>
<p><code>src/components/counter.jsx</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">render() &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'props'</span>, <span class="keyword">this</span>.props);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">      ...</div><div class="line">      &#123;this.props.children&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090818.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090819.png" alt=""></p>
<h2 id="React-Developer-Tools"><a href="#React-Developer-Tools" class="headerlink" title="React Developer Tools"></a>React Developer Tools</h2><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090820.png" alt=""></p>
<p>Refresh after installation, you can change the order:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090829.png" alt=""></p>
<h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090821.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090822.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090823.png" alt=""></p>
<h2 id="Props-VS-State"><a href="#Props-VS-State" class="headerlink" title="Props VS  State"></a>Props VS  State</h2><ul>
<li>props: passing data, can’t be modified</li>
</ul>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090824.png" alt=""></p>
<ul>
<li>state: local, can’t be visited by other components</li>
</ul>
<h2 id="Passing-function"><a href="#Passing-function" class="headerlink" title="Passing function"></a>Passing function</h2><p><code>src/components/counters.jsx</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">render() &#123;</div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">      ..</div><div class="line">        <span class="tag">&lt;<span class="name">Counter</span></span></div><div class="line">          <span class="attr">...</span></div><div class="line">          <span class="attr">onDelete</span>=<span class="string">&#123;this.handleDelete&#125;</span></div><div class="line">        &gt;<span class="tag">&lt;/<span class="name">Counter</span>&gt;</span></div><div class="line">      ..</div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  );</div><div class="line">&#125;</div><div class="line"></div><div class="line">handleDelete = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'Handle delete '</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><code>src/components/counter.jsx</code></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">button</span> onClick=&#123;this<span class="selector-class">.props</span><span class="selector-class">.onDelete</span>&#125;&gt;Delete&lt;/button&gt;</div></pre></td></tr></table></figure>
<h2 id="filter-（Delete-function）"><a href="#filter-（Delete-function）" class="headerlink" title="filter （Delete function）"></a>filter （Delete function）</h2><p><code>src/components/counter.jsx</code></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="comment">/*  delete btn */</span>&#125;</div><div class="line">&lt;<span class="selector-tag">button</span></div><div class="line">  onClick=&#123;() =&gt; this<span class="selector-class">.props</span><span class="selector-class">.onDelete</span>(this<span class="selector-class">.props</span><span class="selector-class">.id</span>)&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p><code>src/components/counters.jsx</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;Counter</div><div class="line">  ...</div><div class="line">  onDelete=&#123;<span class="keyword">this</span>.handleDelete&#125;</div><div class="line">  id=&#123;item.id&#125;</div><div class="line">&gt;</div><div class="line"></div><div class="line">handleDelete = <span class="function"><span class="params">countId</span> =&gt;</span> &#123;</div><div class="line">  <span class="keyword">const</span> counInfo = <span class="keyword">this</span>.state.counInfo.filter(<span class="function"><span class="params">c</span> =&gt;</span> c.id !== countId);</div><div class="line"></div><div class="line">  <span class="comment">// this.setState(&#123; counInfo: countInfo &#125;);</span></div><div class="line">  <span class="comment">// we can omit the variable when the state parameter name is the same as the variable name</span></div><div class="line">  <span class="keyword">this</span>.setState(&#123; counInfo &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Removing-local-state"><a href="#Removing-local-state" class="headerlink" title="Removing local state"></a>Removing local state</h2><p>The state init only once when the component created, so it can’t update when the props changes</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">this.<span class="keyword">state</span> = &#123;</div><div class="line">  count: props.value</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>So, if want use the updating props data, deal the props in original component:</p>
<p><code>src/components/counter.jsx</code>, use props instead of state :</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="comment">/* 增加按钮 */</span>&#125;</div><div class="line">&lt;button</div><div class="line">  onClick=&#123;() =&gt; <span class="keyword">this</span>.props.onIncrece(<span class="keyword">this</span>.props.item)&#125;</div><div class="line">&gt;</div><div class="line">getBadgeClasses() &#123;</div><div class="line">  let classes = <span class="string">'badge m-2 badge-'</span>;</div><div class="line">  classes += <span class="keyword">this</span>.props.item.<span class="keyword">val</span> === <span class="number">0</span> ? <span class="string">'warning'</span> : <span class="string">'primary'</span>;</div><div class="line">  <span class="keyword">return</span> classes;</div><div class="line">&#125;</div><div class="line"></div><div class="line">formatCount() &#123;</div><div class="line">  const count = <span class="keyword">this</span>.props.item.<span class="keyword">val</span>;</div><div class="line">  <span class="keyword">return</span> count == <span class="number">0</span> ? <span class="string">'Zero'</span> : count;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>src/components/counters.jsx</code>, do increment in counters.jsx</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="variable">&lt;Counter</span></div><div class="line">  ...</div><div class="line">  onIncrece=&#123;this.handleIncrement&#125;</div><div class="line">&gt;</div><div class="line"></div><div class="line">handleIncrement = item =&gt; &#123;</div><div class="line">  // 拷贝<span class="keyword">state</span>的<span class="keyword">counters</span></div><div class="line">  const countInfo = [...this.<span class="keyword">state</span>.countInfo];</div><div class="line">  const index = countInfo.indexOf(item);</div><div class="line">  countInfo[index] = &#123; ...item &#125;;</div><div class="line">  countInfo[index].val++;</div><div class="line"></div><div class="line">  this.<span class="built_in">set</span>State(&#123; countInfo &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<blockquote>
<p>展开语法(Spread syntax),扩展运算符是三个点（…）。用于取出参数对象的所有可遍历属性，然后拷贝到当前对象之中<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_syntax" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_syntax</a> &gt; <a href="https://www.cnblogs.com/it-Ren/p/10637904.html" target="_blank" rel="external">https://www.cnblogs.com/it-Ren/p/10637904.html</a> &gt; <img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090825.png" alt=""></p>
</blockquote>
<h2 id="Life-cycle"><a href="#Life-cycle" class="headerlink" title="Life cycle"></a>Life cycle</h2><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090826.png" alt=""></p>
<p>order: constructor &gt; render &gt; componentDidMount</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090827.png" alt=""></p>
<ul>
<li>componentDidMount: After render, often initial ajax</li>
<li>componentDidUpdate: after component updated, such as state, new props,often write ajax to get new data</li>
<li>componentWillMount: before component removed, such as delete a component</li>
</ul>
<p>Can check <code>prevProps</code> , <code>prevState</code> in <code>componentDidUpdate</code>:</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="selector-tag">componentDidUpdate</span>(prevProps, prevState) &#123;</div><div class="line">  <span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="string">'prevProps'</span>, prevProps);</div><div class="line">  <span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="string">'prevState'</span>, prevState);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090829.png" alt=""></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Start&quot;&gt;&lt;a href=&quot;#Start&quot; class=&quot;headerlink&quot; title=&quot;Start&quot;&gt;&lt;/a&gt;Start&lt;/h2&gt;&lt;figure class=&quot;highlight dsconfig&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;npm &lt;/span&gt;i -g &lt;span class=&quot;built_in&quot;&gt;create-react-app@1.5.2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;create-react-app&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;react-app&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="React" scheme="http://laker.me/blog/categories/React/"/>
    
    
      <category term="React" scheme="http://laker.me/blog/tags/React/"/>
    
      <category term="React Native" scheme="http://laker.me/blog/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>React native 加 android安卓模拟器</title>
    <link href="http://laker.me/blog/2019/09/03/19_0903_react_android/"/>
    <id>http://laker.me/blog/2019/09/03/19_0903_react_android/</id>
    <published>2019-09-03T00:24:00.000Z</published>
    <updated>2020-02-29T09:47:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://expo.io/learn" target="_blank" rel="external">https://expo.io/learn</a></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> -g expo-cli</div><div class="line">expo init my-<span class="keyword">new</span>-<span class="keyword">project</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>下载网易 mumu 安卓模拟器<br><a href="https://mumu.163.com/" target="_blank" rel="external">https://mumu.163.com/</a></p>
<p><a href="http://mumu.163.com/2017/12/19/25241_730476.html?type=notice" target="_blank" rel="external">http://mumu.163.com/2017/12/19/25241_730476.html?type=notice</a><br>添加 adb，执行</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> adb <span class="built_in">kill</span>-server &amp;&amp; adb server &amp;&amp; adb shell</span></div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090301.png" alt=""></p>
<p>查看</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> adb devices</span></div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090302.png" alt=""></p>
<p>开启模拟器 USB 调试模式</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090303.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090304.png" alt=""></p>
<p>开启项目</p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> my-new-project</div><div class="line">expo <span class="built_in">start</span></div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090305.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090306.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19090307.png" alt=""></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://expo.io/learn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://expo.io/learn&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -g expo-cli&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;expo init my-&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;project&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="React" scheme="http://laker.me/blog/categories/React/"/>
    
    
      <category term="React" scheme="http://laker.me/blog/tags/React/"/>
    
      <category term="React Native" scheme="http://laker.me/blog/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>React native web browser</title>
    <link href="http://laker.me/blog/2019/08/30/19_0830_react_native_web_browser/"/>
    <id>http://laker.me/blog/2019/08/30/19_0830_react_native_web_browser/</id>
    <published>2019-08-30T00:24:00.000Z</published>
    <updated>2020-02-29T09:47:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Method-1-react-native-web"><a href="#Method-1-react-native-web" class="headerlink" title="Method 1: react-native-web"></a>Method 1: react-native-web</h2><p><a href="https://github.com/necolas/react-native-web" target="_blank" rel="external">https://github.com/necolas/react-native-web</a></p>
<p>Android emulator lists:</p>
<a id="more"></a>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">emulator -<span class="built_in">list</span>-avds</div></pre></td></tr></table></figure>
<p>Run emulator</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">emulator -avd <span class="string">[name]</span></div></pre></td></tr></table></figure>
<p>Installation:</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install react-web-<span class="keyword">cli</span> -g</div></pre></td></tr></table></figure>
<hr>
<h2 id="Method-2-expo-recommanded"><a href="#Method-2-expo-recommanded" class="headerlink" title="Method 2: expo (recommanded)"></a>Method 2: expo (recommanded)</h2><p><a href="https://docs.expo.io/versions/latest/introduction/running-in-the-browser/" target="_blank" rel="external">https://docs.expo.io/versions/latest/introduction/running-in-the-browser/</a></p>
<p>Ensure your project has at least expo@^33.0.0 installed.</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ npm i -g expo-cli</div><div class="line"></div><div class="line">//<span class="keyword">Add</span><span class="bash"> web dependencies:</span></div><div class="line">$ yarn <span class="keyword">add</span><span class="bash"> react-native-web react-dom</span></div><div class="line"></div><div class="line">$ expo start --web</div></pre></td></tr></table></figure>
<p>Running the expo and copy the homepage url:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19093001.png" alt="expo"></p>
<p>Or find the url in terminal:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19093003.png" alt="terminal"></p>
<p>Visit the url :</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2019/19093002.png" alt="Visit"></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Method-1-react-native-web&quot;&gt;&lt;a href=&quot;#Method-1-react-native-web&quot; class=&quot;headerlink&quot; title=&quot;Method 1: react-native-web&quot;&gt;&lt;/a&gt;Method 1: react-native-web&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/necolas/react-native-web&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/necolas/react-native-web&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Android emulator lists:&lt;/p&gt;
    
    </summary>
    
      <category term="React" scheme="http://laker.me/blog/categories/React/"/>
    
    
      <category term="React" scheme="http://laker.me/blog/tags/React/"/>
    
      <category term="React Native" scheme="http://laker.me/blog/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>Angular Ionic News App Tutorial for Beginner</title>
    <link href="http://laker.me/blog/2019/08/22/19_0822_ionic_news/"/>
    <id>http://laker.me/blog/2019/08/22/19_0822_ionic_news/</id>
    <published>2019-08-22T00:24:00.000Z</published>
    <updated>2020-02-29T09:47:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>Github repo: <a href="https://github.com/younglaker/CometLab/tree/ionic-news" target="_blank" rel="external">https://github.com/younglaker/CometLab/tree/ionic-news</a></p>
<h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><p>Start serve</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ionic serve</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="tabs"><a href="#tabs" class="headerlink" title="tabs"></a>tabs</h2><p>generate command：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ionic g [<span class="string">type:</span> page<span class="regexp">/component/</span>tabs<span class="regexp">/provider/</span>service/provider]  [names]</div></pre></td></tr></table></figure>
<p>generate page：</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ionic g page  <span class="string">[names]</span></div></pre></td></tr></table></figure>
<p>For example, after generating a <code>news</code> page, in <code>src/app/tabs/tabs.module.ts</code>, add:</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; NewsPageModule &#125; <span class="keyword">from</span> <span class="string">'../news/news.module'</span>;</div><div class="line"><span class="comment">// [page name] +PageModule</span></div><div class="line"></div><div class="line">@NgModule(&#123;</div><div class="line">  imports: [</div><div class="line">    ...</div><div class="line">    NewsPageModule</div><div class="line">  ],</div></pre></td></tr></table></figure>
<p>In <code>src/app/tabs/tabs.page.html</code>, add:</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;ion-<span class="keyword">tab</span>-button <span class="keyword">tab</span>=<span class="string">"news"</span>&gt;</div><div class="line">  &lt;ion-icon name=<span class="string">"flash"</span>&gt;&lt;/ion-icon&gt;</div><div class="line">  &lt;ion-<span class="keyword">label</span>&gt;<span class="keyword">Tab</span> <span class="keyword">One</span>&lt;/ion-<span class="keyword">label</span>&gt;</div><div class="line">&lt;/ion-<span class="keyword">tab</span>-button&gt;</div></pre></td></tr></table></figure>
<p>In <code>src/app/tabs/tabs.router.module.ts</code>, add:</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">const routes: Routes = [</div><div class="line">  &#123;</div><div class="line">    ...</div><div class="line"><span class="symbol">    children:</span> [</div><div class="line">      &#123;</div><div class="line"><span class="symbol">        path:</span> <span class="string">"news"</span>,</div><div class="line"><span class="symbol">        children:</span> [</div><div class="line">          &#123;</div><div class="line"><span class="symbol">            path:</span> <span class="string">""</span>,</div><div class="line"><span class="symbol">            loadChildren:</span> <span class="string">"../news/news.module#NewsPageModule"</span></div><div class="line">          &#125;</div><div class="line">        ]</div><div class="line">      &#125;</div></pre></td></tr></table></figure>
<h2 id="Get-news-list"><a href="#Get-news-list" class="headerlink" title="Get news list"></a>Get news list</h2><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p><a href="https://newsapi.org/" target="_blank" rel="external">https://newsapi.org/</a></p>
<p><code>https://newsapi.org/v2/top-headlines?country=us&amp;category=business&amp;apiKey=</code></p>
<p>Set environment arguments. In <code>src/environments/environment.ts</code>:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> environment = &#123;</div><div class="line">  ...</div><div class="line">  apiUrl: <span class="string">"https://newsapi.org/v2/"</span>,</div><div class="line">  apiKey: <span class="string">"c***********"</span></div></pre></td></tr></table></figure>
<p>Create service:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> ionic g service news</span></div></pre></td></tr></table></figure>
<p>In <code>/src/app/app.module.ts</code></p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; HttpClientModule &#125; <span class="keyword">from</span> <span class="string">'@angular/common/http'</span>;</div><div class="line"></div><div class="line">@NgModule(&#123;</div><div class="line">  ...</div><div class="line">  imports: [</div><div class="line">    ...</div><div class="line">    HttpClientModule</div></pre></td></tr></table></figure>
<p>In <code>src/app/news.service.ts</code></p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; HttpClient &#125; <span class="keyword">from</span> <span class="string">'@angular/common/http'</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> API_URL = environment.apiUrl;</div><div class="line"><span class="keyword">const</span> API_KET = environment.apiKey;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">class</span> NewsService &#123;</div><div class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> http: HttpClient</span>) &#123;&#125;</div><div class="line"></div><div class="line">  getData(url) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.http.get(<span class="string">`<span class="subst">$&#123;API_URL&#125;</span>/<span class="subst">$&#123;url&#125;</span>?apiKey=?&#123; API_KEY &#125;`</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>In <code>src/app/news/news.page.ts</code></p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; NewsService &#125; <span class="keyword">from</span> <span class="string">'../news.service'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">class</span> NewsPage <span class="keyword">implements</span> OnInit &#123;</div><div class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> newsService: NewsService</span>) &#123;&#125;</div><div class="line"></div><div class="line">  ngOnInit() &#123;</div><div class="line">     <span class="comment">// NewsService from news.service.ts</span></div><div class="line">    <span class="keyword">this</span>.newsService</div><div class="line">      .getData(<span class="string">'top-headlines?country=us&amp;category=business'</span>)</div><div class="line">      .subscribe(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(data);</div><div class="line">      &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://github.com/aomine-sama/px/blob/master/2019/19082201.png?raw=true" alt="data"></p>
<h3 id="Display-news"><a href="#Display-news" class="headerlink" title="Display news"></a>Display news</h3><p>In <code>src/app/news/news.page.ts</code> add</p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> &#123; NewsService &#125; <span class="keyword">from</span> <span class="string">'../news.service'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">class</span> NewsPage <span class="keyword">implements</span> OnInit &#123;</div><div class="line">  <span class="comment">// res: store the data from API, type is any</span></div><div class="line">  res: <span class="built_in">any</span>;</div><div class="line"></div><div class="line">  ngOnInit() &#123;</div><div class="line">    <span class="keyword">this</span>.newsService</div><div class="line">      .getData(<span class="string">'top-headlines?country=us&amp;category=business'</span>)</div><div class="line">      .subscribe(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</div><div class="line">        <span class="comment">// console.log(data);</span></div><div class="line">        <span class="keyword">this</span>.res = data;</div><div class="line">      &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>In <code>src/app/news/news.page.html</code></p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="comment">&lt;!-- Here is a '?',  rendering after getting data--&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">ion-card</span> *<span class="attr">ngFor</span>=<span class="string">"let article of res?.articles"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ion-card-header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ion-card-subtitle</span>&gt;</span>Card Subtitle<span class="tag">&lt;/<span class="name">ion-card-subtitle</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ion-card-title</span>&gt;</span> <span class="template-variable">&#123;&#123; article.title &#125;&#125;</span><span class="xml"> <span class="tag">&lt;/<span class="name">ion-card-title</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">ion-card-header</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ion-img</span> [<span class="attr">src</span>]=<span class="string">"article.urlToImage"</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-img</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ion-card-content</span>&gt;</span><span class="template-variable">&#123;&#123; article.description &#125;&#125;</span><span class="xml"> <span class="tag">&lt;/<span class="name">ion-card-content</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">ion-card</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="https://github.com/aomine-sama/px/blob/master/2019/19082202.png?raw=true" alt="news lists"></p>
<h2 id="Link-to-details"><a href="#Link-to-details" class="headerlink" title="Link to details"></a>Link to details</h2><p><code>src/app/news/news.page.html</code>, bind click event</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;ion-card</div><div class="line">    *ngFor=<span class="string">"let article of res?.articles"</span></div><div class="line">    (<span class="name">click</span>)=<span class="string">"goToNewsSingle(article)"</span></div><div class="line">  &gt;</div></pre></td></tr></table></figure>
<p><code>src/app/app-routing.module.ts</code>, it generate routes path when generate the news-single page, we can use it directly:</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">const routes: <span class="type">Routes </span>= [</div><div class="line">  ...</div><div class="line">  &#123; path: <span class="type"></span>'<span class="keyword">new</span><span class="type">s</span>-single<span class="string">', loadChildren: '</span>./<span class="keyword">new</span><span class="type">s</span>-single/<span class="keyword">new</span><span class="type">s</span>-single.module<span class="meta">#NewsSinglePageModule' &#125;</span></div><div class="line">];</div></pre></td></tr></table></figure>
<p><code>src/app/news/news.page.ts</code>, define goToNewsSingle() event</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">export <span class="class"><span class="keyword">class</span> <span class="title">NewsPage</span> <span class="keyword"><span class="keyword">implements</span> <span class="type">OnInit</span></span> </span>&#123;</div><div class="line">  ...</div><div class="line">  constructor(..., <span class="keyword">private</span> router: <span class="type">Router</span>) &#123;&#125;</div><div class="line"></div><div class="line">  goToNewsSingle(article) &#123;</div><div class="line">    <span class="built_in">this</span>.<span class="keyword">new</span><span class="type">sService</span>.currentArticle = article;</div><div class="line">    <span class="built_in">this</span>.router.navigate([<span class="string">'/news-single'</span>]);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p><code>src/app/news-single/news-single.page.ts</code></p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">..</div><div class="line"><span class="keyword">import</span> &#123; NewsService &#125; from <span class="string">'../news.service'</span>;</div><div class="line"></div><div class="line">export <span class="class"><span class="keyword">class</span> <span class="title">NewsSinglePage</span> <span class="keyword"><span class="keyword">implements</span> <span class="type">OnInit</span></span> </span>&#123;</div><div class="line">  article; <span class="comment">//store the content of current article</span></div><div class="line"></div><div class="line">  constructor(<span class="keyword">private</span> <span class="keyword">new</span><span class="type">sService</span>: NewsService) &#123;&#125;</div><div class="line"></div><div class="line">  ngOnInit() &#123;</div><div class="line">    <span class="built_in">this</span>.article = <span class="built_in">this</span>.<span class="keyword">new</span><span class="type">sService</span>.currentArticle;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>src/app/news-single/news-single.page.html</code> display the content of current article:</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">ion-card</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">ion-card-header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ion-card-subtitle</span>&gt;</span>Card Subtitle<span class="tag">&lt;/<span class="name">ion-card-subtitle</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ion-card-title</span>&gt;</span> <span class="template-variable">&#123;&#123; article.title &#125;&#125;</span><span class="xml"> <span class="tag">&lt;/<span class="name">ion-card-title</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">ion-card-header</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ion-img</span> [<span class="attr">src</span>]=<span class="string">"article.urlToImage"</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-img</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ion-card-content</span>&gt;</span><span class="template-variable">&#123;&#123; article.description &#125;&#125;</span><span class="xml"> <span class="tag">&lt;/<span class="name">ion-card-content</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">ion-card</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="https://github.com/aomine-sama/px/blob/master/2019/19082203.png?raw=true" alt="news detail"></p>
<h2 id="Back-button"><a href="#Back-button" class="headerlink" title="Back button"></a>Back button</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ion-buttons</span> <span class="attr">slot</span>=<span class="string">"start"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">ion-back-button</span> <span class="attr">text</span>=<span class="string">"...."</span> <span class="attr">icon</span>=<span class="string">"...."</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ion-buttons</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github repo: &lt;a href=&quot;https://github.com/younglaker/CometLab/tree/ionic-news&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/younglaker/CometLab/tree/ionic-news&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Command&quot;&gt;&lt;a href=&quot;#Command&quot; class=&quot;headerlink&quot; title=&quot;Command&quot;&gt;&lt;/a&gt;Command&lt;/h2&gt;&lt;p&gt;Start serve&lt;/p&gt;
&lt;figure class=&quot;highlight ebnf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;ionic serve&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Angular" scheme="http://laker.me/blog/categories/Angular/"/>
    
    
      <category term="Angular" scheme="http://laker.me/blog/tags/Angular/"/>
    
      <category term="Ionic" scheme="http://laker.me/blog/tags/Ionic/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 66 Plus One (Python)</title>
    <link href="http://laker.me/blog/2019/06/20/19_0620_leetcode66/"/>
    <id>http://laker.me/blog/2019/06/20/19_0620_leetcode66/</id>
    <published>2019-06-20T00:24:00.000Z</published>
    <updated>2019-06-20T13:49:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><a href="https://leetcode.com/problems/count-and-say/" target="_blank" rel="external">https://leetcode.com/problems/count-and-say/</a></p>
<p>Given a non-empty array of digits representing a non-negative integer, plus one to the integer.</p>
<p>The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.</p>
<p>You may assume the integer does not contain any leading zero, except the number 0 itself.</p>
<a id="more"></a>
<p>Example 1:</p>
<pre><code>Input: [1,2,3]
Output: [1,2,4]
</code></pre><p>Explanation: The array represents the integer 123.</p>
<p>Example 2:</p>
<pre><code>Input: [4,3,2,1]
Output: [4,3,2,2]
</code></pre><p>Explanation: The array represents the integer 4321.</p>
<h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1:"></a>Solution 1:</h2><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">def plusOne(<span class="built_in">digits</span>):</div><div class="line">    carry = <span class="number">1</span></div><div class="line">    # <span class="built_in">range</span>(start, <span class="keyword">stop</span>, step)</div><div class="line">    for i <span class="keyword">in</span> <span class="built_in">range</span>(len(<span class="built_in">digits</span>) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</div><div class="line"></div><div class="line">        carry = <span class="built_in">int</span>( <span class="built_in">digits</span>[i] + carry / <span class="number">10</span> )</div><div class="line">        <span class="built_in">digits</span>[i] = <span class="built_in">int</span>( <span class="built_in">digits</span>[i] + carry % <span class="number">10</span> )</div><div class="line">        <span class="keyword">if</span> carry == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="built_in">digits</span></div><div class="line"></div><div class="line">    result = []</div><div class="line">    result.append(<span class="number">1</span>)</div><div class="line">    for i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, len(<span class="built_in">digits</span>)+<span class="number">1</span> ):</div><div class="line">        result.append(<span class="built_in">digits</span>[i-<span class="number">1</span>])</div><div class="line"></div><div class="line">    <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<p>In python, there are some functions to shorten the code.</p>
<ul>
<li>divmod()</li>
</ul>
<p>Change:<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">carry = <span class="built_in">int</span>( <span class="built_in">digits</span>[i] + carry / <span class="number">10</span> )</div><div class="line"><span class="built_in">digits</span>[i] = <span class="built_in">int</span>( <span class="built_in">digits</span>[i] + carry % <span class="number">10</span> )</div></pre></td></tr></table></figure></p>
<p>to:<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">carry, digits<span class="string">[i]</span> = divmod(digits<span class="string">[i]</span> + carry, <span class="number">10</span>)</div></pre></td></tr></table></figure></p>
<p>divmod(): takes two numbers and returns a pair of numbers consisting of their quotient and remainder, (x / y , x % y)</p>
<ul>
<li>join list</li>
</ul>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">result</span> = []</div><div class="line"><span class="built_in">result</span>.append(<span class="number">1</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="built_in">len</span>(digits)+<span class="number">1</span> ):</div><div class="line">    <span class="built_in">result</span>.append(digits[i<span class="number">-1</span>])</div><div class="line"></div><div class="line"><span class="literal">return</span> <span class="built_in">result</span></div></pre></td></tr></table></figure>
<p>to：</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># <span class="keyword">or</span>: <span class="keyword">digits</span>.insert(<span class="number">0</span>,<span class="number">1</span>)</div><div class="line"><span class="keyword">return</span> [<span class="number">1</span>] + <span class="keyword">digits</span></div></pre></td></tr></table></figure>
<h2 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2:"></a>Solution 2:</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">def plusOne2(<span class="keyword">digits</span>):</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(len(<span class="keyword">digits</span>)-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</div><div class="line">        # <span class="keyword">if</span> the sum <span class="keyword">is</span> less than <span class="number">10</span>,than there <span class="keyword">is</span> <span class="keyword">not</span> carry</div><div class="line">        <span class="keyword">if</span> <span class="keyword">digits</span>[i] &lt; <span class="number">9</span>:</div><div class="line">            <span class="keyword">digits</span>[i] += <span class="number">1</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">digits</span></div><div class="line">        # max: <span class="number">1</span>+<span class="number">9</span>=<span class="number">10</span>, only <span class="number">0</span></div><div class="line">        <span class="keyword">digits</span>[i] = <span class="number">0</span></div><div class="line">    <span class="keyword">return</span> [<span class="number">1</span>] + <span class="keyword">digits</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/count-and-say/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://leetcode.com/problems/count-and-say/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a non-empty array of digits representing a non-negative integer, plus one to the integer.&lt;/p&gt;
&lt;p&gt;The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.&lt;/p&gt;
&lt;p&gt;You may assume the integer does not contain any leading zero, except the number 0 itself.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="Python" scheme="http://laker.me/blog/tags/Python/"/>
    
      <category term="LeetCode" scheme="http://laker.me/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew updating problem</title>
    <link href="http://laker.me/blog/2019/05/03/19_0503_homebrew_problem/"/>
    <id>http://laker.me/blog/2019/05/03/19_0503_homebrew_problem/</id>
    <published>2019-05-03T00:24:00.000Z</published>
    <updated>2019-05-29T07:06:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>There are two common problem when updating brew.</p>
<a id="more"></a>
<h2 id="Permission-denied"><a href="#Permission-denied" class="headerlink" title="Permission denied"></a>Permission denied</h2><blockquote>
<p>brew update Homebrew/.git/FETCH_HEAD: Permission denied</p>
</blockquote>
<p>When you run <code>brew doctor</code>, you can find there some permission problem with the <code>/usr/local/</code> files.</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19050301.jpg" alt="image"></p>
<p>You should change the permission, run this:</p>
<pre><code>sudo chown -R YOURNAME:admin /usr/local
</code></pre><h2 id="Could-not-read-Username"><a href="#Could-not-read-Username" class="headerlink" title="Could not read Username"></a>Could not read Username</h2><blockquote>
<p>brew update fatal: could not read Username for ‘<a href="https://github.com" target="_blank" rel="external">https://github.com</a>‘: terminal prompts disabled</p>
</blockquote>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># laker @ Laker <span class="keyword">in</span> ~ [<span class="number">11</span>:<span class="number">03</span>:<span class="number">59</span>] C:<span class="number">1</span></div><div class="line">$ brew update</div><div class="line">git: <span class="string">'credential-osxkeychain'</span> <span class="keyword">is</span> <span class="keyword">not</span> a git command. See <span class="string">'git --help'</span>.git: <span class="string">'credential-osxkeychain'</span> <span class="keyword">is</span> <span class="keyword">not</span> a git command. See <span class="string">'git --help'</span>.</div><div class="line"></div><div class="line">fatal: could <span class="keyword">not</span> <span class="keyword">read</span> Username <span class="keyword">for</span> <span class="string">'https://github.com'</span>: terminal prompts disabled</div><div class="line">fatal: could <span class="keyword">not</span> <span class="keyword">read</span> Username <span class="keyword">for</span> <span class="string">'https://github.com'</span>: terminal prompts disabled</div><div class="line">Error: homebrew/homebrew-x11 does <span class="keyword">not</span> exist! Run <span class="string">'brew untap homebrew/homebrew-x11'</span></div><div class="line">homebrew/homebrew-dupes does <span class="keyword">not</span> exist! Run <span class="string">'brew untap homebrew/homebrew-dupes'</span></div></pre></td></tr></table></figure>
<p>Run the command it recommend:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> laker @ Laker <span class="keyword">in</span> ~ [11:05:57] C:1</span></div><div class="line"><span class="meta">$</span><span class="bash"> brew untap homebrew/homebrew-x11</span></div><div class="line">Untapping homebrew/x11...</div><div class="line">Untapped (242 files, 224.9KB).</div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> laker @ Laker <span class="keyword">in</span> ~ [11:06:39]</span></div><div class="line"><span class="meta">$</span><span class="bash"> brew untap homebrew/homebrew-dupes</span></div><div class="line">Untapping homebrew/dupes...</div><div class="line">Untapped 36 formulae (277 files, 263.5KB).</div></pre></td></tr></table></figure>
<p>Then we can update sucessfully:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> laker @ Laker <span class="keyword">in</span> ~ [11:06:44]</span></div><div class="line"><span class="meta">$</span><span class="bash"> brew update</span></div><div class="line">Already up-to-date.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;There are two common problem when updating brew.&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://laker.me/blog/categories/Mac/"/>
    
    
      <category term="Java" scheme="http://laker.me/blog/tags/Java/"/>
    
      <category term="MacOS" scheme="http://laker.me/blog/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>Java On MacOS</title>
    <link href="http://laker.me/blog/2019/04/11/19_0411_java%20_on_mac/"/>
    <id>http://laker.me/blog/2019/04/11/19_0411_java _on_mac/</id>
    <published>2019-04-11T00:24:00.000Z</published>
    <updated>2019-04-11T04:13:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><ul>
<li>JDK: Java development toolkit, the library of Java, using to complie and run Java programs</li>
<li>J2EE: Java 2 enterprise edition, for enterprise</li>
<li>J2SE: Java 2 standard edition, standar version</li>
<li>J2ME: Java 2 Micro Edition, usually for mobile developement</li>
</ul>
<a id="more"></a>
<h2 id="Install-JDK"><a href="#Install-JDK" class="headerlink" title="Install JDK"></a>Install JDK</h2><p>If you use Eclipse, you don’t have to install Java development, it has one.</p>
<h3 id="Download-JDK"><a href="#Download-JDK" class="headerlink" title="Download JDK"></a>Download JDK</h3><p>Download JDK from <a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html" target="_blank" rel="external">https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html</a></p>
<p>I use <code>jdk-11.0.2_osx-x64_bin.dmg</code></p>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>After install the dmg file, enter <code>java -version</code> in terminal to test whether it is successful:</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ java -version</div><div class="line">java version <span class="string">"11.0.2"</span> <span class="number">2019</span><span class="number">-01</span><span class="number">-15</span> LTS</div><div class="line">Java(TM) SE Runtime Environment <span class="number">18.9</span> (build <span class="number">11.0</span><span class="number">.2</span>+<span class="number">9</span>-LTS)</div><div class="line">Java HotSpot(TM) <span class="number">64</span>-Bit Server VM <span class="number">18.9</span> (build <span class="number">11.0</span><span class="number">.2</span>+<span class="number">9</span>-LTS, mixed mode)</div></pre></td></tr></table></figure>
<h2 id="Enviroment"><a href="#Enviroment" class="headerlink" title="Enviroment"></a>Enviroment</h2><h3 id="Add-PATH-and-CALSSPATH"><a href="#Add-PATH-and-CALSSPATH" class="headerlink" title="Add PATH and CALSSPATH"></a>Add PATH and CALSSPATH</h3><p>Check the version:</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ls <span class="regexp">/Library/</span>Java<span class="regexp">/JavaVirtualMachines/</span></div><div class="line">jdk-<span class="number">11.0</span>.<span class="number">2</span>.jdk</div></pre></td></tr></table></figure>
<p>Or open Finder, press “Command + Shift + G”, and enter <code>/Library/Java/JavaVirtualMachines/</code> to see it.</p>
<p>Edit profile:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/profile</span></div></pre></td></tr></table></figure>
<p>Add this at the last:</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">JAVA_HOME=<span class="string">"/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/"</span></div><div class="line"></div><div class="line">CLASS_PATH=<span class="string">"$JAVA_HOME/lib"</span></div><div class="line"></div><div class="line">PATH=<span class="string">".:$PATH:$JAVA_HOME/bin</span></div></pre></td></tr></table></figure>
<p>The whole file should be like this:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># System-wide .profile for sh(1)</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ -x /usr/libexec/path_helper ]; <span class="keyword">then</span></div><div class="line">        <span class="built_in">eval</span> `/usr/libexec/path_helper <span class="_">-s</span>`</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;BASH-no&#125;</span>"</span> != <span class="string">"no"</span> ]; <span class="keyword">then</span></div><div class="line">        [ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">JAVA_HOME=<span class="string">"/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home/"</span></div><div class="line"></div><div class="line">CLASS_PATH=<span class="string">"<span class="variable">$JAVA_HOME</span>/lib"</span></div><div class="line"></div><div class="line">PATH=<span class="string">".:<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin"</span></div></pre></td></tr></table></figure>
<p>Press <code>esc</code> and enter <code>:wq!</code> to sava and exit.</p>
<p>Enter this to make it effective:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> /etc/profile</span></div></pre></td></tr></table></figure>
<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>Write a <code>Hello.jav</code> file.</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="title">Hello</span> &#123;</div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">         System.<span class="keyword">out</span>.println(<span class="string">"Hello Laker"</span>);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Compile it :</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> laker @ Laker <span class="keyword">in</span> ~/Downloads [21:23:40] C:1</span></div><div class="line"><span class="meta">$</span><span class="bash"> javac Hello.java</span></div></pre></td></tr></table></figure>
<p>Run it</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> laker @ Laker <span class="keyword">in</span> ~/Downloads [21:24:12]</span></div><div class="line"><span class="meta">$</span><span class="bash"> java Hello</span></div><div class="line">Hello Laker</div></pre></td></tr></table></figure>
<h2 id="Uninstallation"><a href="#Uninstallation" class="headerlink" title="Uninstallation"></a>Uninstallation</h2><p>Futhermore, the uninstallation is following command:<br><a href="https://blog.csdn.net/qq_30889373/article/details/78863313" target="_blank" rel="external">https://blog.csdn.net/qq_30889373/article/details/78863313</a></p>
<ul>
<li>Fisrt</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin</span></div><div class="line"><span class="meta">$</span><span class="bash"> sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane</span></div></pre></td></tr></table></figure>
<ul>
<li>Second</li>
</ul>
<p>Check the version:</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ls <span class="regexp">/Library/</span>Java<span class="regexp">/JavaVirtualMachines/</span></div><div class="line">jdk-<span class="number">11.0</span>.<span class="number">2</span>.jdk</div></pre></td></tr></table></figure>
<p>Remove</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo rm -rf <span class="regexp">/Library/</span>Java<span class="regexp">/JavaVirtualMachines/</span>jdk-<span class="number">9.0</span>.<span class="number">1</span>.jdk</div></pre></td></tr></table></figure>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;About&quot;&gt;&lt;a href=&quot;#About&quot; class=&quot;headerlink&quot; title=&quot;About&quot;&gt;&lt;/a&gt;About&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;JDK: Java development toolkit, the library of Java, using to complie and run Java programs&lt;/li&gt;
&lt;li&gt;J2EE: Java 2 enterprise edition, for enterprise&lt;/li&gt;
&lt;li&gt;J2SE: Java 2 standard edition, standar version&lt;/li&gt;
&lt;li&gt;J2ME: Java 2 Micro Edition, usually for mobile developement&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="http://laker.me/blog/categories/Java/"/>
    
    
      <category term="Java" scheme="http://laker.me/blog/tags/Java/"/>
    
      <category term="MacOS" scheme="http://laker.me/blog/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 136 Single Number (Python)</title>
    <link href="http://laker.me/blog/2019/04/10/19_0410_leetcode136/"/>
    <id>http://laker.me/blog/2019/04/10/19_0410_leetcode136/</id>
    <published>2019-04-10T00:24:00.000Z</published>
    <updated>2019-05-16T00:53:31.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![LeetCode 189 Rotate Array](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) -->
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a non-empty array of integers, every element appears twice except for one. Find that single one.</p>
<a id="more"></a>
<p>Note:</p>
<p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p>
<p>Example 1:</p>
<pre><code>Input: [2,2,1]
Output: 1
</code></pre><p>Example 2:</p>
<pre><code>Input: [4,1,2,1,2]
Output: 4
</code></pre><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><p><a href="https://github.com/younglaker/leetcode/blob/master/38_Count_and_Say.py" target="_blank" rel="external">https://github.com/younglaker/leetcode/blob/master/38_Count_and_Say.py</a></p>
<h3 id="Approach-1-Array"><a href="#Approach-1-Array" class="headerlink" title="Approach 1 - Array"></a>Approach 1 - Array</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">def singleNumber1(nums):</div><div class="line">    <span class="keyword">list</span> = []</div><div class="line">    <span class="keyword">for</span> i in num<span class="variable">s:</span></div><div class="line">        <span class="keyword">if</span> i in lis<span class="variable">t:</span></div><div class="line">            <span class="keyword">list</span>.<span class="built_in">remove</span>(i)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">list</span>.<span class="keyword">append</span>(i)</div><div class="line">    <span class="keyword">return</span> <span class="keyword">list</span>.<span class="keyword">pop</span>()</div></pre></td></tr></table></figure>
<p>Use array(in Python called list) to store numbers in nums. If some number in <code>nums</code> is new to array, append it.If some number is already in the array, remove it</p>
<ul>
<li>Time complexity : O(n^2). <code>for i in nums</code> takes O(n) time, and <code>if i in list</code> is also a for-loop taking O(n) time.</li>
<li>Space complexity : O(n). We need a list of size n to contain elements in nums.</li>
</ul>
<h3 id="Approach-2-Hash"><a href="#Approach-2-Hash" class="headerlink" title="Approach 2 - Hash"></a>Approach 2 - Hash</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">def singleNumber2(nums):</div><div class="line">    dict = &#123;&#125;</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nums:</div><div class="line">        <span class="keyword">if</span> dict.has_key(i):</div><div class="line">            dict.<span class="built_in">pop</span>(i)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            dict.update(&#123;i: <span class="number">0</span>&#125;)</div><div class="line">    <span class="built_in">print</span> dict</div><div class="line">    <span class="keyword">for</span> <span class="built_in">key</span>, val <span class="keyword">in</span> dict.items():</div><div class="line">        <span class="keyword">if</span> val == <span class="number">0</span>:</div><div class="line">            <span class="built_in">return</span> <span class="built_in">key</span></div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleNumber5</span><span class="params">(nums)</span>:</span></div><div class="line">    hash_table = &#123;&#125;</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nums:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            hash_table.pop(i)</div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            hash_table[i] = <span class="number">1</span></div><div class="line">    <span class="comment"># popitem(): Remove the last item from the dictionary:</span></div><div class="line">    <span class="keyword">return</span> hash_table.popitem()[<span class="number">0</span>]</div></pre></td></tr></table></figure>
<p>Use array(in Python called list) to store numbers in nums. If some number in <code>nums</code> is new to array, append it.If some number is already in the array, remove it</p>
<ul>
<li>Time complexity : O(n). <code>for i in nums</code> takes O(n) time, and <code>if dict.has_key(i)</code> takes O(1) time.</li>
<li>Space complexity : O(n). We need a hash table of size n to contain elements in nums.</li>
</ul>
<h3 id="Approach-3-Math"><a href="#Approach-3-Math" class="headerlink" title="Approach 3: Math"></a>Approach 3: Math</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleNumber3</span><span class="params">(nums)</span></span>:</div><div class="line">    <span class="comment"># sum(a)</span></div><div class="line">    <span class="comment"># a is the list , it adds up all the numbers in the</span></div><div class="line">    <span class="comment"># list a and takes start to be 0, so returning</span></div><div class="line">    <span class="comment"># only the sum of the numbers in the list.</span></div><div class="line">    <span class="comment"># sum(a, start)</span></div><div class="line">    <span class="comment"># this returns the sum of the list + start</span></div><div class="line">    <span class="comment"># set(list): remove the duplicate</span></div><div class="line">    <span class="keyword">return</span> <span class="number">2</span> * sum(set(nums)) - sum(nums)</div></pre></td></tr></table></figure>
<p>2∗(a+b+c)−(2a+2b+c)=c</p>
<ul>
<li>Time complexity : O(n + n) = O(2n)=O(n). <code>sum()</code> is a for-loop.</li>
<li>Space complexity : O(n + n) = O(2n)=O(n). A set needs space for the elements in nums</li>
</ul>
<h3 id="Approach-4-XOR"><a href="#Approach-4-XOR" class="headerlink" title="Approach 4: XOR"></a>Approach 4: XOR</h3><p>Because <code>a⊕0=a</code> and <code>a⊕a=0</code><br>Then: <code>a⊕b⊕a=(a⊕a)⊕b=0⊕b=b</code><br>So we can XOR all bits together to find the unique number.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleNumber4</span><span class="params">(nums)</span></span>:</div><div class="line">    a = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="symbol">nums:</span></div><div class="line">        a ^= i</div><div class="line">    <span class="keyword">return</span> a</div></pre></td></tr></table></figure>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![LeetCode 189 Rotate Array](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) --&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given a non-empty array of integers, every element appears twice except for one. Find that single one.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="Python" scheme="http://laker.me/blog/tags/Python/"/>
    
      <category term="LeetCode" scheme="http://laker.me/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 26 Remove Duplicates from Sorted Array</title>
    <link href="http://laker.me/blog/2019/04/03/19_0403_leetcode26/"/>
    <id>http://laker.me/blog/2019/04/03/19_0403_leetcode26/</id>
    <published>2019-04-03T00:24:00.000Z</published>
    <updated>2019-05-29T07:04:29.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![LeetCode 26 Rotate Array](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) -->
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="external">https://leetcode.com/problems/remove-duplicates-from-sorted-array/</a></p>
<p>Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.</p>
<a id="more"></a>
<p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p>
<p>Example 1:</p>
<pre><code>Given nums = [1,1,2],

Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively.
</code></pre><p>It doesn’t matter what you leave beyond the returned length.</p>
<p>Example 2:</p>
<pre><code>Given nums = [0,0,1,1,1,2,2,3,3,4],

Your function should return length = 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively.
</code></pre><p>It doesn’t matter what values are set beyond the returned length.</p>
<p>Clarification:</p>
<p>Confused why the returned value is an integer but your answer is an array?</p>
<p>Note that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.</p>
<p>Internally you can think of this:</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// nums is passed in by reference. (i.e., without making a copy)</span></div><div class="line"><span class="keyword">int</span> <span class="built_in">len</span> = removeDuplicates(nums);</div><div class="line"></div><div class="line"><span class="comment">// any modification to nums in your function would be known by the caller.</span></div><div class="line"><span class="comment">// using the length returned by your function, it prints the first len elements.</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">len</span>; i++) &#123;</div><div class="line">    <span class="built_in">print</span>(nums[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Expalnation"><a href="#Expalnation" class="headerlink" title="Expalnation:"></a>Expalnation:</h3><p>Because the question require that ‘Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory’. We don’t have to delete the duplicates, we can overwrite the duplicates.</p>
<h3 id="Full-Code-in-Github"><a href="#Full-Code-in-Github" class="headerlink" title="Full Code in Github :"></a>Full Code in Github :</h3><p><a href="https://github.com/younglaker/leetcode/blob/master/26_remove_duplicates_from_sorted_array.py" target="_blank" rel="external">https://github.com/younglaker/leetcode/blob/master/26_remove_duplicates_from_sorted_array.py</a></p>
<h3 id="Example-explanation"><a href="#Example-explanation" class="headerlink" title="Example explanation"></a>Example explanation</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19040301.jpg" alt="Example explanation"></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![LeetCode 26 Rotate Array](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) --&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/remove-duplicates-from-sorted-array/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://leetcode.com/problems/remove-duplicates-from-sorted-array/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="Python" scheme="http://laker.me/blog/tags/Python/"/>
    
      <category term="LeetCode" scheme="http://laker.me/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Python-LeetCode 189 Rotate Array</title>
    <link href="http://laker.me/blog/2019/03/20/19_0320_leetcode189/"/>
    <id>http://laker.me/blog/2019/03/20/19_0320_leetcode189/</id>
    <published>2019-03-20T00:24:00.000Z</published>
    <updated>2019-05-27T13:20:17.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![LeetCode 189 Rotate Array](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) -->
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><a href="https://leetcode.com/problems/rotate-array/" target="_blank" rel="external">https://leetcode.com/problems/rotate-array/</a></p>
<p>Given an array, rotate the array to the right by k steps, where k is non-negative.</p>
<a id="more"></a>
<p>Example 1:</p>
<pre><code>Input: [1,2,3,4,5,6,7] and k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
</code></pre><p>Example 2:</p>
<pre><code>Input: [-1,-100,3,99] and k = 2
Output: [3,99,-1,-100]
Explanation:
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]
</code></pre><p>Note:</p>
<p>Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.<br>Could you do it in-place with O(1) extra space?</p>
<h2 id="Solution-one"><a href="#Solution-one" class="headerlink" title="Solution one"></a>Solution one</h2><h3 id="Expalnation"><a href="#Expalnation" class="headerlink" title="Expalnation:"></a>Expalnation:</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19032001.jpg" alt="Expalnation"></p>
<p>Every element moves k steps and it will get the correct array.</p>
<h3 id="Method-one"><a href="#Method-one" class="headerlink" title="Method one"></a>Method one</h3><p>Use a new list to store the result, but it need O(n) space.</p>
<h3 id="Method-two"><a href="#Method-two" class="headerlink" title="Method two"></a>Method two</h3><p>Set the element to the correct position one by one, it only need O(1) space and O(n) time.</p>
<p>Whewn the length of nums id odd, it can set to the correct position one by one for one time,</p>
<p>But when the lenght of nums is even, like the example above, it will collide. In our example above, the length of nums is 6 and when k=2, nums[0]-&gt;nums[2]-&gt;nums[4]-&gt;nums[0], so we have to move to nums[1] to restart. So in our code, when ‘i==j’, then ‘i++’.</p>
<p>Also the exchange will execute ‘length’ times. So in our code, it will exchange when ‘count &lt; length’</p>
<h3 id="Full-Code-in-Github"><a href="#Full-Code-in-Github" class="headerlink" title="Full Code in Github :"></a>Full Code in Github :</h3><p><a href="https://github.com/younglaker/leetcode/blob/master/189_Rotate_Array.py" target="_blank" rel="external">https://github.com/younglaker/leetcode/blob/master/189_Rotate_Array.py</a></p>
<h3 id="Code-explanation"><a href="#Code-explanation" class="headerlink" title="Code explanation"></a>Code explanation</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19032002.jpg" alt="Code explanation"></p>
<h2 id="Solution-two"><a href="#Solution-two" class="headerlink" title="Solution two"></a>Solution two</h2><h3 id="Expalnation-1"><a href="#Expalnation-1" class="headerlink" title="Expalnation:"></a>Expalnation:</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19032003.jpg" alt="Expalnation"></p>
<ul>
<li>Reverse the whole list</li>
<li>Reverse list from 0 to k-1 (because the list starts from 0)</li>
<li>Reverse list from k to length-1</li>
</ul>
<h3 id="Full-Code-in-Github-1"><a href="#Full-Code-in-Github-1" class="headerlink" title="Full Code in Github :"></a>Full Code in Github :</h3><p><a href="https://github.com/younglaker/leetcode/blob/master/189_Rotate_Array2.py" target="_blank" rel="external">https://github.com/younglaker/leetcode/blob/master/189_Rotate_Array2.py</a></p>
<h3 id="Code-explanation-1"><a href="#Code-explanation-1" class="headerlink" title="Code explanation"></a>Code explanation</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19032004.jpg" alt="Code explanation"></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![LeetCode 189 Rotate Array](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) --&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/rotate-array/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://leetcode.com/problems/rotate-array/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given an array, rotate the array to the right by k steps, where k is non-negative.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="Python" scheme="http://laker.me/blog/tags/Python/"/>
    
      <category term="LeetCode" scheme="http://laker.me/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Wechat mini program - start up and homepage</title>
    <link href="http://laker.me/blog/2019/03/06/19_0306_wechat_mini_program/"/>
    <id>http://laker.me/blog/2019/03/06/19_0306_wechat_mini_program/</id>
    <published>2019-03-06T00:24:00.000Z</published>
    <updated>2019-05-16T00:54:19.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![Wechat mini program](https://wx2.sinaimg.cn/large/6d184cefly1g0u0mf6a9pj20p00463yw.jpg) -->
<h2 id="1-Register-an-account"><a href="#1-Register-an-account" class="headerlink" title="1. Register an account"></a>1. Register an account</h2><p>Register:<br><a href="https://mp.weixin.qq.com/cgi-bin/wx" target="_blank" rel="external">https://mp.weixin.qq.com/cgi-bin/wx</a></p>
<a id="more"></a>
<p>After register, login in and get AppID to login develop tool.</p>
<p><img src="https://wx4.sinaimg.cn/mw690/6d184cefly1fymkjsampgj211g0rwq5v.jpg" alt="AppID"></p>
<p>Develop tool:<br><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html" target="_blank" rel="external">https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html</a></p>
<p><img src="https://wx4.sinaimg.cn/mw690/6d184cefly1fymkjx0izpj20ik0qcjsx.jpg" alt="Develop tool"></p>
<h2 id="2-app-json"><a href="#2-app-json" class="headerlink" title="2. app.json"></a>2. app.json</h2><p>Documents: <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE" target="_blank" rel="external">https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE</a></p>
<h3 id="pages"><a href="#pages" class="headerlink" title="pages"></a>pages</h3><p>The whole config for mini program.</p>
<p>Add pages url in <code>pages</code>, it will add a pakages folders automatically, with <code>.wxml</code>, <code>.wxss</code>, <code>.js</code>,<code>.json</code> files:</p>
<p><img src="https://wx4.sinaimg.cn/mw690/6d184cefly1fymkki4182j20zg0l2afo.jpg" alt="pages"></p>
<p>After saving files, it will refresh and redirect to the first file which means the homepage. We can add a compilation mode to refresh specific page.</p>
<p><img src="https://ws3.sinaimg.cn/mw690/6d184cefly1fymkn79brlj20ek0myq4v.jpg" alt="homepage"></p>
<p>Generate a QR code to commit remote debug:</p>
<p><img src="https://ws1.sinaimg.cn/mw690/6d184cefly1fymknwkn9yj20h80o6go4.jpg" alt="remote debug"></p>
<h3 id="tabBar"><a href="#tabBar" class="headerlink" title="tabBar"></a>tabBar</h3><p><img src="https://wx4.sinaimg.cn/mw690/6d184cefly1fymkktawk3j21qa0yqb05.jpg" alt="tabBar"></p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="string">"tabBar"</span>: &#123;</div><div class="line">  <span class="string">"list"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"pages/square/square"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"活动广场"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"images/icon_square.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"images/icon_square_acted.png"</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"pages/newact/newact"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"发布活动"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"images/new_act.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"images/new_act_acted.png"</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"pages/index/index"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"个人中心"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"images/icon_my.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"images/icon_my_acted.png"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p><img src="https://ws1.sinaimg.cn/mw690/6d184cefly1fymkn33tr3j21a60egdua.jpg" alt="windows"></p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="string">"window"</span>: &#123;</div><div class="line">  <span class="string">"backgroundColor"</span>: <span class="string">"<span class="subst">#FFFFFF</span>"</span>,</div><div class="line">  <span class="string">"backgroundTextStyle"</span>: <span class="string">"light"</span>,</div><div class="line">  <span class="string">"navigationBarBackgroundColor"</span>: <span class="string">"<span class="subst">#F6F6F6</span>"</span>,</div><div class="line">  <span class="string">"navigationBarTitleText"</span>: <span class="string">"WeGo活动行"</span>,</div><div class="line">  <span class="string">"navigationBarTextStyle"</span>: <span class="string">"black"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="swiper"><a href="#swiper" class="headerlink" title="swiper"></a>swiper</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html" target="_blank" rel="external">https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html</a></p>
<p><img src="https://ws3.sinaimg.cn/mw690/6d184cefly1fymko4ohulj20i20akah7.jpg" alt="swiper"></p>
<p><code>.wxml</code></p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span></div><div class="line"><span class="comment">&lt;!-- Hot activities --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">indicator-dots</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;indicatorDots&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span></span></span></div><div class="line">  <span class="attr">autoplay</span>=<span class="string">"</span><span class="template-variable">&#123;&#123;autoplay&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">interval</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;interval&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">duration</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;duration&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;hot_list&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> &gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">swiper-item</span> <span class="attr">bindtap</span>=<span class="string">'goto_details'</span> <span class="attr">data-actid</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></div><div class="line">      <span class="comment">&lt;!-- Posters --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"http://140.143.145.179</span></span><span class="template-variable">&#123;&#123;item.post_link&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"slide-image"</span> /&gt;</span></span></div><div class="line"></div><div class="line">      <span class="comment">&lt;!-- Titile --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"hot_title"</span>&gt;</span><span class="template-variable">&#123;&#123;item.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></div></pre></td></tr></table></figure>
<p><code>.js</code></p>
<p>Define the data:</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">  data:</span> &#123;</div><div class="line">    <span class="comment">// show icator dots</span></div><div class="line"><span class="symbol">    indicatorDots:</span> true,</div><div class="line">    <span class="comment">// auto play</span></div><div class="line"><span class="symbol">    autoplay:</span> true,</div><div class="line">    <span class="comment">// scroll interval</span></div><div class="line"><span class="symbol">    interval:</span> <span class="number">3000</span>,</div><div class="line">    <span class="comment">// stop duration</span></div><div class="line"><span class="symbol">    duration:</span> <span class="number">500</span>,</div><div class="line">    <span class="comment">// hot activities list</span></div><div class="line"><span class="symbol">    hot_list:</span> []</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Get hot activitis lists by Ajax:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> this_obj = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">  wx.request(&#123;</div><div class="line">    <span class="attr">url</span>: <span class="string">'xxxx'</span>,</div><div class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</div><div class="line">    <span class="attr">header</span>: &#123;</div><div class="line">      <span class="string">'Content-Type'</span>: <span class="string">'json'</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">data</span>: &#123;</div><div class="line">      <span class="attr">userID</span>: user_id</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">      this_obj.setData(&#123;</div><div class="line">        <span class="attr">hot_list</span>: res.data.data.list</div><div class="line">      &#125;);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">fail</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">"fail"</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Choose-tags"><a href="#Choose-tags" class="headerlink" title="Choose tags"></a>Choose tags</h2><p><img src="https://ws1.sinaimg.cn/mw690/6d184cefly1fymkoa1e4yj20hm0bywhp.jpg" alt="image"></p>
<p><code>.wxml</code></p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'tags_list'</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'tags_list_title'</span>&gt;</span>标签选择：<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"tags </span></span><span class="template-variable">&#123;&#123;current_tag==index?'tags_active':''&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">wx:for</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;tags&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>  <span class="attr">data-actname</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item.name&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">bindtap</span>=<span class="string">"selcetTags"</span> <span class="attr">data-index</span> =<span class="string">'</span></span></span><span class="template-variable">&#123;&#123;index&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">'</span>&gt;</span></span><span class="template-variable">&#123;&#123;item.value&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure>
<p><code>.wxss</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* acted tag */</span></div><div class="line"><span class="selector-class">.tags_list</span> <span class="selector-class">.tags_active</span> &#123;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00BF00</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>.js</code></p>
<p>Initial data:</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">data</span>: &#123;</div><div class="line">  <span class="comment">// 标签</span></div><div class="line">  <span class="attribute">tags</span>: [</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'all'</span>, <span class="attribute">value</span>: <span class="string">'全部'</span> &#125;,</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'party'</span>, <span class="attribute">value</span>: <span class="string">'派对'</span> &#125;,</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'movie'</span>, <span class="attribute">value</span>: <span class="string">'电影'</span> &#125;,</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'sport'</span>, <span class="attribute">value</span>: <span class="string">'健身'</span> &#125;,</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'show'</span>, <span class="attribute">value</span>: <span class="string">'展览'</span> &#125;,</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'exhibition'</span>, <span class="attribute">value</span>: <span class="string">'演出'</span> &#125;,</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'competition'</span>, <span class="attribute">value</span>: <span class="string">'赛事'</span> &#125;,</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'cate'</span>, <span class="attribute">value</span>: <span class="string">'美食'</span> &#125;,</div><div class="line">    &#123; <span class="attribute">name</span>: <span class="string">'others'</span>, <span class="attribute">value</span>: <span class="string">'其他'</span> &#125;</div><div class="line">  ],</div><div class="line">  <span class="comment">// 当前 tag</span></div><div class="line">  <span class="attribute">current_tag</span>: <span class="number">0</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Switch content:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">selcetTags: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line"></div><div class="line">  <span class="keyword">var</span> this_obj = <span class="keyword">this</span>;</div><div class="line"></div><div class="line"> <span class="comment">// Get current tag name</span></div><div class="line">  <span class="keyword">var</span> current_tagname = e.currentTarget.dataset.actname;</div><div class="line"></div><div class="line">  <span class="comment">// Set the tage</span></div><div class="line">  this_obj.setData(&#123;</div><div class="line">    <span class="attr">current_tag</span>: e.currentTarget.dataset.index</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">  wx.request(&#123;</div><div class="line">    <span class="attr">url</span>: <span class="string">''</span>,</div><div class="line">    <span class="attr">method</span>: <span class="string">"GET"</span>,</div><div class="line">    <span class="attr">header</span>: &#123;</div><div class="line">      <span class="string">'Content-Type'</span>: <span class="string">'json'</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">data</span>: &#123;</div><div class="line">      <span class="attr">userID</span>: app.data.user_id,</div><div class="line">      <span class="attr">subFilter</span>: current_tagname</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line"></div><div class="line">      <span class="comment">// Rebind act_list</span></div><div class="line">      this_obj.setData(&#123;</div><div class="line">        <span class="attr">act_list</span>: res.data.data.list</div><div class="line">      &#125;);</div><div class="line"></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">fail</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">"fail"</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Use-wx-for-to-show-lists"><a href="#Use-wx-for-to-show-lists" class="headerlink" title="Use wx:for to show lists"></a>Use wx:for to show lists</h2><p><img src="https://wx4.sinaimg.cn/mw690/6d184cefly1fymkol36f9j20hc0ge46z.jpg" alt="image"></p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="comment">&lt;!-- act_list_box --&gt;</span></span></div><div class="line"><span class="comment">&lt;!-- bindtap='goto_details' to redirect to act detail page --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'act_list_box'</span> <span class="attr">wx:for</span>=<span class="string">'</span></span><span class="template-variable">&#123;&#123;act_list&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">'</span> <span class="attr">bindtap</span>=<span class="string">'goto_details'</span> <span class="attr">data-actid</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Poster --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'act_img'</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"http://140.143.145.179</span></span><span class="template-variable">&#123;&#123;item.post_link&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"act_list_img"</span>/&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- Activities infomation --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'act_info'</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- title --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span><span class="template-variable">&#123;&#123;item.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- start_time --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"time"</span>&gt;</span><span class="template-variable">&#123;&#123;item.start_time&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- join_number/member_limit --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'people_number'</span>&gt;</span><span class="template-variable">&#123;&#123;item.join_number&#125;&#125;</span><span class="xml"> / </span><span class="template-variable">&#123;&#123;item.member_limit&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Bind redirect function:</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Redirect to detail page</span></div><div class="line">goto_details: <span class="function"><span class="keyword">function</span><span class="params">(e)</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="keyword">var</span> user_id = app.data.user_id;</div><div class="line">  <span class="keyword">var</span> act_id = e.currentTarget.dataset.actid;</div><div class="line"></div><div class="line">  <span class="comment">// Convey parameter to detail page</span></div><div class="line">  wx.navigateTo(&#123;</div><div class="line">    url: <span class="string">'../detail/detail?userID='</span> + user_id + <span class="string">'&amp;actID='</span> + act_id</div><div class="line">  &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![Wechat mini program](https://wx2.sinaimg.cn/large/6d184cefly1g0u0mf6a9pj20p00463yw.jpg) --&gt;
&lt;h2 id=&quot;1-Register-an-account&quot;&gt;&lt;a href=&quot;#1-Register-an-account&quot; class=&quot;headerlink&quot; title=&quot;1. Register an account&quot;&gt;&lt;/a&gt;1. Register an account&lt;/h2&gt;&lt;p&gt;Register:&lt;br&gt;&lt;a href=&quot;https://mp.weixin.qq.com/cgi-bin/wx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mp.weixin.qq.com/cgi-bin/wx&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://laker.me/blog/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="http://laker.me/blog/tags/HTML5/"/>
    
      <category term="Wechat" scheme="http://laker.me/blog/tags/Wechat/"/>
    
      <category term="Front-end" scheme="http://laker.me/blog/tags/Front-end/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 39 Combination Sum</title>
    <link href="http://laker.me/blog/2019/02/23/19_0223_leetcode_39/"/>
    <id>http://laker.me/blog/2019/02/23/19_0223_leetcode_39/</id>
    <published>2019-02-23T00:24:00.000Z</published>
    <updated>2019-05-27T13:15:58.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![LeetCode 39 Combination Sum ](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) -->
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><a href="https://leetcode.com/problems/combination-sum/" target="_blank" rel="external">https://leetcode.com/problems/combination-sum/</a></p>
<p>Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.</p>
<a id="more"></a>
<p>The same repeated number may be chosen from candidates unlimited number of times.</p>
<p>Note:</p>
<p>All numbers (including target) will be positive integers.<br>The solution set must not contain duplicate combinations.</p>
<p>Example 1:</p>
<pre><code>Input: candidates = [2,3,6,7], target = 7,
A solution set is:
[
  [7],
  [2,2,3]
]
</code></pre><p>Example 2:</p>
<pre><code>Input: candidates = [2,3,5], target = 8,
A solution set is:
[
  [2,2,2,2],
  [2,3,3],
  [3,5]
]
</code></pre><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Expalnation"><a href="#Expalnation" class="headerlink" title="Expalnation:"></a>Expalnation:</h3><ul>
<li>Sort the list at first, so once the remain less than 0, it doesn’t have to add next numbers of the list.</li>
<li>The process of addition likes deep first sort.</li>
</ul>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19022301.jpg" alt="Expalnation"></p>
<h3 id="Full-Code-in-Github"><a href="#Full-Code-in-Github" class="headerlink" title="Full Code in Github :"></a>Full Code in Github :</h3><p><a href="https://github.com/younglaker/leetcode/blob/master/39_combination_sum.py" target="_blank" rel="external">https://github.com/younglaker/leetcode/blob/master/39_combination_sum.py</a></p>
<h3 id="Code-explanation"><a href="#Code-explanation" class="headerlink" title="Code explanation"></a>Code explanation</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19022302.jpg" alt="Code Expalnation"></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![LeetCode 39 Combination Sum ](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) --&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/combination-sum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://leetcode.com/problems/combination-sum/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="Python" scheme="http://laker.me/blog/tags/Python/"/>
    
      <category term="LeetCode" scheme="http://laker.me/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 38 Count and Say</title>
    <link href="http://laker.me/blog/2019/02/18/19_0218_leetcode_39/"/>
    <id>http://laker.me/blog/2019/02/18/19_0218_leetcode_39/</id>
    <published>2019-02-18T00:24:00.000Z</published>
    <updated>2019-05-29T06:54:34.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![LeetCode 38 Count and Say](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) -->
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><a href="https://leetcode.com/problems/count-and-say/" target="_blank" rel="external">https://leetcode.com/problems/count-and-say/</a></p>
<p>The count-and-say sequence is the sequence of integers with the first five terms as following:</p>
<pre><code>1.     1
2.     11
3.     21
4.     1211
5.     111221
</code></pre><a id="more"></a>
<p>1 is read off as “one 1” or 11.<br>11 is read off as “two 1s” or 21.<br>21 is read off as “one 2, then one 1” or 1211.</p>
<p>Given an integer n where 1 ≤ n ≤ 30, generate the nth term of the count-and-say sequence.</p>
<p>Note: Each term of the sequence of integers will be represented as a string.</p>
<p>Example 1:</p>
<pre><code>Input: 1
Output: &quot;1&quot;
</code></pre><p>Example 2:</p>
<pre><code>Input: 4
Output: &quot;1211&quot;
</code></pre><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Expalnation"><a href="#Expalnation" class="headerlink" title="Expalnation:"></a>Expalnation:</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19021801.jpg" alt="Expalnation"></p>
<h3 id="Full-Code-in-Github"><a href="#Full-Code-in-Github" class="headerlink" title="Full Code in Github :"></a>Full Code in Github :</h3><p><a href="https://github.com/younglaker/leetcode/blob/master/38_Count_and_Say.py" target="_blank" rel="external">https://github.com/younglaker/leetcode/blob/master/38_Count_and_Say.py</a></p>
<h3 id="Code-explanation"><a href="#Code-explanation" class="headerlink" title="Code explanation"></a>Code explanation</h3><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19021802.jpg" alt="Code explanation"></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![LeetCode 38 Count and Say](https://wx4.sinaimg.cn/large/6d184cefgy1g008qty954j20p0046aaf.jpg) --&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/count-and-say/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://leetcode.com/problems/count-and-say/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The count-and-say sequence is the sequence of integers with the first five terms as following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.     1
2.     11
3.     21
4.     1211
5.     111221
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="Python" scheme="http://laker.me/blog/tags/Python/"/>
    
      <category term="LeetCode" scheme="http://laker.me/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Use labelme to annotate image for machine learning</title>
    <link href="http://laker.me/blog/2019/01/31/19_0131_labelme/"/>
    <id>http://laker.me/blog/2019/01/31/19_0131_labelme/</id>
    <published>2019-01-31T00:24:00.000Z</published>
    <updated>2019-05-29T07:11:33.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![labelme](https://wx4.sinaimg.cn/large/6d184cefgy1fzoyeywzqxj20p0046q3i.jpg) -->
<p>Labelme is a graphical image annotation tool. It is written in Python and uses Qt for its graphical interface. It is open source in Github at <a href="https://github.com/wkentaro/labelme" target="_blank" rel="external">https://github.com/wkentaro/labelme</a></p>
<a id="more"></a>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>It can be used in both Python 2 and Python 3. Now, let’s use Python 3.</p>
<p>I use Anaconda for machin learning. So in Anaconda :</p>
<ol>
<li>Install conda</li>
</ol>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19013101.jpg" alt="Install conda"></p>
<p>If conda is not working in terminal, activate your terminal profile:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.zsh_profile</span></div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19013102.jpg" alt="image"></p>
<ol>
<li>Create a new environment</li>
</ol>
<p>Choose a Python version you want.</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">conda create -n labelme python</span>=3.6</div></pre></td></tr></table></figure>
<p>Then we get a new clean environment for labelme:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19013103.jpg" alt="a new clean environment"></p>
<ol>
<li>Install labelme</li>
</ol>
<p>Active the environment :</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">activate</span> labelme</div></pre></td></tr></table></figure>
<p>If not worked and show <code>zsh: command not found: activate</code>, add <code>source</code> like this:</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source <span class="built_in">activate</span> labelme</div></pre></td></tr></table></figure>
<p>We will in the labeme environment.</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19013104.jpg" alt="environment">)</p>
<p>Python will be the version we chosen:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19013105.jpg" alt="Python">)</p>
<p>The pip also is the labelme version :</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19013106.jpg" alt="pip">)</p>
<p>Install labelme:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> pip install labelme</span></div></pre></td></tr></table></figure>
<h2 id="Use-labelme"><a href="#Use-labelme" class="headerlink" title="Use labelme"></a>Use labelme</h2><p>Input:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> labelme</span></div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> labelme <span class="comment"># Open GUI</span></span></div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19013107.jpg" alt="labelme">)</p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![labelme](https://wx4.sinaimg.cn/large/6d184cefgy1fzoyeywzqxj20p0046q3i.jpg) --&gt;
&lt;p&gt;Labelme is a graphical image annotation tool. It is written in Python and uses Qt for its graphical interface. It is open source in Github at &lt;a href=&quot;https://github.com/wkentaro/labelme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/wkentaro/labelme&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://laker.me/blog/categories/AI/"/>
    
    
      <category term="AI" scheme="http://laker.me/blog/tags/AI/"/>
    
      <category term="ML" scheme="http://laker.me/blog/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm - Quick Sort by Python</title>
    <link href="http://laker.me/blog/2019/01/22/19_0121_quick_sort/"/>
    <id>http://laker.me/blog/2019/01/22/19_0121_quick_sort/</id>
    <published>2019-01-22T00:24:00.000Z</published>
    <updated>2019-05-29T07:07:54.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![Django Enviroment in Tencent Cloud Ubuntu](http://wx2.sinaimg.cn/large/6d184cefly1fvwi0uvwsmj20p0046gm8.jpg) -->
<p>There are tow method to set pivot.The easy way is setting the first item as pivot, and the other way is setting the middle item as pivot.</p>
<a id="more"></a>
<p>The first way is more easy to understand and write code.<br>The second way is a little better than the first one when the list is mostly ordered, it can seperate the smaller and bigger items to two sides, but in first way , one side may has all items and the other side has no item.</p>
<h2 id="Method-one"><a href="#Method-one" class="headerlink" title="Method one"></a>Method one</h2><p>Set the first item as pivot.</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">def quick_sort(list, <span class="keyword">start</span>, <span class="keyword">end</span>):</div><div class="line">    # <span class="keyword">If</span> <span class="keyword">start</span> smaller <span class="keyword">than</span> <span class="keyword">end</span>, continue sorting</div><div class="line">    <span class="keyword">if</span> <span class="keyword">start</span> &lt; <span class="keyword">end</span>:</div><div class="line">        <span class="keyword">left</span> = <span class="keyword">start</span></div><div class="line">        <span class="keyword">right</span> = <span class="keyword">end</span></div><div class="line"></div><div class="line">        # <span class="keyword">Set</span> the <span class="keyword">first</span> item <span class="keyword">as</span> <span class="keyword">pivot</span></div><div class="line">        <span class="keyword">pivot</span> = <span class="keyword">list</span>[<span class="keyword">left</span>]</div><div class="line"></div><div class="line">        # <span class="keyword">Do</span> compare <span class="keyword">while</span> pointer <span class="keyword">left</span> smaller <span class="keyword">than</span> <span class="keyword">right</span></div><div class="line">        # <span class="keyword">Move</span> the smaller one <span class="keyword">to</span> <span class="keyword">left</span> part <span class="keyword">and</span> bigger one <span class="keyword">to</span> <span class="keyword">right</span> part</div><div class="line">        <span class="keyword">while</span> <span class="keyword">left</span> &lt; <span class="keyword">right</span>:</div><div class="line">            #<span class="keyword">if</span> the item <span class="keyword">of</span>  pointer <span class="keyword">right</span> item bigger <span class="keyword">than</span> <span class="keyword">move</span> the pointer <span class="keyword">right</span> back</div><div class="line">            <span class="keyword">while</span> (<span class="keyword">left</span> &lt; <span class="keyword">right</span>) <span class="keyword">and</span> (<span class="keyword">list</span>[<span class="keyword">right</span>] &gt;= <span class="keyword">pivot</span>):</div><div class="line">                <span class="keyword">right</span> -= <span class="number">1</span></div><div class="line"></div><div class="line">            # <span class="keyword">Now</span>, we find the a item smaller <span class="keyword">than</span> <span class="keyword">pivot</span>,so <span class="keyword">set</span> <span class="keyword">list</span>[<span class="keyword">left</span>] = <span class="keyword">list</span>[<span class="keyword">right</span>]</div><div class="line">            <span class="keyword">if</span> <span class="keyword">left</span> &lt; <span class="keyword">right</span>:</div><div class="line">                <span class="keyword">list</span>[<span class="keyword">left</span>] = <span class="keyword">list</span>[<span class="keyword">right</span>]</div><div class="line">                <span class="keyword">left</span> += <span class="number">1</span></div><div class="line"></div><div class="line">            # <span class="keyword">Than</span> we <span class="keyword">scan</span> <span class="keyword">left</span> part <span class="keyword">in</span> <span class="keyword">than</span> same way</div><div class="line">            <span class="keyword">while</span> (<span class="keyword">left</span> &lt; <span class="keyword">right</span>) <span class="keyword">and</span> (<span class="keyword">list</span>[<span class="keyword">left</span>] &lt;= <span class="keyword">pivot</span>):</div><div class="line">                <span class="keyword">left</span> += <span class="number">1</span></div><div class="line"></div><div class="line">            # <span class="keyword">Now</span>, we find the a item bigger <span class="keyword">than</span> <span class="keyword">pivot</span>,so <span class="keyword">set</span> <span class="keyword">list</span>[<span class="keyword">right</span>] = <span class="keyword">list</span>[<span class="keyword">left</span>]</div><div class="line">            <span class="keyword">if</span> <span class="keyword">left</span> &lt; <span class="keyword">right</span>:</div><div class="line">                <span class="keyword">list</span>[<span class="keyword">right</span>] = <span class="keyword">list</span>[<span class="keyword">left</span>]</div><div class="line">                <span class="keyword">right</span> -= <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line">        # <span class="keyword">After</span> comparison, the <span class="keyword">list</span> <span class="keyword">is</span> separated <span class="keyword">to</span> two parts,</div><div class="line">        # <span class="keyword">and</span> pointer <span class="keyword">left</span> <span class="keyword">and</span> <span class="keyword">right</span> <span class="keyword">are</span> <span class="keyword">in</span> the same place</div><div class="line">        # So we <span class="keyword">set</span> <span class="keyword">pivot</span> <span class="keyword">in</span> this place</div><div class="line">        <span class="keyword">list</span>[<span class="keyword">left</span>] = <span class="keyword">pivot</span></div><div class="line">        print(<span class="keyword">list</span>)</div><div class="line"></div><div class="line">        #递归前后半区</div><div class="line">        # <span class="keyword">Now</span> recurse the quick_sort(）</div><div class="line">        # <span class="keyword">Left</span> part <span class="keyword">is</span> [<span class="keyword">start</span>, <span class="keyword">left</span> - <span class="number">1</span>]</div><div class="line">        # <span class="keyword">Right</span> part <span class="keyword">is</span> [<span class="keyword">right</span> + <span class="number">1</span>, <span class="keyword">end</span>]</div><div class="line">        quick_sort(<span class="keyword">list</span>, <span class="keyword">start</span>, <span class="keyword">left</span> - <span class="number">1</span>)</div><div class="line">        quick_sort(<span class="keyword">list</span>, <span class="keyword">right</span> + <span class="number">1</span>, <span class="keyword">end</span>)</div><div class="line">    <span class="keyword">return</span> <span class="keyword">list</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line"></div><div class="line">    <span class="keyword">before</span> = [<span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">8</span>]</div><div class="line"></div><div class="line">    print(<span class="string">"Result:"</span>)</div><div class="line">    <span class="keyword">after</span> = quick_sort(<span class="keyword">before</span>, <span class="number">0</span>, <span class="keyword">len</span>(<span class="keyword">before</span>)<span class="number">-1</span> )</div><div class="line">    print(<span class="keyword">after</span>)</div></pre></td></tr></table></figure>
<p>Take a example:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19012201.jpg" alt="example"></p>
<h2 id="Method-two"><a href="#Method-two" class="headerlink" title="Method two"></a>Method two</h2><p>Set the middle item as pivot.</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">def quickSort(list, <span class="built_in">start</span>, <span class="keyword">end</span>):</div><div class="line"></div><div class="line">    <span class="keyword">if</span> <span class="built_in">start</span> &gt;= <span class="keyword">end</span>:</div><div class="line">        <span class="literal">return</span> False</div><div class="line"></div><div class="line">    <span class="comment"># Set new pointers</span></div><div class="line">    left, <span class="literal">right</span> = <span class="built_in">start</span>, <span class="function"><span class="keyword">end</span></span></div><div class="line"></div><div class="line">    <span class="title">mid</span> = (<span class="title">start</span> + <span class="title">end</span>) // <span class="title">2</span></div><div class="line"></div><div class="line">    <span class="comment"># Exchange pivot and the last item,</span></div><div class="line">    <span class="comment"># in order to make the last one not to be overwrite by next step</span></div><div class="line">    <span class="comment"># As the we have a new parameter 'pivot', so we don't be afaid of being overwrite</span></div><div class="line">    <span class="comment"># Actually, it can be any other value</span></div><div class="line">    pivot = list[<span class="keyword">mid</span>]</div><div class="line">    list[<span class="keyword">mid</span>] = list[<span class="keyword">end</span>]</div><div class="line">    list[<span class="keyword">end</span>] = pivot</div><div class="line"></div><div class="line">    <span class="comment"># The following code is the similar to method one</span></div><div class="line">    <span class="comment"># But pay attention, here we start from left part,</span></div><div class="line">    <span class="comment"># Because we set the useless value to the last item,</span></div><div class="line">    <span class="comment"># which will be overwrite by a lager number from left part</span></div><div class="line">    <span class="keyword">while</span> left != <span class="literal">right</span>:</div><div class="line">        <span class="keyword">while</span> left &lt; <span class="literal">right</span> <span class="keyword">and</span> list[left] &lt;= pivot:</div><div class="line">            left += <span class="number">1</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> left &lt; <span class="literal">right</span>:</div><div class="line">            list[<span class="literal">right</span>] = list[left]</div><div class="line">            <span class="literal">right</span> -= <span class="number">1</span></div><div class="line"></div><div class="line">        <span class="keyword">while</span> left &lt; <span class="literal">right</span> <span class="keyword">and</span> list[<span class="literal">right</span>] &gt;= pivot:</div><div class="line">            <span class="literal">right</span> -= <span class="number">1</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> left &lt; <span class="literal">right</span>:</div><div class="line">            list[left] = list[<span class="literal">right</span>]</div><div class="line">            left += <span class="number">1</span></div><div class="line"></div><div class="line">    list[<span class="literal">right</span>] = pivot</div><div class="line"></div><div class="line">    quickSort(list, <span class="built_in">start</span>, <span class="literal">right</span><span class="number">-1</span>)</div><div class="line">    quickSort(list, <span class="literal">right</span>+<span class="number">1</span>, <span class="keyword">end</span>)</div><div class="line">    <span class="literal">return</span> list</div><div class="line"></div><div class="line"><span class="keyword">a</span> = [<span class="number">5</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">8</span>]</div><div class="line"><span class="keyword">a</span> = quickSort(<span class="keyword">a</span>, <span class="number">0</span>, <span class="built_in">len</span>(<span class="keyword">a</span>)<span class="number">-1</span>)</div><div class="line">print(<span class="keyword">a</span>)</div></pre></td></tr></table></figure>
<p>Take a example:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/common/19012202.jpg" alt="example"></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![Django Enviroment in Tencent Cloud Ubuntu](http://wx2.sinaimg.cn/large/6d184cefly1fvwi0uvwsmj20p0046gm8.jpg) --&gt;
&lt;p&gt;There are tow method to set pivot.The easy way is setting the first item as pivot, and the other way is setting the middle item as pivot.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://laker.me/blog/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://laker.me/blog/tags/Algorithm/"/>
    
      <category term="Python" scheme="http://laker.me/blog/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django Enviroment in Tencent Cloud Ubuntu</title>
    <link href="http://laker.me/blog/2018/12/28/18_1228_django_deployment/"/>
    <id>http://laker.me/blog/2018/12/28/18_1228_django_deployment/</id>
    <published>2018-12-28T00:24:00.000Z</published>
    <updated>2019-05-29T07:18:44.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![Django Enviroment in Tencent Cloud Ubuntu][1] -->
<h2 id="Enviroment"><a href="#Enviroment" class="headerlink" title="Enviroment:"></a>Enviroment:</h2><ul>
<li>MacOS</li>
<li>Tencent Cloud Ubuntu 18.04</li>
<li>Python 3.6</li>
<li>Django 2.0</li>
</ul>
<a id="more"></a>
<h2 id="Connect-to-server"><a href="#Connect-to-server" class="headerlink" title="Connect to server"></a>Connect to server</h2><p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2018/18122801.jpg" alt="Connect via SSH"></p>
<p>In MacOs, it’s very easy to connect to the server. In terminal :</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -<span class="selector-tag">q</span> -l ubuntu -<span class="selector-tag">p</span> [port] [ip]</div></pre></td></tr></table></figure>
<p>Like <code>ssh -q -l ubuntu -p 20 188.131.***.***</code>.</p>
<p>Login with password.</p>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>In Ubuntu18.04, there are two versions of Pyhton: 2.7 and 3.6. The default version is 2.7, If you don’t want to change, then skip following steps.</p>
<p>Alter to python3.6:</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo <span class="keyword">update</span>-alternatives --install /usr/bin/<span class="keyword">python</span> <span class="keyword">python</span> /usr/bin/python2 <span class="number">100</span></div><div class="line">$ sudo <span class="keyword">update</span>-alternatives --install /usr/bin/<span class="keyword">python</span> <span class="keyword">python</span> /usr/bin/<span class="keyword">python3</span> <span class="number">150</span></div></pre></td></tr></table></figure>
<p>Check whether it successes:</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ python --version</div><div class="line">Python <span class="number">3.6</span><span class="number">.7</span></div></pre></td></tr></table></figure>
<h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><p>Install pip:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> sudo apt install python3-pip</span></div></pre></td></tr></table></figure>
<p>Check whether it successes:</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ pip --version</div><div class="line">pip <span class="number">9.0</span>.<span class="number">1</span> from /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">python3</span>/<span class="title">dist</span>-<span class="title">packages</span> (<span class="title">python</span> 3.6)</span></div></pre></td></tr></table></figure>
<p>Install specific Django version :</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo pip install Django==<span class="number">2.1</span><span class="number">.2</span></div></pre></td></tr></table></figure>
<p>Create a project</p>
<figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="title">cd</span> /<span class="class"><span class="keyword">data</span></span></div><div class="line"><span class="title">sudo</span> django-admin startproject helloworld</div></pre></td></tr></table></figure>
<p>Modify the write permission for everyone :</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod <span class="number">666</span> <span class="regexp">/data/</span>helloworld<span class="regexp">/helloworld/</span>settings.py</div></pre></td></tr></table></figure>
<p>Edit the settings:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> helloworld/helloworld/</span></div><div class="line"><span class="meta">$</span><span class="bash"> vim settings.py</span></div></pre></td></tr></table></figure>
<p>Add your IP in <code>ALLOWED_HOSTS = []</code> to  <code>ALLOWED_HOSTS = [&quot;188.131.***.***&quot;]</code></p>
<p>Save and quit vim:<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">:wq</span></div></pre></td></tr></table></figure></p>
<p>Open port 8080 in Baota Panel:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2018/18122802.jpg" alt="Open port 808"></p>
<p>Or set in Tencent Cloud:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2018/18122803.jpg" alt="Open port 808"></p>
<p>Run the project :</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ../</span></div><div class="line"><span class="meta">$</span><span class="bash"> sudo python manage.py runserver 0.0.0.0:8080</span></div></pre></td></tr></table></figure>
<p>Visit the website:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2018/18122804.jpg" alt="website"></p>
<p>Reference:<br><a href="https://www.bt.cn/bbs/thread-8889-1-3.html" target="_blank" rel="external">ubuntu + nginx + uwsgi + django(python3)</a><br><a href="https://www.cnblogs.com/dalanjing/p/8636338.html" target="_blank" rel="external">python3+Django</a></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![Django Enviroment in Tencent Cloud Ubuntu][1] --&gt;
&lt;h2 id=&quot;Enviroment&quot;&gt;&lt;a href=&quot;#Enviroment&quot; class=&quot;headerlink&quot; title=&quot;Enviroment:&quot;&gt;&lt;/a&gt;Enviroment:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;MacOS&lt;/li&gt;
&lt;li&gt;Tencent Cloud Ubuntu 18.04&lt;/li&gt;
&lt;li&gt;Python 3.6&lt;/li&gt;
&lt;li&gt;Django 2.0&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python" scheme="http://laker.me/blog/categories/Python/"/>
    
    
      <category term="Server" scheme="http://laker.me/blog/tags/Server/"/>
    
      <category term="Tencent Cloud" scheme="http://laker.me/blog/tags/Tencent-Cloud/"/>
    
      <category term="MySql" scheme="http://laker.me/blog/tags/MySql/"/>
    
      <category term="Python" scheme="http://laker.me/blog/tags/Python/"/>
    
      <category term="Django" scheme="http://laker.me/blog/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Use ThinkPHP Develope API</title>
    <link href="http://laker.me/blog/2018/12/19/18_1219_wechat/"/>
    <id>http://laker.me/blog/2018/12/19/18_1219_wechat/</id>
    <published>2018-12-19T00:24:00.000Z</published>
    <updated>2019-05-29T07:21:47.000Z</updated>
    
    <content type="html"><![CDATA[<!-- ![Use ThinkPHP Develope WeChat Official Account API](http://wx3.sinaimg.cn/large/6d184cefly1fxnkwr63qej20oz046aay.jpg) -->
<h2 id="Create-database-data"><a href="#Create-database-data" class="headerlink" title="Create database data"></a>Create database data</h2><p>Import this sql file into your database, you can commit execute sql or import by tools:</p>
<a id="more"></a>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Table structure for news</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`news`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`news`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`content`</span> <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=MyISAM AUTO_INCREMENT=<span class="number">5</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'新闻表'</span>;</div><div class="line"></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="comment">-- Records of news</span></div><div class="line"><span class="comment">-- ----------------------------</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'新闻1'</span>, <span class="string">'新闻1内容'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'新闻2'</span>, <span class="string">'新闻2内容'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'新闻3'</span>, <span class="string">'新闻3内容'</span>);</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">'房价又涨了'</span>, <span class="string">'据新华社消息：上海均价环比上涨5%'</span>);</div></pre></td></tr></table></figure>
<h2 id="Write-API"><a href="#Write-API" class="headerlink" title="Write API"></a>Write API</h2><p>Wechat Official Account documents:<br><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140840" target="_blank" rel="external">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140840</a></p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2018/18121901.jpg" alt="image"></p>
<p>New files: <code>application/api/controller/News.php</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">News</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        $id = input(<span class="string">'id'</span>);</div><div class="line">        $model = model(<span class="string">'News'</span>);</div><div class="line">        $data = $model-&gt;getNews($id);</div><div class="line">        <span class="keyword">if</span> ($data) &#123;</div><div class="line">            $code = <span class="number">200</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            $code = <span class="number">404</span>;</div><div class="line">        &#125;</div><div class="line">        $data = [</div><div class="line">            <span class="string">'code'</span> =&gt; $code,</div><div class="line">            <span class="string">'data'</span> =&gt; $data</div><div class="line">        ];</div><div class="line">        <span class="keyword">return</span> json($data);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>New files: <code>application/api/model/News.php</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">model</span>;</div><div class="line"></div><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">News</span> <span class="keyword">extends</span> <span class="title">Model</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNews</span><span class="params">($id = <span class="number">1</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        $res = Db::name(<span class="string">'news'</span>)-&gt;where(<span class="string">'id'</span>, $id)-&gt;select();</div><div class="line">        <span class="keyword">return</span> $res;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewsList</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        $res = Db::name(<span class="string">'news'</span>)-&gt;select();</div><div class="line">        <span class="keyword">return</span> $res;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Visit API:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2018/18121902.jpg" alt="image"></p>
<h2 id="Shorten-API-address"><a href="#Shorten-API-address" class="headerlink" title="Shorten API address"></a>Shorten API address</h2><p>According to the ThinkPHP router rules, we can edit it in <code>application/route.php</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Route</span>;</div><div class="line"></div><div class="line">Route::rule(<span class="string">'news/:id'</span>,<span class="string">'api/news/read'</span>);</div></pre></td></tr></table></figure>
<p>Visit new route:</p>
<p><img src="https://raw.githubusercontent.com/aomine-sama/px/master/2018/18121903.jpg" alt="image"></p>
<blockquote>
<p>Exchange blogroll： <a href="http://laker.me/blog">http://laker.me/blog</a><br>Github：<a href="https://github.com/younglaker" target="_blank" rel="external">https://github.com/younglaker</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![Use ThinkPHP Develope WeChat Official Account API](http://wx3.sinaimg.cn/large/6d184cefly1fxnkwr63qej20oz046aay.jpg) --&gt;
&lt;h2 id=&quot;Create-database-data&quot;&gt;&lt;a href=&quot;#Create-database-data&quot; class=&quot;headerlink&quot; title=&quot;Create database data&quot;&gt;&lt;/a&gt;Create database data&lt;/h2&gt;&lt;p&gt;Import this sql file into your database, you can commit execute sql or import by tools:&lt;/p&gt;
    
    </summary>
    
      <category term="Server" scheme="http://laker.me/blog/categories/Server/"/>
    
    
      <category term="Server" scheme="http://laker.me/blog/tags/Server/"/>
    
      <category term="PHP" scheme="http://laker.me/blog/tags/PHP/"/>
    
      <category term="Tencent Cloud" scheme="http://laker.me/blog/tags/Tencent-Cloud/"/>
    
      <category term="ThinkPHP" scheme="http://laker.me/blog/tags/ThinkPHP/"/>
    
      <category term="MySql" scheme="http://laker.me/blog/tags/MySql/"/>
    
  </entry>
  
</feed>
